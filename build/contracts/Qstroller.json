{
  "contractName": "Qstroller",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "action",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "pauseState",
          "type": "bool"
        }
      ],
      "name": "ActionPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "action",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "pauseState",
          "type": "bool"
        }
      ],
      "name": "ActionPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSpeed",
          "type": "uint256"
        }
      ],
      "name": "CompSpeedUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compBorrowIndex",
          "type": "uint256"
        }
      ],
      "name": "DistributedBorrowerComp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supplier",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compSupplyIndex",
          "type": "uint256"
        }
      ],
      "name": "DistributedSupplierComp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "error",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "info",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "detail",
          "type": "uint256"
        }
      ],
      "name": "Failure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isComped",
          "type": "bool"
        }
      ],
      "name": "MarketComped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MarketEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MarketExited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "MarketListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldCloseFactorMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCloseFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewCloseFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldCollateralFactorMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCollateralFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewCollateralFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldCompRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCompRate",
          "type": "uint256"
        }
      ],
      "name": "NewCompRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldLiquidationIncentiveMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLiquidationIncentiveMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewLiquidationIncentive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxAssets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxAssets",
          "type": "uint256"
        }
      ],
      "name": "NewMaxAssets",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPauseGuardian",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPauseGuardian",
          "type": "address"
        }
      ],
      "name": "NewPauseGuardian",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract PriceOracle",
          "name": "oldPriceOracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract PriceOracle",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "NewPriceOracle",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "cTokens",
          "type": "address[]"
        }
      ],
      "name": "_addCompMarkets",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract Unitroller",
          "name": "unitroller",
          "type": "address"
        }
      ],
      "name": "_become",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_borrowGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "_dropCompMarket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_mintGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "_setBorrowPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newCloseFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setCloseFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newCollateralFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setCollateralFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "compRate_",
          "type": "uint256"
        }
      ],
      "name": "_setCompRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLiquidationIncentiveMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setLiquidationIncentive",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxAssets",
          "type": "uint256"
        }
      ],
      "name": "_setMaxAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "_setMintPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPauseGuardian",
          "type": "address"
        }
      ],
      "name": "_setPauseGuardian",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract PriceOracle",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "_setPriceOracle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "_setSeizePaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "_setTransferPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "_supportMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accountAssets",
      "outputs": [
        {
          "internalType": "contract CToken",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allMarkets",
      "outputs": [
        {
          "internalType": "contract CToken",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrowAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrowVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "checkMembership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "contract CToken[]",
          "name": "cTokens",
          "type": "address[]"
        }
      ],
      "name": "claimComp",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "holders",
          "type": "address[]"
        },
        {
          "internalType": "contract CToken[]",
          "name": "cTokens",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "borrowers",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "suppliers",
          "type": "bool"
        }
      ],
      "name": "claimComp",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "claimComp",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closeFactorMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compBorrowState",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "index",
          "type": "uint224"
        },
        {
          "internalType": "uint32",
          "name": "block",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compBorrowerIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "compClaimThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "compInitialIndex",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "",
          "type": "uint224"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "compRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compSpeeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compSupplierIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compSupplyState",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "index",
          "type": "uint224"
        },
        {
          "internalType": "uint32",
          "name": "block",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "comptrollerImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "cTokens",
          "type": "address[]"
        }
      ],
      "name": "enterMarkets",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenAddress",
          "type": "address"
        }
      ],
      "name": "exitMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllMarkets",
      "outputs": [
        {
          "internalType": "contract CToken[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAssetsIn",
      "outputs": [
        {
          "internalType": "contract CToken[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenModify",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "getHypotheticalAccountLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isComptroller",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenBorrowed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        }
      ],
      "name": "liquidateBorrowAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenBorrowed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "actualRepayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "liquidateBorrowVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenBorrowed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "actualRepayAmount",
          "type": "uint256"
        }
      ],
      "name": "liquidateCalculateSeizeTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "liquidationIncentiveMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isListed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateralFactorMantissa",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isComped",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mintGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "actualMintAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mintTokens",
          "type": "uint256"
        }
      ],
      "name": "mintVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract PriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pauseGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingComptrollerImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "qsConfig",
      "outputs": [
        {
          "internalType": "contract QsConfig",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeemAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeemVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        }
      ],
      "name": "repayBorrowAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "actualRepayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowerIndex",
          "type": "uint256"
        }
      ],
      "name": "repayBorrowVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenBorrowed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "seizeAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "seizeGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenBorrowed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "seizeVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "transferTokens",
          "type": "uint256"
        }
      ],
      "name": "transferAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transferGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "transferTokens",
          "type": "uint256"
        }
      ],
      "name": "transferVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract QsConfig",
          "name": "_qsConfig",
          "type": "address"
        }
      ],
      "name": "_setQsConfig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_allMarkets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_compSpeeds",
          "type": "uint256[]"
        }
      ],
      "name": "_setCompSpeeds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "refreshCompSpeeds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCompAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_seizeTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSeizeTokenAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidatorAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "safetyVaultAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "mintAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"pauseState\",\"type\":\"bool\"}],\"name\":\"ActionPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"pauseState\",\"type\":\"bool\"}],\"name\":\"ActionPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSpeed\",\"type\":\"uint256\"}],\"name\":\"CompSpeedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"DistributedBorrowerComp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supplier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compSupplyIndex\",\"type\":\"uint256\"}],\"name\":\"DistributedSupplierComp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"error\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"detail\",\"type\":\"uint256\"}],\"name\":\"Failure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isComped\",\"type\":\"bool\"}],\"name\":\"MarketComped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MarketEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MarketExited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"MarketListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCloseFactorMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCloseFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"NewCloseFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCollateralFactorMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCollateralFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"NewCollateralFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCompRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCompRate\",\"type\":\"uint256\"}],\"name\":\"NewCompRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldLiquidationIncentiveMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLiquidationIncentiveMantissa\",\"type\":\"uint256\"}],\"name\":\"NewLiquidationIncentive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxAssets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxAssets\",\"type\":\"uint256\"}],\"name\":\"NewMaxAssets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPauseGuardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPauseGuardian\",\"type\":\"address\"}],\"name\":\"NewPauseGuardian\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract PriceOracle\",\"name\":\"oldPriceOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract PriceOracle\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"NewPriceOracle\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"name\":\"_addCompMarkets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract Unitroller\",\"name\":\"unitroller\",\"type\":\"address\"}],\"name\":\"_become\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_borrowGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"_dropCompMarket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_mintGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"_setBorrowPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCloseFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"_setCloseFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newCollateralFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"_setCollateralFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"compRate_\",\"type\":\"uint256\"}],\"name\":\"_setCompRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_allMarkets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_compSpeeds\",\"type\":\"uint256[]\"}],\"name\":\"_setCompSpeeds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLiquidationIncentiveMantissa\",\"type\":\"uint256\"}],\"name\":\"_setLiquidationIncentive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxAssets\",\"type\":\"uint256\"}],\"name\":\"_setMaxAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"_setMintPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPauseGuardian\",\"type\":\"address\"}],\"name\":\"_setPauseGuardian\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract PriceOracle\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"_setPriceOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract QsConfig\",\"name\":\"_qsConfig\",\"type\":\"address\"}],\"name\":\"_setQsConfig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"_setSeizePaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"_setTransferPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"_supportMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountAssets\",\"outputs\":[{\"internalType\":\"contract CToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allMarkets\",\"outputs\":[{\"internalType\":\"contract CToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrowAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrowVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seizeTokenAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSeizeTokenAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyVaultAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"checkMembership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"contract CToken[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"name\":\"claimComp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"holders\",\"type\":\"address[]\"},{\"internalType\":\"contract CToken[]\",\"name\":\"cTokens\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"borrowers\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"suppliers\",\"type\":\"bool\"}],\"name\":\"claimComp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"claimComp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closeFactorMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compBorrowState\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"index\",\"type\":\"uint224\"},{\"internalType\":\"uint32\",\"name\":\"block\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compBorrowerIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"compClaimThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"compInitialIndex\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"\",\"type\":\"uint224\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"compRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compSpeeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compSupplierIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compSupplyState\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"index\",\"type\":\"uint224\"},{\"internalType\":\"uint32\",\"name\":\"block\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"comptrollerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"name\":\"enterMarkets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenAddress\",\"type\":\"address\"}],\"name\":\"exitMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllMarkets\",\"outputs\":[{\"internalType\":\"contract CToken[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAssetsIn\",\"outputs\":[{\"internalType\":\"contract CToken[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCompAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenModify\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"getHypotheticalAccountLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isComptroller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenBorrowed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"liquidateBorrowAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenBorrowed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"actualRepayAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"liquidateBorrowVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenBorrowed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"actualRepayAmount\",\"type\":\"uint256\"}],\"name\":\"liquidateCalculateSeizeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquidationIncentiveMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isComped\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mintAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"actualMintAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintTokens\",\"type\":\"uint256\"}],\"name\":\"mintVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract PriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pauseGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingComptrollerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"qsConfig\",\"outputs\":[{\"internalType\":\"contract QsConfig\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeemAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeemVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refreshCompSpeeds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"repayBorrowAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"actualRepayAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowerIndex\",\"type\":\"uint256\"}],\"name\":\"repayBorrowVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenBorrowed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"seizeAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seizeGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenBorrowed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"seizeVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferTokens\",\"type\":\"uint256\"}],\"name\":\"transferAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferTokens\",\"type\":\"uint256\"}],\"name\":\"transferVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_addCompMarkets(address[])\":{\"params\":{\"cTokens\":\"The addresses of the markets to add\"}},\"_dropCompMarket(address)\":{\"params\":{\"cToken\":\"The address of the market to drop\"}},\"_setCloseFactor(uint256)\":{\"details\":\"Admin function to set closeFactor\",\"params\":{\"newCloseFactorMantissa\":\"New close factor, scaled by 1e18\"},\"return\":\"uint 0=success, otherwise a failure. (See ErrorReporter for details)\"},\"_setCollateralFactor(address,uint256)\":{\"details\":\"Admin function to set per-market collateralFactor\",\"params\":{\"cToken\":\"The market to set the factor on\",\"newCollateralFactorMantissa\":\"The new collateral factor, scaled by 1e18\"},\"return\":\"uint 0=success, otherwise a failure. (See ErrorReporter for details)\"},\"_setCompRate(uint256)\":{\"params\":{\"compRate_\":\"The amount of COMP wei per block to distribute\"}},\"_setCompSpeeds(address[],uint256[])\":{\"details\":\"Admin function to set new token distribution speed\"},\"_setLiquidationIncentive(uint256)\":{\"details\":\"Admin function to set liquidationIncentive\",\"params\":{\"newLiquidationIncentiveMantissa\":\"New liquidationIncentive scaled by 1e18\"},\"return\":\"uint 0=success, otherwise a failure. (See ErrorReporter for details)\"},\"_setMaxAssets(uint256)\":{\"details\":\"Admin function to set maxAssets\",\"params\":{\"newMaxAssets\":\"New max assets\"},\"return\":\"uint 0=success, otherwise a failure. (See ErrorReporter for details)\"},\"_setPauseGuardian(address)\":{\"params\":{\"newPauseGuardian\":\"The address of the new Pause Guardian\"},\"return\":\"uint 0=success, otherwise a failure. (See enum Error for details)\"},\"_setPriceOracle(address)\":{\"details\":\"Admin function to set a new price oracle\",\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_supportMarket(address)\":{\"details\":\"Admin function to set isListed and add support for the market\",\"params\":{\"cToken\":\"The address of the market (token) to list\"},\"return\":\"uint 0=success, otherwise a failure. (See enum Error for details)\"},\"borrowAllowed(address,address,uint256)\":{\"params\":{\"borrowAmount\":\"The amount of underlying the account would borrow\",\"borrower\":\"The account which would borrow the asset\",\"cToken\":\"The market to verify the borrow against\"},\"return\":\"0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\"},\"borrowVerify(address,address,uint256)\":{\"params\":{\"borrowAmount\":\"The amount of the underlying asset requested to borrow\",\"borrower\":\"The address borrowing the underlying\",\"cToken\":\"Asset whose underlying is being borrowed\"}},\"checkMembership(address,address)\":{\"params\":{\"account\":\"The address of the account to check\",\"cToken\":\"The cToken to check\"},\"return\":\"True if the account is in the asset, otherwise false.\"},\"claimComp(address)\":{\"params\":{\"holder\":\"The address to claim COMP for\"}},\"claimComp(address,address[])\":{\"params\":{\"cTokens\":\"The list of markets to claim COMP in\",\"holder\":\"The address to claim COMP for\"}},\"claimComp(address[],address[],bool,bool)\":{\"params\":{\"borrowers\":\"Whether or not to claim COMP earned by borrowing\",\"cTokens\":\"The list of markets to claim COMP in\",\"holders\":\"The addresses to claim COMP for\",\"suppliers\":\"Whether or not to claim COMP earned by supplying\"}},\"enterMarkets(address[])\":{\"params\":{\"cTokens\":\"The list of addresses of the cToken markets to be enabled\"},\"return\":\"Success indicator for whether each corresponding market was entered\"},\"exitMarket(address)\":{\"details\":\"Sender must not have an outstanding borrow balance in the asset, or be providing necessary collateral for an outstanding borrow.\",\"params\":{\"cTokenAddress\":\"The address of the asset to be removed\"},\"return\":\"Whether or not the account successfully exited the market\"},\"getAccountLiquidity(address)\":{\"return\":\"(possible error code (semi-opaque), account liquidity in excess of collateral requirements,         account shortfall below collateral requirements)\"},\"getAllMarkets()\":{\"details\":\"The automatic getter may be used to access an individual market.\",\"return\":\"The list of market addresses\"},\"getAssetsIn(address)\":{\"params\":{\"account\":\"The address of the account to pull assets for\"},\"return\":\"A dynamic list with the assets the account has entered\"},\"getHypotheticalAccountLiquidity(address,address,uint256,uint256)\":{\"params\":{\"account\":\"The account to determine liquidity for\",\"borrowAmount\":\"The amount of underlying to hypothetically borrow\",\"cTokenModify\":\"The market to hypothetically redeem/borrow in\",\"redeemTokens\":\"The number of tokens to hypothetically redeem\"},\"return\":\"(possible error code (semi-opaque), hypothetical account liquidity in excess of collateral requirements,         hypothetical account shortfall below collateral requirements)\"},\"liquidateBorrowAllowed(address,address,address,address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"cTokenBorrowed\":\"Asset which was borrowed by the borrower\",\"cTokenCollateral\":\"Asset which was used as collateral and will be seized\",\"liquidator\":\"The address repaying the borrow and seizing the collateral\",\"repayAmount\":\"The amount of underlying being repaid\"}},\"liquidateBorrowVerify(address,address,address,address,uint256,uint256)\":{\"params\":{\"actualRepayAmount\":\"The amount of underlying being repaid\",\"borrower\":\"The address of the borrower\",\"cTokenBorrowed\":\"Asset which was borrowed by the borrower\",\"cTokenCollateral\":\"Asset which was used as collateral and will be seized\",\"liquidator\":\"The address repaying the borrow and seizing the collateral\"}},\"liquidateCalculateSeizeTokens(address,address,uint256)\":{\"details\":\"Used in liquidation (called in cToken.liquidateBorrowFresh)\",\"params\":{\"actualRepayAmount\":\"The amount of cTokenBorrowed underlying to convert into cTokenCollateral tokens\",\"cTokenBorrowed\":\"The address of the borrowed cToken\",\"cTokenCollateral\":\"The address of the collateral cToken\"},\"return\":\"(errorCode, number of cTokenCollateral tokens to be seized in a liquidation)\"},\"mintAllowed(address,address,uint256)\":{\"params\":{\"cToken\":\"The market to verify the mint against\",\"mintAmount\":\"The amount of underlying being supplied to the market in exchange for tokens\",\"minter\":\"The account which would get the minted tokens\"},\"return\":\"0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\"},\"mintVerify(address,address,uint256,uint256)\":{\"params\":{\"actualMintAmount\":\"The amount of the underlying asset being minted\",\"cToken\":\"Asset being minted\",\"mintTokens\":\"The number of tokens being minted\",\"minter\":\"The address minting the tokens\"}},\"redeemAllowed(address,address,uint256)\":{\"params\":{\"cToken\":\"The market to verify the redeem against\",\"redeemTokens\":\"The number of cTokens to exchange for the underlying asset in the market\",\"redeemer\":\"The account which would redeem the tokens\"},\"return\":\"0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\"},\"redeemVerify(address,address,uint256,uint256)\":{\"params\":{\"cToken\":\"Asset being redeemed\",\"redeemAmount\":\"The amount of the underlying asset being redeemed\",\"redeemTokens\":\"The number of tokens being redeemed\",\"redeemer\":\"The address redeeming the tokens\"}},\"repayBorrowAllowed(address,address,address,uint256)\":{\"params\":{\"borrower\":\"The account which would borrowed the asset\",\"cToken\":\"The market to verify the repay against\",\"payer\":\"The account which would repay the asset\",\"repayAmount\":\"The amount of the underlying asset the account would repay\"},\"return\":\"0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\"},\"repayBorrowVerify(address,address,address,uint256,uint256)\":{\"params\":{\"actualRepayAmount\":\"The amount of underlying being repaid\",\"borrower\":\"The address of the borrower\",\"cToken\":\"Asset being repaid\",\"payer\":\"The address repaying the borrow\"}},\"seizeAllowed(address,address,address,address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"cTokenBorrowed\":\"Asset which was borrowed by the borrower\",\"cTokenCollateral\":\"Asset which was used as collateral and will be seized\",\"liquidator\":\"The address repaying the borrow and seizing the collateral\",\"seizeTokens\":\"The number of collateral tokens to seize\"}},\"seizeVerify(address,address,address,address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"cTokenBorrowed\":\"Asset which was borrowed by the borrower\",\"cTokenCollateral\":\"Asset which was used as collateral and will be seized\",\"liquidator\":\"The address repaying the borrow and seizing the collateral\",\"seizeTokens\":\"The number of collateral tokens to seize\"}},\"transferAllowed(address,address,address,uint256)\":{\"params\":{\"cToken\":\"The market to verify the transfer against\",\"dst\":\"The account which receives the tokens\",\"src\":\"The account which sources the tokens\",\"transferTokens\":\"The number of cTokens to transfer\"},\"return\":\"0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\"},\"transferVerify(address,address,address,uint256)\":{\"params\":{\"cToken\":\"Asset being transferred\",\"dst\":\"The account which receives the tokens\",\"src\":\"The account which sources the tokens\",\"transferTokens\":\"The number of cTokens to transfer\"}}}},\"userdoc\":{\"methods\":{\"_addCompMarkets(address[])\":{\"notice\":\"Add markets to compMarkets, allowing them to earn COMP in the flywheel\"},\"_dropCompMarket(address)\":{\"notice\":\"Remove a market from compMarkets, preventing it from earning COMP in the flywheel\"},\"_setCloseFactor(uint256)\":{\"notice\":\"Sets the closeFactor used when liquidating borrows\"},\"_setCollateralFactor(address,uint256)\":{\"notice\":\"Sets the collateralFactor for a market\"},\"_setCompRate(uint256)\":{\"notice\":\"Set the amount of COMP distributed per block\"},\"_setCompSpeeds(address[],uint256[])\":{\"notice\":\"Sets new governance token distribution speed\"},\"_setLiquidationIncentive(uint256)\":{\"notice\":\"Sets liquidationIncentive\"},\"_setMaxAssets(uint256)\":{\"notice\":\"Sets maxAssets which controls how many markets can be entered\"},\"_setPauseGuardian(address)\":{\"notice\":\"Admin function to change the Pause Guardian\"},\"_setPriceOracle(address)\":{\"notice\":\"Sets a new price oracle for the comptroller\"},\"_supportMarket(address)\":{\"notice\":\"Add the market to the markets mapping and set it as listed\"},\"borrowAllowed(address,address,uint256)\":{\"notice\":\"Checks if the account should be allowed to borrow the underlying asset of the given market\"},\"borrowVerify(address,address,uint256)\":{\"notice\":\"Validates borrow and reverts on rejection. May emit logs.\"},\"checkMembership(address,address)\":{\"notice\":\"Returns whether the given account is entered in the given asset\"},\"claimComp(address)\":{\"notice\":\"Claim all the comp accrued by holder in all markets\"},\"claimComp(address,address[])\":{\"notice\":\"Claim all the comp accrued by holder in the specified markets\"},\"claimComp(address[],address[],bool,bool)\":{\"notice\":\"Claim all comp accrued by the holders\"},\"enterMarkets(address[])\":{\"notice\":\"Add assets to be included in account liquidity calculation\"},\"exitMarket(address)\":{\"notice\":\"Removes asset from sender's account liquidity calculation\"},\"getAccountLiquidity(address)\":{\"notice\":\"Determine the current account liquidity wrt collateral requirements\"},\"getAllMarkets()\":{\"notice\":\"Return all of the markets\"},\"getAssetsIn(address)\":{\"notice\":\"Returns the assets an account has entered\"},\"getHypotheticalAccountLiquidity(address,address,uint256,uint256)\":{\"notice\":\"Determine what the account liquidity would be if the given amounts were redeemed/borrowed\"},\"liquidateBorrowAllowed(address,address,address,address,uint256)\":{\"notice\":\"Checks if the liquidation should be allowed to occur\"},\"liquidateBorrowVerify(address,address,address,address,uint256,uint256)\":{\"notice\":\"Validates liquidateBorrow and reverts on rejection. May emit logs.\"},\"liquidateCalculateSeizeTokens(address,address,uint256)\":{\"notice\":\"Calculate number of tokens of collateral asset to seize given an underlying amount\"},\"mintAllowed(address,address,uint256)\":{\"notice\":\"Checks if the account should be allowed to mint tokens in the given market\"},\"mintVerify(address,address,uint256,uint256)\":{\"notice\":\"Validates mint and reverts on rejection. May emit logs.\"},\"redeemAllowed(address,address,uint256)\":{\"notice\":\"Checks if the account should be allowed to redeem tokens in the given market\"},\"redeemVerify(address,address,uint256,uint256)\":{\"notice\":\"Validates redeem and reverts on rejection. May emit logs.\"},\"repayBorrowAllowed(address,address,address,uint256)\":{\"notice\":\"Checks if the account should be allowed to repay a borrow in the given market\"},\"repayBorrowVerify(address,address,address,uint256,uint256)\":{\"notice\":\"Validates repayBorrow and reverts on rejection. May emit logs.\"},\"seizeAllowed(address,address,address,address,uint256)\":{\"notice\":\"Checks if the seizing of assets should be allowed to occur\"},\"seizeVerify(address,address,address,address,uint256)\":{\"notice\":\"Validates seize and reverts on rejection. May emit logs.\"},\"transferAllowed(address,address,address,uint256)\":{\"notice\":\"Checks if the account should be allowed to transfer tokens in the given market\"},\"transferVerify(address,address,address,uint256)\":{\"notice\":\"Validates transfer and reverts on rejection. May emit logs.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/Qstroller.sol\":\"Qstroller\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/Ownable.sol\":{\"keccak256\":\"0xa9a8fac085ea67f25333b2b32b4b1aa9693a251e17e724ba0c00b50d6ddb81b6\",\"urls\":[\"bzz-raw://daea04c657abbd5b719f455ce2a320e5d7cc751ce4ce267fdc3edfe1642ec697\",\"dweb:/ipfs/QmQmvQHdecLKUxYPBiubBBsW7gPUNydWXAF4iZ7ouHJvLa\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/QsConfig.sol\":{\"keccak256\":\"0x59b0050e81f67c7c27a8c05a4443333b269f404364e4a10ac31c6d279d933a74\",\"urls\":[\"bzz-raw://4045894d896c73cc6481224226b51efe64fe5f0c761f237c00862c306fc8f66f\",\"dweb:/ipfs/QmcqgPX8a73KbjAbULPYUUE2c2PkJknZnF1NwF3co5Dg9N\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/Qstroller.sol\":{\"keccak256\":\"0x00ac36f41088060242ccd902b7370580969dfa3f7b66ba2bf0d1b4904eb09034\",\"urls\":[\"bzz-raw://78d7e62fc02bcf7793f110e20949e8345aebe2e555fa04dfcb29489c2f495a43\",\"dweb:/ipfs/QmZgueWV6CBLpFhKo3yaURJjXNiqQENLfCnLLJ62ueu7o6\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/CToken.sol\":{\"keccak256\":\"0xb1be3cfd7be68f319e5500183788d60f571c057c68b219d1017421dbe8335655\",\"urls\":[\"bzz-raw://fdfaae72c5e71f6ebff0883d43a0ac311e51e5b0c37632caba2034dd1f0467e4\",\"dweb:/ipfs/QmfN85ft4y1wUrcmjtZMethCa4cbgpabEsg957dxebzNFW\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/CTokenInterfaces.sol\":{\"keccak256\":\"0xbedd7a46507f6e249f4019c9cadf95d5e3af38fa914c9572a81f6d79c946bd66\",\"urls\":[\"bzz-raw://d3b56940e52267ebaf199d907a65a01565fddddb5ff9fc1c41cf0033f04266e9\",\"dweb:/ipfs/QmS758sZoFK3MV16oNZyiMEjU4MECXAMpyMKLtz1hauhK5\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/CarefulMath.sol\":{\"keccak256\":\"0x0647348f27e41d22555d99eebd217dee02a4d737df6accd7cce5347a7487c7de\",\"urls\":[\"bzz-raw://08882d26c11a6d240949a5afba79a74694a8b651093c05c5ae4cc359a0181c22\",\"dweb:/ipfs/QmVXb1tDswuhMRNuDLajzohdkvx2kBmqu1Rxn1BAKUfhkV\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/Comptroller.sol\":{\"keccak256\":\"0x73946ce6c6a7471f2e7797fffb24a8a97a992acb3994a57d1452a7e46d9e152e\",\"urls\":[\"bzz-raw://348e0688e548694b4ca947e58f3d7a57806effadbd9a479356bb47ce3fc5f811\",\"dweb:/ipfs/QmZ9DWEfWrFn3tSBRoC1D26srqRjUxwC1YuE66oSbTRxTY\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/ComptrollerInterface.sol\":{\"keccak256\":\"0xede7670d2dd7b25d0187aecd2c28b7b5ca7d7c1bdac144fbedecf5d4bdd92a6b\",\"urls\":[\"bzz-raw://ffeffe133548cc3b8e97b040b12ae5e041d84f9b482f45b7d536d78eaf6c1550\",\"dweb:/ipfs/QmWYsBjz19U4aBbJmQ96A5sa23UKZnaS3k8oN8bNTyAUsz\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/ComptrollerStorage.sol\":{\"keccak256\":\"0x4cdd6e2b3db0368fe5d6cd84e0df65131e019170cd4bfbf5c83d067253786929\",\"urls\":[\"bzz-raw://81b448160d92a8c99597c9dbcd554dd750f0179fd9b3f995cb5111bee02d22e1\",\"dweb:/ipfs/QmYpgkAx9DRmPHr1ZUwyjBXo96KGLgxC72wpv5CXUraBv1\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/EIP20Interface.sol\":{\"keccak256\":\"0xfd8ed2eac6d0b4d9ee6b32628ba68bae17544b66f190a5f7ce0c6ad024579dc8\",\"urls\":[\"bzz-raw://701be308137fe36f221f1d7c815247a272638df40917e7d1456b3b16e8402897\",\"dweb:/ipfs/QmPDkPoKiWXMjwpGa65JHBjo5NH8AA3q1nMhsewfUZHjpx\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/EIP20NonStandardInterface.sol\":{\"keccak256\":\"0x9719f12e4b80b51147ac195553a198cf8b0c516e7e4d04fc324a23ed15cbafb2\",\"urls\":[\"bzz-raw://50c3ba49b80106c88b0171390aa4127edc86f7b29607abe3dc6d08eaefebf837\",\"dweb:/ipfs/QmP6AHNmFdwYwWUeHnhYi3drCQy4dpnnqUbkMeU3oAtokj\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/ErrorReporter.sol\":{\"keccak256\":\"0x5179afb1071c0fd555e5c1f1d2565f72dbe1740cc3dd02f6e52037f150afc5c9\",\"urls\":[\"bzz-raw://691454eb195c6ec77409cf681ef6929c8102e65d25dd563bf2a93c04eaceeb9f\",\"dweb:/ipfs/QmegumxJuZ5yeDmJoahzGfH4EV4d1XFvmH1vNfdcdcrWJi\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/Exponential.sol\":{\"keccak256\":\"0xaa59feeb5759614eb9a9af023f843e5e638f4cff7df0060c2f8b2b804d13db7f\",\"urls\":[\"bzz-raw://dca42502fe6f9edc87a73491663c985181c91921ee2db53dc72bd05ab939d681\",\"dweb:/ipfs/QmbiGFW5x1WA6V9nzQrs868cHzcz1W5X9GiMPKK4TFR7qp\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/InterestRateModel.sol\":{\"keccak256\":\"0x081c9ed2b26861141f9d133cd6bcfac29f7abbaf12a09881fb2b37741ecbbfee\",\"urls\":[\"bzz-raw://9832e689adf59ef6c720caed52f5467c85a6f3178953fa1cd35552db6fd3d3c8\",\"dweb:/ipfs/QmRCP3R8agPNeAeRf2qQX5GeixXk34NtZGVSvHBtLZieQQ\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/PriceOracle.sol\":{\"keccak256\":\"0xe79ebc23bba508eb2479e7b3340abf566da1ab62131f106aee1aac3dc53816ef\",\"urls\":[\"bzz-raw://9b4c1daa3dbc6e8f3c9ca3345c93fc72644578ad755e48115014c23e054fdeeb\",\"dweb:/ipfs/QmcuAYQCJRKW6nMAXfPUwqxM6tBLwrbPqmVQs9oYC8Hmmq\"]},\"/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/Unitroller.sol\":{\"keccak256\":\"0x51f81451eab9d5c4849507e724f2b2c53e41f54e5359fdbeae89432a727c16df\",\"urls\":[\"bzz-raw://4cd19a3cc1522e736270fe14911875c2baaa6c03c76d4d2d0e18e3af4ac4ea0b\",\"dweb:/ipfs/QmSbCFBHFnNHMBKVPtE53x3Cz4kLWoBaci4S3qwqLBqr5N\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103885760003560e01c8063747026c9116101e1578063bb82aa5e1161010b578063bb82aa5e14610e93578063bdcdc25814610e9b578063c299823814610ed7578063c488847b14610f78578063ca0af04314610fae578063cc7ebdc414610fdc578063ce485c5e14611002578063d02f7351146110a3578063d9226ced146110e9578063da3d454c14611106578063dce154491461113c578063dcfbc0c714611168578063e4028eee14611170578063e6653f3d1461119c578063e8755446146111a4578063e9af0292146111ac578063eabe7d91146111d2578063ede4edd014611208578063f851a4401461122e57610388565b8063747026c914610b2b5780637dc0d1d014610b335780637e60c7a014610b3b5780638730657714610c5e57806387f7630314610c945780638c57804e14610c9c5780638e8f294b14610cc25780638ebf636414610d0a578063929fe9a114610d2957806393168a5b14610d5757806394b2294b14610d7d5780639d1b5a0a14610d85578063a76b3fda14610d8d578063a7f0e23114610db3578063aa90075414610dd7578063abfceffc14610ddf578063ac0b0bb714610e55578063b0772d0b14610e5d578063b21be7fd14610e6557610388565b80634d8e5037116102c25780634d8e5037146106c25780634e79238f146106ca5780634ef4c3e1146107245780634fd42e171461075a57806351dff9891461077757806352d84d1e146107b357806355ee1fe1146107d05780635c778605146107f65780635ec88c791461082c5780635f5af1aa146108525780635fc7e71e146108785780636810dfa6146108be5780636995d7d0146109ea5780636a491112146109f25780636a56947e14610a0f5780636b79c38d14610a4b5780636d154ea514610a995780636d35bf9114610abf578063731f0c2b14610b0557610388565b80627e3dd21461038d57806318c882a5146103a95780631c3db2e0146103d75780631d504dc61461048a5780631d7b33d7146104b05780631ededc91146104e857806324008a621461052a57806324a3d62214610566578063267822471461058a5780632d70db7814610592578063317b0b77146105b15780633aa729b4146105ce5780633bcf7ec1146105f45780633c94786f1461062257806341c728b91461062a57806342cbb15c1461066657806347ef3b3b1461066e5780634ada90af146106ba575b600080fd5b610395611236565b604080519115158252519081900360200190f35b610395600480360360408110156103bf57600080fd5b506001600160a01b038135169060200135151561123b565b610488600480360360408110156103ed57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561041757600080fd5b82018360208201111561042957600080fd5b803590602001918460208302840111600160201b8311171561044a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506113d0945050505050565b005b610488600480360360208110156104a057600080fd5b50356001600160a01b0316611432565b6104d6600480360360208110156104c657600080fd5b50356001600160a01b0316611591565b60408051918252519081900360200190f35b610488600480360360a08110156104fe57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013590608001356115a3565b6104d66004803603608081101561054057600080fd5b506001600160a01b038135811691602081013582169160408201351690606001356115aa565b61056e611673565b604080516001600160a01b039092168252519081900360200190f35b61056e611682565b610395600480360360208110156105a857600080fd5b50351515611691565b6104d6600480360360208110156105c757600080fd5b50356117c0565b610488600480360360208110156105e457600080fd5b50356001600160a01b03166118d1565b6103956004803603604081101561060a57600080fd5b506001600160a01b0381351690602001351515611a00565b610395611b90565b6104886004803603608081101561064057600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135611ba0565b6104d6611ba6565b610488600480360360c081101561068457600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060808101359060a00135611bab565b6104d6611bb3565b610488611bb9565b610706600480360360808110156106e057600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135611c53565b60408051938452602084019290925282820152519081900360600190f35b6104d66004803603606081101561073a57600080fd5b506001600160a01b03813581169160208101359091169060400135611c8d565b6104d66004803603602081101561077057600080fd5b5035611d86565b6104886004803603608081101561078d57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135611e7a565b61056e600480360360208110156107c957600080fd5b5035611ece565b6104d6600480360360208110156107e657600080fd5b50356001600160a01b0316611ef5565b6104886004803603606081101561080c57600080fd5b506001600160a01b03813581169160208101359091169060400135611f7c565b6107066004803603602081101561084257600080fd5b50356001600160a01b0316611f81565b6104d66004803603602081101561086857600080fd5b50356001600160a01b0316611fb6565b6104d6600480360360a081101561088e57600080fd5b506001600160a01b038135811691602081013582169160408201358116916060810135909116906080013561203a565b610488600480360360808110156108d457600080fd5b810190602081018135600160201b8111156108ee57600080fd5b82018360208201111561090057600080fd5b803590602001918460208302840111600160201b8311171561092157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561097057600080fd5b82018360208201111561098257600080fd5b803590602001918460208302840111600160201b831117156109a357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505050508035151591506020013515156121c1565b61056e61236a565b61048860048036036020811015610a0857600080fd5b5035612379565b61048860048036036080811015610a2557600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135611ba0565b610a7160048036036020811015610a6157600080fd5b50356001600160a01b031661241d565b604080516001600160e01b03909316835263ffffffff90911660208301528051918290030190f35b61039560048036036020811015610aaf57600080fd5b50356001600160a01b0316612447565b610488600480360360a0811015610ad557600080fd5b506001600160a01b03813581169160208101358216916040820135811691606081013590911690608001356115a3565b61039560048036036020811015610b1b57600080fd5b50356001600160a01b031661245c565b6104d6612471565b61056e61247c565b61048860048036036040811015610b5157600080fd5b810190602081018135600160201b811115610b6b57600080fd5b820183602082011115610b7d57600080fd5b803590602001918460208302840111600160201b83111715610b9e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610bed57600080fd5b820183602082011115610bff57600080fd5b803590602001918460208302840111600160201b83111715610c2057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061248b945050505050565b610c7b60048036036020811015610c7457600080fd5b5035612579565b6040805192835260208301919091528051918290030190f35b61039561260c565b610a7160048036036020811015610cb257600080fd5b50356001600160a01b031661261c565b610ce860048036036020811015610cd857600080fd5b50356001600160a01b0316612646565b6040805193151584526020840192909252151582820152519081900360600190f35b61039560048036036020811015610d2057600080fd5b5035151561266c565b61039560048036036040811015610d3f57600080fd5b506001600160a01b038135811691602001351661279a565b61048860048036036020811015610d6d57600080fd5b50356001600160a01b03166127cd565b6104d6612806565b61056e61280c565b6104d660048036036020811015610da357600080fd5b50356001600160a01b0316612882565b610dbb6129df565b604080516001600160e01b039092168252519081900360200190f35b6104d66129f1565b610e0560048036036020811015610df557600080fd5b50356001600160a01b03166129f7565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610e41578181015183820152602001610e29565b505050509050019250505060405180910390f35b610395612a80565b610e05612a90565b6104d660048036036040811015610e7b57600080fd5b506001600160a01b0381358116916020013516612af2565b61056e612b0f565b6104d660048036036080811015610eb157600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135612b1e565b610e0560048036036020811015610eed57600080fd5b810190602081018135600160201b811115610f0757600080fd5b820183602082011115610f1957600080fd5b803590602001918460208302840111600160201b83111715610f3a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612bb2945050505050565b610c7b60048036036060811015610f8e57600080fd5b506001600160a01b03813581169160208101359091169060400135612c49565b6104d660048036036040811015610fc457600080fd5b506001600160a01b0381358116916020013516612ebe565b6104d660048036036020811015610ff257600080fd5b50356001600160a01b0316612edb565b6104886004803603602081101561101857600080fd5b810190602081018135600160201b81111561103257600080fd5b82018360208201111561104457600080fd5b803590602001918460208302840111600160201b8311171561106557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612eed945050505050565b6104d6600480360360a08110156110b957600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060800135612f7f565b6104d6600480360360208110156110ff57600080fd5b5035613137565b6104d66004803603606081101561111c57600080fd5b506001600160a01b038135811691602081013590911690604001356131a0565b61056e6004803603604081101561115257600080fd5b506001600160a01b03813516906020013561348d565b61056e6134c2565b6104d66004803603604081101561118657600080fd5b506001600160a01b0381351690602001356134d1565b610395613681565b6104d6613691565b610488600480360360208110156111c257600080fd5b50356001600160a01b0316613697565b6104d6600480360360608110156111e857600080fd5b506001600160a01b038135811691602081013590911690604001356136fb565b6104d66004803603602081101561121e57600080fd5b50356001600160a01b0316613738565b61056e613a4b565b600181565b6001600160a01b03821660009081526009602052604081205460ff166112925760405162461bcd60e51b8152600401808060200182810382526028815260200180615ec26028913960400191505060405180910390fd5b600a546001600160a01b03163314806112b557506000546001600160a01b031633145b6112f05760405162461bcd60e51b8152600401808060200182810382526027815260200180615f0a6027913960400191505060405180910390fd5b6000546001600160a01b031633148061130b57506001821515145b61134a576040805162461bcd60e51b81526020600482015260166024820152600080516020615eea833981519152604482015290519081900360640190fd5b6001600160a01b0383166000818152600c6020908152604091829020805486151560ff199091168117909155825193845283830152606090830181905260069083015265426f72726f7760d01b6080830152517f71aec636243f9709bb0007ae15e9afb8150ab01716d75fd7573be5cc096e03b09181900360a00190a150805b92915050565b60408051600180825281830190925260609160208083019080388339019050509050828160008151811061140057fe5b60200260200101906001600160a01b031690816001600160a01b03168152505061142d81836001806121c1565b505050565b806001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b15801561146b57600080fd5b505afa15801561147f573d6000803e3d6000fd5b505050506040513d602081101561149557600080fd5b50516001600160a01b031633146114dd5760405162461bcd60e51b8152600401808060200182810382526027815260200180615f766027913960400191505060405180910390fd5b806001600160a01b031663c1e803346040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561151857600080fd5b505af115801561152c573d6000803e3d6000fd5b505050506040513d602081101561154257600080fd5b50511561158e576040805162461bcd60e51b815260206004820152601560248201527418da185b99d9481b9bdd08185d5d1a1bdc9a5e9959605a1b604482015290519081900360640190fd5b50565b600f6020526000908152604090205481565b5050505050565b6001600160a01b03841660009081526009602052604081205460ff166115d25750600961166b565b6115da615e02565b6040518060200160405280876001600160a01b031663aa5af0fd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561161e57600080fd5b505afa158015611632573d6000803e3d6000fd5b505050506040513d602081101561164857600080fd5b5051905290506116588682613a5a565b6116658685836000613cdf565b60009150505b949350505050565b600a546001600160a01b031681565b6001546001600160a01b031681565b600a546000906001600160a01b03163314806116b757506000546001600160a01b031633145b6116f25760405162461bcd60e51b8152600401808060200182810382526027815260200180615f0a6027913960400191505060405180910390fd5b6000546001600160a01b031633148061170d57506001821515145b61174c576040805162461bcd60e51b81526020600482015260166024820152600080516020615eea833981519152604482015290519081900360640190fd5b600a8054831515600160b81b810260ff60b81b1990921691909117909155604080516020810192909252808252600582820152645365697a6560d81b6060830152517fef159d9a32b2472e32b098f954f3ce62d232939f1c207070b584df1814de2de09181900360800190a150805b919050565b600080546001600160a01b031633146117e6576117df60016004613eca565b90506117bb565b6117ee615e02565b506040805160208101909152828152611805615e02565b50604080516020810190915266b1a2bc2ec5000081526118258282613f30565b1561183e57611835600580613eca565b925050506117bb565b611846615e02565b506040805160208101909152670c7d713b49da000081526118678184613f38565b1561188157611877600580613eca565b93505050506117bb565b6005805490869055604080518281526020810188905281517f3b9670cf975d26958e754b57098eaa2ac914d8d2a31b83257997b9f346110fd9929181900390910190a160005b9695505050505050565b6000546001600160a01b03163314611930576040805162461bcd60e51b815260206004820152601f60248201527f6f6e6c792061646d696e2063616e2064726f7020636f6d70206d61726b657400604482015290519081900360640190fd5b6001600160a01b0381166000908152600960205260409020600381015460ff1615156001146119a4576040805162461bcd60e51b815260206004820152601b60248201527a1b585c9ad95d081a5cc81b9bdd08184818dbdb5c081b585c9ad95d602a1b604482015290519081900360640190fd5b60038101805460ff19169055604080516001600160a01b03841681526000602082015281517f93c1f3e36ed71139f466a4ce8c9751790e2e33f5afb2df0dcfb3aeabe55d5aa2929181900390910190a16119fc613f3f565b5050565b6001600160a01b03821660009081526009602052604081205460ff16611a575760405162461bcd60e51b8152600401808060200182810382526028815260200180615ec26028913960400191505060405180910390fd5b600a546001600160a01b0316331480611a7a57506000546001600160a01b031633145b611ab55760405162461bcd60e51b8152600401808060200182810382526027815260200180615f0a6027913960400191505060405180910390fd5b6000546001600160a01b0316331480611ad057506001821515145b611b0f576040805162461bcd60e51b81526020600482015260166024820152600080516020615eea833981519152604482015290519081900360640190fd5b6001600160a01b0383166000818152600b6020908152604091829020805486151560ff199091168117909155825193845283830152606090830181905260049083015263135a5b9d60e21b6080830152517f71aec636243f9709bb0007ae15e9afb8150ab01716d75fd7573be5cc096e03b09181900360a00190a150919050565b600a54600160a01b900460ff1681565b50505050565b435b90565b505050505050565b60065481565b601560009054906101000a90046001600160a01b03166001600160a01b0316634bc51e766040518163ffffffff1660e01b815260040160206040518083038186803b158015611c0757600080fd5b505afa158015611c1b573d6000803e3d6000fd5b505050506040513d6020811015611c3157600080fd5b505115611c3d57600080fd5b333214611c4957600080fd5b611c51613f3f565b565b600080600080600080611c688a8a8a8a613fcb565b925092509250826011811115611c7a57fe5b95509093509150505b9450945094915050565b6015546040805163fbac395160e01b81526001600160a01b0385811660048301529151600093929092169163fbac395191602480820192602092909190829003018186803b158015611cde57600080fd5b505afa158015611cf2573d6000803e3d6000fd5b505050506040513d6020811015611d0857600080fd5b505115611d1457600080fd5b6001600160a01b0384166000908152600b602052604090205460ff1615611d3a57600080fd5b6001600160a01b03841660009081526009602052604090205460ff16611d645760095b9050611d7f565b611d6d846143e6565b611d7984846000614661565b60005b90505b9392505050565b600080546001600160a01b03163314611da5576117df6001600b613eca565b611dad615e02565b506040805160208101909152828152611dc4615e02565b506040805160208101909152670de0b6b3a76400008152611de58282613f38565b15611df6576118356007600c613eca565b611dfe615e02565b5060408051602081019091526714d1120d7b1600008152611e1f8184613f38565b15611e30576118776007600c613eca565b6006805490869055604080518281526020810188905281517faeba5a6c40a8ac138134bff1aaa65debf25971188a58804bad717f82f0ec1316929181900390910190a160006118c7565b80158015611e885750600082115b15611ba0576040805162461bcd60e51b815260206004820152601160248201527072656465656d546f6b656e73207a65726f60781b604482015290519081900360640190fd5b600d8181548110611edb57fe5b6000918252602090912001546001600160a01b0316905081565b600080546001600160a01b03163314611f14576117df60016010613eca565b600480546001600160a01b038481166001600160a01b0319831681179093556040805191909216808252602082019390935281517fd52b2b9b7e9ee655fcb95d2e5b9e0c9f69e7ef2b8e9d2d0ea78402d576d22e22929181900390910190a160009392505050565b61142d565b600080600080600080611f98876000806000613fcb565b925092509250826011811115611faa57fe5b97919650945092505050565b600080546001600160a01b03163314611fd5576117df60016013613eca565b600a80546001600160a01b038481166001600160a01b0319831617928390556040805192821680845293909116602083015280517f0613b6ee6a04f0d09f390e4d9318894b9f6ac7fd83897cd8d18896ba579c401e9281900390910190a16000611d7f565b6001600160a01b03851660009081526009602052604081205460ff16158061207b57506001600160a01b03851660009081526009602052604090205460ff16155b1561208a5760095b90506121b8565b60008061209685614858565b919350909150600090508260118111156120ac57fe5b146120c6578160118111156120bd57fe5b925050506121b8565b806120d25760036120bd565b6000886001600160a01b03166395dd9193876040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561212a57600080fd5b505afa15801561213e573d6000803e3d6000fd5b505050506040513d602081101561215457600080fd5b50516040805160208101909152600554815290915060009081906121789084614878565b9092509050600082600381111561218b57fe5b1461219f57600b5b955050505050506121b8565b808711156121ae576011612193565b6000955050505050505b95945050505050565b60005b83518110156115a35760008482815181106121db57fe5b6020908102919091018101516001600160a01b0381166000908152600990925260409091205490915060ff16612250576040805162461bcd60e51b81526020600482015260156024820152741b585c9ad95d081b5d5cdd081899481b1a5cdd1959605a1b604482015290519081900360640190fd5b6001841515141561231857612263615e02565b6040518060200160405280836001600160a01b031663aa5af0fd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156122a757600080fd5b505afa1580156122bb573d6000803e3d6000fd5b505050506040513d60208110156122d157600080fd5b5051905290506122e18282613a5a565b60005b87518110156123155761230d838983815181106122fd57fe5b6020026020010151846001613cdf565b6001016122e4565b50505b600183151514156123615761232c816143e6565b60005b865181101561235f576123578288838151811061234857fe5b60200260200101516001614661565b60010161232f565b505b506001016121c4565b6015546001600160a01b031681565b6123816148cc565b6123d2576040805162461bcd60e51b815260206004820152601f60248201527f6f6e6c792061646d696e2063616e206368616e676520636f6d70207261746500604482015290519081900360640190fd5b600e805490829055604080518281526020810184905281517fc227c9272633c3a307d9845bf2bc2509cefb20d655b5f3c1002d8e1e3f22c8b0929181900390910190a16119fc613f3f565b6010602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b600c6020526000908152604090205460ff1681565b600b6020526000908152604090205460ff1681565b66038d7ea4c6800081565b6004546001600160a01b031681565b6000546001600160a01b031633146124a257600080fd5b80518251146124b057600080fd5b6000805b835181101561256f5760008482815181106124cb57fe5b6020908102919091018101516001600160a01b03811660009081526009909252604090912060038101549192509060ff1661250957612509826148f5565b84838151811061251557fe5b6020026020010151600f6000846001600160a01b03166001600160a01b03168152602001908152602001600020819055506125638486858151811061255657fe5b6020026020010151614c06565b935050506001016124b4565b5061142d81612379565b60155460065460408051630655a3bd60e11b8152600481018590526024810192909252805160009384936001600160a01b0390911692630cab477a92604480840193829003018186803b1580156125cf57600080fd5b505afa1580156125e3573d6000803e3d6000fd5b505050506040513d60408110156125f957600080fd5b5080516020909101519092509050915091565b600a54600160b01b900460ff1681565b6011602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b60096020526000908152604090208054600182015460039092015460ff91821692911683565b600a546000906001600160a01b031633148061269257506000546001600160a01b031633145b6126cd5760405162461bcd60e51b8152600401808060200182810382526027815260200180615f0a6027913960400191505060405180910390fd5b6000546001600160a01b03163314806126e857506001821515145b612727576040805162461bcd60e51b81526020600482015260166024820152600080516020615eea833981519152604482015290519081900360640190fd5b600a8054831515600160b01b810260ff60b01b1990921691909117909155604080516020810192909252808252600882820152672a3930b739b332b960c11b6060830152517fef159d9a32b2472e32b098f954f3ce62d232939f1c207070b584df1814de2de09181900360800190a15090565b6001600160a01b038082166000908152600960209081526040808320938616835260029093019052205460ff1692915050565b6000546001600160a01b031633146127e457600080fd5b601580546001600160a01b0319166001600160a01b0392909216919091179055565b60075481565b60155460408051636605dfa760e01b815290516000926001600160a01b031691636605dfa7916004808301926020929190829003018186803b15801561285157600080fd5b505afa158015612865573d6000803e3d6000fd5b505050506040513d602081101561287b57600080fd5b5051905090565b600080546001600160a01b031633146128a1576117df60016012613eca565b6001600160a01b03821660009081526009602052604090205460ff16156128ce576117df600a6011613eca565b816001600160a01b031663fe9c44ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561290757600080fd5b505afa15801561291b573d6000803e3d6000fd5b505050506040513d602081101561293157600080fd5b5050604080516060810182526001808252600060208381018281528486018381526001600160a01b03891684526009909252949091209251835490151560ff1991821617845593519183019190915551600390910180549115159190921617905561299b82614c3c565b604080516001600160a01b038416815290517fcf583bb0c569eb967f806b11601c4cb93c10310485c67add5f8362c2f212321f9181900360200190a1600092915050565b6a0c097ce7bc90715b34b9f160241b81565b600e5481565b60608060086000846001600160a01b03166001600160a01b03168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612a7357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612a55575b5093979650505050505050565b600a54600160b81b900460ff1681565b6060600d805480602002602001604051908101604052809291908181526020018280548015612ae857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612aca575b5050505050905090565b601260209081526000928352604080842090915290825290205481565b6002546001600160a01b031681565b600a54600090600160b01b900460ff1615612b75576040805162461bcd60e51b81526020600482015260126024820152711d1c985b9cd9995c881a5cc81c185d5cd95960721b604482015290519081900360640190fd5b6000612b82868685614d1a565b90508015612b9157905061166b565b612b9a866143e6565b612ba686866000614661565b61166586856000614661565b6060600082519050606081604051908082528060200260200182016040528015612be6578160200160208202803883390190505b50905060005b82811015612c41576000858281518110612c0257fe5b60200260200101519050612c168133614dbd565b6011811115612c2157fe5b838381518110612c2d57fe5b602090810291909101015250600101612bec565b509392505050565b600480546040805163fc57d4df60e01b81526001600160a01b038781169482019490945290516000938493849391169163fc57d4df91602480820192602092909190829003018186803b158015612c9f57600080fd5b505afa158015612cb3573d6000803e3d6000fd5b505050506040513d6020811015612cc957600080fd5b5051600480546040805163fc57d4df60e01b81526001600160a01b038a8116948201949094529051939450600093929091169163fc57d4df91602480820192602092909190829003018186803b158015612d2257600080fd5b505afa158015612d36573d6000803e3d6000fd5b505050506040513d6020811015612d4c57600080fd5b50519050811580612d5b575080155b15612d7057600d935060009250612eb6915050565b6000866001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b158015612dab57600080fd5b505afa158015612dbf573d6000803e3d6000fd5b505050506040513d6020811015612dd557600080fd5b505190506000612de3615e02565b612deb615e02565b612df3615e02565b6000612e0160065489614ede565b945090506000816003811115612e1357fe5b14612e2f57600b5b995060009850612eb6975050505050505050565b612e398787614ede565b935090506000816003811115612e4b57fe5b14612e5757600b612e1b565b612e618484614f19565b925090506000816003811115612e7357fe5b14612e7f57600b612e1b565b612e89828c614878565b955090506000816003811115612e9b57fe5b14612ea757600b612e1b565b60009950939750505050505050505b935093915050565b601360209081526000928352604080842090915290825290205481565b60146020526000908152604090205481565b612ef56148cc565b612f46576040805162461bcd60e51b815260206004820152601e60248201527f6f6e6c792061646d696e2063616e2061646420636f6d70206d61726b65740000604482015290519081900360640190fd5b60005b8151811015612f7657612f6e828281518110612f6157fe5b60200260200101516148f5565b600101612f49565b5061158e613f3f565b600a54600090600160b81b900460ff1615612fd3576040805162461bcd60e51b815260206004820152600f60248201526e1cd95a5e99481a5cc81c185d5cd959608a1b604482015290519081900360640190fd5b6001600160a01b03861660009081526009602052604090205460ff16158061301457506001600160a01b03851660009081526009602052604090205460ff16155b15613020576009612083565b846001600160a01b0316635fe3b5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561305957600080fd5b505afa15801561306d573d6000803e3d6000fd5b505050506040513d602081101561308357600080fd5b505160408051635fe3b56760e01b815290516001600160a01b0392831692891691635fe3b567916004808301926020929190829003018186803b1580156130c957600080fd5b505afa1580156130dd573d6000803e3d6000fd5b505050506040513d60208110156130f357600080fd5b50516001600160a01b03161461310a576002612083565b613113866143e6565b61311f86846000614661565b61312b86856000614661565b60009695505050505050565b600080546001600160a01b03163314613156576117df6001600d613eca565b6007805490839055604080518281526020810185905281517f7093cf1eb653f749c3ff531d6df7f92764536a7fa0d13530cd26e070780c32ea929181900390910190a16000611d7f565b6001600160a01b0383166000908152600c602052604081205460ff1615613201576040805162461bcd60e51b815260206004820152601060248201526f189bdc9c9bddc81a5cc81c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b03841660009081526009602052604090205460ff16613228576009611d5d565b6001600160a01b038085166000908152600960209081526040808320938716835260029093019052205460ff1661331857336001600160a01b038516146132ae576040805162461bcd60e51b815260206004820152601560248201527439b2b73232b91036bab9ba1031329031aa37b5b2b760591b604482015290519081900360640190fd5b60006132ba3385614dbd565b905060008160118111156132ca57fe5b146132e3578060118111156132db57fe5b915050611d7f565b6001600160a01b038086166000908152600960209081526040808320938816835260029093019052205460ff1661331657fe5b505b600480546040805163fc57d4df60e01b81526001600160a01b03888116948201949094529051929091169163fc57d4df91602480820192602092909190829003018186803b15801561336957600080fd5b505afa15801561337d573d6000803e3d6000fd5b505050506040513d602081101561339357600080fd5b50516133a057600d611d5d565b6000806133b08587600087613fcb565b919350909150600090508260118111156133c657fe5b146133e0578160118111156133d757fe5b92505050611d7f565b80156133ed5760046133d7565b6133f5615e02565b6040518060200160405280886001600160a01b031663aa5af0fd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561343957600080fd5b505afa15801561344d573d6000803e3d6000fd5b505050506040513d602081101561346357600080fd5b5051905290506134738782613a5a565b6134808787836000613cdf565b6000979650505050505050565b600860205281600052604060002081815481106134a657fe5b6000918252602090912001546001600160a01b03169150829050565b6003546001600160a01b031681565b600080546001600160a01b031633146134f7576134f060016006613eca565b90506113ca565b6001600160a01b0383166000908152600960205260409020805460ff1661352c5761352460096007613eca565b9150506113ca565b613534615e02565b50604080516020810190915283815261354b615e02565b506040805160208101909152670c7d713b49da0000815261356c8183613f38565b156135875761357d60066008613eca565b93505050506113ca565b84158015906136105750600480546040805163fc57d4df60e01b81526001600160a01b038a8116948201949094529051929091169163fc57d4df91602480820192602092909190829003018186803b1580156135e257600080fd5b505afa1580156135f6573d6000803e3d6000fd5b505050506040513d602081101561360c57600080fd5b5051155b156136215761357d600d6009613eca565b60018301805490869055604080516001600160a01b03891681526020810183905280820188905290517f70483e6592cd5182d45ac970e05bc62cdcc90e9d8ef2c2dbe686cf383bcd7fc59181900360600190a16000979650505050505050565b600a54600160a81b900460ff1681565b60055481565b61158e81600d8054806020026020016040519081016040528092919081815260200182805480156136f157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116136d3575b50505050506113d0565b600080613709858585614d1a565b90508015613718579050611d7f565b613721856143e6565b61372d85856000614661565b600095945050505050565b6000808290506000806000836001600160a01b031663c37f68e2336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060806040518083038186803b15801561379957600080fd5b505afa1580156137ad573d6000803e3d6000fd5b505050506040513d60808110156137c357600080fd5b5080516020820151604090920151909450909250905082156138165760405162461bcd60e51b8152600401808060200182810382526025815260200180615f316025913960400191505060405180910390fd5b801561383357613828600c6002613eca565b9450505050506117bb565b6000613840873385614d1a565b9050801561386157613855600e600383614f31565b955050505050506117bb565b6001600160a01b0385166000908152600960209081526040808320338452600281019092529091205460ff166138a057600096505050505050506117bb565b3360009081526002820160209081526040808320805460ff19169055600882529182902080548351818402810184019094528084526060939283018282801561391257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116138f4575b5050835193945083925060009150505b8281101561396757896001600160a01b031684828151811061394057fe5b60200260200101516001600160a01b0316141561395f57809150613967565b600101613922565b5081811061397157fe5b33600090815260086020526040902080548190600019810190811061399257fe5b9060005260206000200160009054906101000a90046001600160a01b03168183815481106139bc57fe5b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580546139f5826000198301615e15565b50604080516001600160a01b038c16815233602082015281517fe699a64c18b07ac5b7301aa273f36a2287239eb9501d81950672794afba29a0d929181900390910190a160009c9b505050505050505050505050565b6000546001600160a01b031681565b6001600160a01b0382166000908152601160209081526040808320600f9092528220549091613a87611ba6565b8354909150600090613aa7908390600160e01b900463ffffffff16614f97565b9050600081118015613ab95750600083115b15613c85576000613b2e876001600160a01b03166347bd37186040518163ffffffff1660e01b815260040160206040518083038186803b158015613afc57600080fd5b505afa158015613b10573d6000803e3d6000fd5b505050506040513d6020811015613b2657600080fd5b505187614fd1565b90506000613b3c8386614fef565b9050613b46615e02565b60008311613b635760405180602001604052806000815250613b6d565b613b6d828461502b565b9050613b77615e02565b604080516020810190915288546001600160e01b03168152613b999083615068565b90506040518060400160405280613be683600001516040518060400160405280601a8152602001796e657720696e646578206578636565647320323234206269747360301b81525061508d565b6001600160e01b03168152602001613c21886040518060400160405280601c8152602001600080516020615f56833981519152815250615127565b63ffffffff9081169091526001600160a01b038c166000908152601160209081526040909120835181549490920151909216600160e01b026001600160e01b039182166001600160e01b0319909416939093171691909117905550611bab92505050565b8015611bab57613cb8826040518060400160405280601c8152602001600080516020615f56833981519152815250615127565b845463ffffffff91909116600160e01b026001600160e01b03909116178455505050505050565b6001600160a01b0384166000908152601160205260409020613cff615e02565b50604080516020810190915281546001600160e01b03168152613d20615e02565b5060408051602080820183526001600160a01b03808a16600090815260138352848120918a1680825282845294812080548552865195909152915291909155805115613ec157613d6e615e02565b613d78838361517c565b90506000613e07896001600160a01b03166395dd91938a6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015613dd557600080fd5b505afa158015613de9573d6000803e3d6000fd5b505050506040513d6020811015613dff57600080fd5b505188614fd1565b90506000613e1582846151a1565b6001600160a01b038a1660009081526014602052604081205491925090613e3c9083614c06565b9050613e5d8a828a613e555766038d7ea4c68000613e58565b60005b6151cf565b6001600160a01b03808c1660008181526014602090815260409182902094909455895181518781529485015280519193928f16927f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a6929081900390910190a3505050505b50505050505050565b60007f45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0836011811115613ef957fe5b836013811115613f0557fe5b604080519283526020830191909152600082820152519081900360600190a1826011811115611d7f57fe5b519051111590565b5190511090565b601560009054906101000a90046001600160a01b03166001600160a01b0316634bc51e766040518163ffffffff1660e01b815260040160206040518083038186803b158015613f8d57600080fd5b505afa158015613fa1573d6000803e3d6000fd5b505050506040513d6020811015613fb757600080fd5b505115613fc357611c51565b611c516154c8565b6000806000613fd8615e39565b6001600160a01b03881660009081526008602090815260408083208054825181850281018501909352808352849360609392919083018282801561404557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311614027575b50939450600093505050505b81518110156143a157600082828151811061406857fe5b60200260200101519050806001600160a01b031663c37f68e28e6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060806040518083038186803b1580156140c857600080fd5b505afa1580156140dc573d6000803e3d6000fd5b505050506040513d60808110156140f257600080fd5b508051602082015160408084015160609485015160808c0152938a019390935291880191909152945084156141385750600f975060009650869550611c83945050505050565b60408051602080820183526001600160a01b0380851660008181526009845285902060010154845260c08b01939093528351808301855260808b0151815260e08b015260048054855163fc57d4df60e01b815291820194909452935192169263fc57d4df9260248083019392829003018186803b1580156141b857600080fd5b505afa1580156141cc573d6000803e3d6000fd5b505050506040513d60208110156141e257600080fd5b505160a087018190526142065750600d975060009650869550611c83945050505050565b604080516020810190915260a08701518152610100870181905260c087015160e08801516142339261588d565b6101208801529350600084600381111561424957fe5b146142655750600b975060009650869550611c83945050505050565b61427d866101200151876040015188600001516158e5565b87529350600084600381111561428f57fe5b146142ab5750600b975060009650869550611c83945050505050565b6142c3866101000151876060015188602001516158e5565b6020880152935060008460038111156142d857fe5b146142f45750600b975060009650869550611c83945050505050565b8b6001600160a01b0316816001600160a01b03161415614398576143228661012001518c88602001516158e5565b60208801529350600084600381111561433757fe5b146143535750600b975060009650869550611c83945050505050565b6143678661010001518b88602001516158e5565b60208801529350600084600381111561437c57fe5b146143985750600b975060009650869550611c83945050505050565b50600101614051565b506020840151845111156143c8575050506020810151905160009450039150829050611c83565b5050815160209092015160009550859450919091039150611c839050565b6001600160a01b0381166000908152601060209081526040808320600f9092528220549091614413611ba6565b8354909150600090614433908390600160e01b900463ffffffff16614f97565b90506000811180156144455750600083115b15614608576000856001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561448557600080fd5b505afa158015614499573d6000803e3d6000fd5b505050506040513d60208110156144af57600080fd5b5051905060006144bf8386614fef565b90506144c9615e02565b600083116144e657604051806020016040528060008152506144f0565b6144f0828461502b565b90506144fa615e02565b604080516020810190915288546001600160e01b0316815261451c9083615068565b9050604051806040016040528061456983600001516040518060400160405280601a8152602001796e657720696e646578206578636565647320323234206269747360301b81525061508d565b6001600160e01b031681526020016145a4886040518060400160405280601c8152602001600080516020615f56833981519152815250615127565b63ffffffff9081169091526001600160a01b038b166000908152601060209081526040909120835181549490920151909216600160e01b026001600160e01b039182166001600160e01b03199094169390931716919091179055506115a392505050565b80156115a35761463b826040518060400160405280601c8152602001600080516020615f56833981519152815250615127565b845463ffffffff91909116600160e01b026001600160e01b039091161784555050505050565b6001600160a01b0383166000908152601060205260409020614681615e02565b50604080516020810190915281546001600160e01b031681526146a2615e02565b5060408051602080820183526001600160a01b038089166000908152601283528481209189168082528284529481208054855286519590915291529190915580511580156146f05750815115155b15614707576a0c097ce7bc90715b34b9f160241b81525b61470f615e02565b614719838361517c565b90506000876001600160a01b03166370a08231886040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561477357600080fd5b505afa158015614787573d6000803e3d6000fd5b505050506040513d602081101561479d57600080fd5b5051905060006147ad82846151a1565b6001600160a01b038916600090815260146020526040812054919250906147d49083614c06565b90506147ed89828a613e555766038d7ea4c68000613e58565b6001600160a01b03808b1660008181526014602090815260409182902094909455895181518781529485015280519193928e16927f2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a929081900390910190a350505050505050505050565b600080600061486b846000806000613fcb565b9250925092509193909250565b6000806000614885615e02565b61488f8686615932565b909250905060008260038111156148a257fe5b146148b357509150600090506148c5565b60006148be8261599a565b9350935050505b9250929050565b600080546001600160a01b03163314806148f057506002546001600160a01b031633145b905090565b6001600160a01b0381166000908152600960205260409020805460ff161515600114614964576040805162461bcd60e51b815260206004820152601960248201527818dbdb5c081b585c9ad95d081a5cc81b9bdd081b1a5cdd1959603a1b604482015290519081900360640190fd5b600381015460ff16156149ba576040805162461bcd60e51b815260206004820152601960248201527818dbdb5c081b585c9ad95d08185b1c9958591e481859191959603a1b604482015290519081900360640190fd5b60038101805460ff19166001908117909155604080516001600160a01b0385168152602081019290925280517f93c1f3e36ed71139f466a4ce8c9751790e2e33f5afb2df0dcfb3aeabe55d5aa29281900390910190a16001600160a01b0382166000908152601060205260409020546001600160e01b0316158015614a6257506001600160a01b038216600090815260106020526040902054600160e01b900463ffffffff16155b15614b1e5760405180604001604052806a0c097ce7bc90715b34b9f160241b6001600160e01b03168152602001614ac3614a9a611ba6565b6040518060400160405280601c8152602001600080516020615f56833981519152815250615127565b63ffffffff9081169091526001600160a01b0384166000908152601060209081526040909120835181549490920151909216600160e01b026001600160e01b039182166001600160e01b031990941693909317169190911790555b6001600160a01b0382166000908152601160205260409020546001600160e01b0316158015614b7057506001600160a01b038216600090815260116020526040902054600160e01b900463ffffffff16155b156119fc5760405180604001604052806a0c097ce7bc90715b34b9f160241b6001600160e01b03168152602001614ba8614a9a611ba6565b63ffffffff9081169091526001600160a01b0384166000908152601160209081526040909120835181549490920151909216600160e01b026001600160e01b039182166001600160e01b031990941693909317169190911790555050565b6000611d7f8383604051806040016040528060118152602001706164646974696f6e206f766572666c6f7760781b8152506159a9565b60005b600d54811015614cc757816001600160a01b0316600d8281548110614c6057fe5b6000918252602090912001546001600160a01b03161415614cbf576040805162461bcd60e51b81526020600482015260146024820152731b585c9ad95d08185b1c9958591e48185919195960621b604482015290519081900360640190fd5b600101614c3f565b50600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831660009081526009602052604081205460ff16614d41576009611d5d565b6001600160a01b038085166000908152600960209081526040808320938716835260029093019052205460ff16614d79576000611d5d565b600080614d898587866000613fcb565b91935090915060009050826011811115614d9f57fe5b14614db0578160118111156133d757fe5b801561312b5760046133d7565b6001600160a01b0382166000908152600960205260408120805460ff16614de85760099150506113ca565b6001600160a01b038316600090815260028201602052604090205460ff16151560011415614e1a5760009150506113ca565b6007546001600160a01b03841660009081526008602052604090205410614e455760109150506113ca565b6001600160a01b0380841660008181526002840160209081526040808320805460ff19166001908117909155600883528184208054918201815584529282902090920180549489166001600160a01b031990951685179055815193845283019190915280517f3ab23ab0d51cccc0c3085aec51f99228625aa1a922b3a8ca89a26b0f2027a1a59281900390910190a15060009392505050565b6000614ee8615e02565b614f0e604051806020016040528086815250604051806020016040528086815250615a07565b915091509250929050565b6000614f23615e02565b83518351614f0e9190615af0565b60007f45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0846011811115614f6057fe5b846013811115614f6c57fe5b604080519283526020830191909152818101859052519081900360600190a1836011811115611d7c57fe5b6000611d7f8383604051806040016040528060158152602001747375627472616374696f6e20756e646572666c6f7760581b815250615ba0565b6000611d7f614fe884670de0b6b3a7640000614fef565b8351615bfa565b6000611d7f8383604051806040016040528060178152602001766d756c7469706c69636174696f6e206f766572666c6f7760481b815250615c2d565b615033615e02565b604051806020016040528061505f615059866a0c097ce7bc90715b34b9f160241b614fef565b85615bfa565b90529392505050565b615070615e02565b604051806020016040528061505f85600001518560000151614c06565b600081600160e01b841061511f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156150e45781810151838201526020016150cc565b50505050905090810190601f1680156151115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b509192915050565b600081600160201b841061511f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156150e45781810151838201526020016150cc565b615184615e02565b604051806020016040528061505f85600001518560000151614f97565b60006a0c097ce7bc90715b34b9f160241b6151c0848460000151614fef565b816151c757fe5b049392505050565b6000806151da61280c565b90508284101580156151ec5750600084115b801561520057506001600160a01b03811615155b156154bf57604080516370a0823160e01b8152306004820152905182916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561525057600080fd5b505afa158015615264573d6000803e3d6000fd5b505050506040513d602081101561527a57600080fd5b505190508086116154bc57601554604080516392b8de3960e01b81526001600160a01b038a81166004830152602482018a9052825160009485949216926392b8de39926044808301939192829003018186803b1580156152d957600080fd5b505afa1580156152ed573d6000803e3d6000fd5b505050506040513d604081101561530357600080fd5b508051602090910151909250905081156153a457836001600160a01b031663a9059cbb8a846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561537757600080fd5b505af115801561538b573d6000803e3d6000fd5b505050506040513d60208110156153a157600080fd5b50505b80156154ae57836001600160a01b031663a9059cbb601560009054906101000a90046001600160a01b03166001600160a01b031663ee9e81996040518163ffffffff1660e01b815260040160206040518083038186803b15801561540757600080fd5b505afa15801561541b573d6000803e3d6000fd5b505050506040513d602081101561543157600080fd5b5051604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482018590525160448083019260209291908290030181600087803b15801561548157600080fd5b505af1158015615495573d6000803e3d6000fd5b505050506040513d60208110156154ab57600080fd5b50505b600095505050505050611d7f565b50505b50919392505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561552057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311615502575b50939450600093505050505b81518110156155e657600082828151811061554357fe5b60200260200101519050615555615e02565b6040518060200160405280836001600160a01b031663aa5af0fd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561559957600080fd5b505afa1580156155ad573d6000803e3d6000fd5b505050506040513d60208110156155c357600080fd5b5051905290506155d2826143e6565b6155dc8282613a5a565b505060010161552c565b506155ef615e02565b6040518060200160405280600081525090506060825160405190808252806020026020018201604052801561563e57816020015b61562b615e02565b8152602001906001900390816156235790505b50905060005b83518110156157c457600084828151811061565b57fe5b6020908102919091018101516001600160a01b0381166000908152600990925260409091206003015490915060ff16156157bb57615697615e02565b60408051602080820180845260045463fc57d4df60e01b9091526001600160a01b03868116602485015293519293849391169163fc57d4df916044808601929190818703018186803b1580156156ec57600080fd5b505afa158015615700573d6000803e3d6000fd5b505050506040513d602081101561571657600080fd5b505190529050615724615e02565b61579282846001600160a01b03166347bd37186040518163ffffffff1660e01b815260040160206040518083038186803b15801561576157600080fd5b505afa158015615775573d6000803e3d6000fd5b505050506040513d602081101561578b57600080fd5b5051615ca3565b9050808585815181106157a157fe5b60200260200101819052506157b68682615068565b955050505b50600101615644565b5060005b8351811015611ba0576000600d82815481106157e057fe5b600091825260208220015485516001600160a01b03909116925061580557600061582d565b61582d600e5461582886868151811061581a57fe5b602002602001015188615cc4565b615cf7565b6001600160a01b0383166000818152600f60209081526040918290208490558151848152915193945091927f2ab93f65628379309f36cb125e90d7c902454a545c4f8b8cb0794af75c24b807929181900390910190a250506001016157c8565b6000615897615e02565b60006158a1615e02565b6158ab8787615a07565b909250905060008260038111156158be57fe5b146158cd579092509050612eb6565b6158d78186615a07565b935093505050935093915050565b60008060006158f2615e02565b6158fc8787615932565b9092509050600082600381111561590f57fe5b146159205750915060009050612eb6565b6158d761592c8261599a565b86615d10565b600061593c615e02565b60008061594d866000015186615d36565b9092509050600082600381111561596057fe5b1461597f575060408051602081019091526000815290925090506148c5565b60408051602081019091529081526000969095509350505050565b51670de0b6b3a7640000900490565b600083830182858210156159fe5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156150e45781810151838201526020016150cc565b50949350505050565b6000615a11615e02565b600080615a2686600001518660000151615d36565b90925090506000826003811115615a3957fe5b14615a58575060408051602081019091526000815290925090506148c5565b600080615a6d6706f05b59d3b2000084615d10565b90925090506000826003811115615a8057fe5b14615aa2575060408051602081019091526000815290945092506148c5915050565b600080615ab783670de0b6b3a7640000615d75565b90925090506000826003811115615aca57fe5b14615ad157fe5b604080516020810190915290815260009a909950975050505050505050565b6000615afa615e02565b600080615b0f86670de0b6b3a7640000615d36565b90925090506000826003811115615b2257fe5b14615b41575060408051602081019091526000815290925090506148c5565b600080615b4e8388615d75565b90925090506000826003811115615b6157fe5b14615b83575060408051602081019091526000815290945092506148c5915050565b604080516020810190915290815260009890975095505050505050565b60008184841115615bf25760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156150e45781810151838201526020016150cc565b505050900390565b6000611d7f83836040518060400160405280600e81526020016d646976696465206279207a65726f60901b815250615da0565b6000831580615c3a575082155b15615c4757506000611d7f565b83830283858281615c5457fe5b041483906159fe5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156150e45781810151838201526020016150cc565b615cab615e02565b604051806020016040528061505f856000015185614fef565b615ccc615e02565b604051806020016040528061505f615cf08660000151670de0b6b3a7640000614fef565b8551615bfa565b6000670de0b6b3a76400006151c0848460000151614fef565b600080838301848110615d28576000925090506148c5565b5060029150600090506148c5565b60008083615d49575060009050806148c5565b83830283858281615d5657fe5b0414615d6a575060029150600090506148c5565b6000925090506148c5565b60008082615d8957506001905060006148c5565b6000838581615d9457fe5b04915091509250929050565b60008183615def5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156150e45781810151838201526020016150cc565b50828481615df957fe5b04949350505050565b6040518060200160405280600081525090565b81548183558181111561142d5760008381526020902061142d918101908301615ea3565b604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001615e77615e02565b8152602001615e84615e02565b8152602001615e91615e02565b8152602001615e9e615e02565b905290565b611ba891905b80821115615ebd5760008155600101615ea9565b509056fe63616e6e6f742070617573652061206d61726b65742074686174206973206e6f74206c69737465646f6e6c792061646d696e2063616e20756e7061757365000000000000000000006f6e6c7920706175736520677561726469616e20616e642061646d696e2063616e207061757365657869744d61726b65743a206765744163636f756e74536e617073686f74206661696c6564626c6f636b206e756d62657220657863656564732033322062697473000000006f6e6c7920756e6974726f6c6c65722061646d696e2063616e206368616e676520627261696e73a265627a7a72315820b9cde51a14e524a0632ea7c61b48362956968b35852cc6adb46b8f786e08d0c464736f6c63430005100032",
  "sourceMap": "129:3588:9:-;;;3588:5:21;:18;;-1:-1:-1;;;;;;3588:18:21;3596:10;3588:18;;;129:3588:9;;;;;;",
  "deployedSourceMap": "129:3588:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:3588:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;141:41:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;42137:501:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;42137:501:21;;;;;;;;;;:::i;51987:205::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;51987:205:21;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;51987:205:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;51987:205:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;51987:205:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;51987:205:21;;-1:-1:-1;51987:205:21;;-1:-1:-1;;;;;51987:205:21:i;:::-;;43389:231;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;43389:231:21;-1:-1:-1;;;;;43389:231:21;;:::i;3265:42:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3265:42:26;-1:-1:-1;;;;;3265:42:26;;:::i;:::-;;;;;;;;;;;;;;;;16227:441:21;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;16227:441:21;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15288:626::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;15288:626:21;;;;;;;;;;;;;;;;;;;;;;:::i;2426:28:26:-;;;:::i;:::-;;;;-1:-1:-1;;;;;2426:28:26;;;;;;;;;;;;;;273:27;;;:::i;43021:362:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;43021:362:21;;;;:::i;34137:1029::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;34137:1029:21;;:::i;55482:373::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;55482:373:21;-1:-1:-1;;;;;55482:373:21;;:::i;41636:495::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;41636:495:21;;;;;;;;;;:::i;2460:31:26:-;;;:::i;9376:351:21:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;9376:351:21;;;;;;;;;;;;;;;;;;;;;;:::i;56142:89::-;;;:::i;18836:527::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;18836:527:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;952:40:26:-;;;:::i;1149:177:9:-;;;:::i;25878:401:21:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;25878:401:21;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3102:613:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3102:613:9;;;;;;;;;;;;;;;;;:::i;38107:1476:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38107:1476:21;;:::i;11800:340::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;11800:340:21;;;;;;;;;;;;;;;;;;;;;;:::i;3054:26:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3054:26:26;;:::i;33288:556:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;33288:556:21;-1:-1:-1;;;;;33288:556:21;;:::i;14489:312::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14489:312:21;;;;;;;;;;;;;;;;;:::i;24525:264::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24525:264:21;-1:-1:-1;;;;;24525:264:21;;:::i;41038:592::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;41038:592:21;-1:-1:-1;;;;;41038:592:21;;:::i;17112:1260::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;17112:1260:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;52526:933::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;52526:933:21;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;52526:933:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;52526:933:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;52526:933:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;52526:933:21;;;;;;;;-1:-1:-1;52526:933:21;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;52526:933:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;52526:933:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;52526:933:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;52526:933:21;;-1:-1:-1;;;;52526:933:21;;;;;-1:-1:-1;52526:933:21;;;;;;:::i;169:24:9:-;;;:::i;53651:275:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;53651:275:21;;:::i;23219:334::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;23219:334:21;;;;;;;;;;;;;;;;;;;;;;:::i;3375:58:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3375:58:26;-1:-1:-1;;;;;3375:58:26;;:::i;:::-;;;;-1:-1:-1;;;;;3375:58:26;;;;;;;;;;;;;;;;;;;;;;2669:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2669:52:26;-1:-1:-1;;;;;2669:52:26;;:::i;21227:458:21:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;21227:458:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2613:50:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2613:50:26;-1:-1:-1;;;;;2613:50:26;;:::i;2711::21:-;;;:::i;663:25:26:-;;;:::i;470:672:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;470:672:9;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;470:672:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;470:672:9;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;470:672:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;470:672:9;;;;;;;;-1:-1:-1;470:672:9;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;470:672:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;470:672:9;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;470:672:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;470:672:9;;-1:-1:-1;470:672:9;;-1:-1:-1;;;;;470:672:9:i;1645:241::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1645:241:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2536:34:26;;;:::i;3501:58::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3501:58:26;-1:-1:-1;;;;;3501:58:26;;:::i;2114:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2114:41:26;-1:-1:-1;;;;;2114:41:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42644:371:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;42644:371:21;;;;:::i;4302:161::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4302:161:21;;;;;;;;;;:::i;200:125:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;200:125:9;-1:-1:-1;;;;;200:125:9;;:::i;1117:21:26:-;;;:::i;1535:100:9:-;;;:::i;39902:654:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;39902:654:21;-1:-1:-1;;;;;39902:654:21;;:::i;2820:47::-;;;:::i;:::-;;;;-1:-1:-1;;;;;2820:47:21;;;;;;;;;;;;;;3162:20:26;;;:::i;3863:170:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3863:170:21;-1:-1:-1;;;;;3863:170:21;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3863:170:21;;;;;;;;;;;;;;;;;2576:31:26;;;:::i;56039:97:21:-;;;:::i;3676:69:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3676:69:26;;;;;;;;;;:::i;364:40::-;;;:::i;22142:761:21:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;22142:761:21;;;;;;;;;;;;;;;;;;;;;;:::i;4722:368::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4722:368:21;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4722:368:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4722:368:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4722:368:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4722:368:21;;-1:-1:-1;4722:368:21;;-1:-1:-1;;;;;4722:368:21:i;31083:1949::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;31083:1949:21;;;;;;;;;;;;;;;;;:::i;3862:69:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3862:69:26;;;;;;;;;;:::i;4008:43::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4008:43:26;-1:-1:-1;;;;;4008:43:26;;:::i;54092:288:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;54092:288:21;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;54092:288:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;54092:288:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;54092:288:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;54092:288:21;;-1:-1:-1;54092:288:21;;-1:-1:-1;;;;;54092:288:21:i;19816:960::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;19816:960:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;37411:403::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;37411:403:21;;:::i;12572:1618::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12572:1618:21;;;;;;;;;;;;;;;;;:::i;1240:49:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1240:49:26;;;;;;;;:::i;469:47::-;;;:::i;35531:1606:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;35531:1606:21;;;;;;;;:::i;2497:33:26:-;;;:::i;805:31::-;;;:::i;51683:95:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;51683:95:21;-1:-1:-1;;;;;51683:95:21;;:::i;10169:441::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10169:441:21;;;;;;;;;;;;;;;;;:::i;6896:2127::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6896:2127:21;-1:-1:-1;;;;;6896:2127:21;;:::i;177:20:26:-;;;:::i;141:41:25:-;178:4;141:41;:::o;42137:501:21:-;-1:-1:-1;;;;;42230:24:21;;42206:4;42230:24;;;:7;:24;;;;;:33;;;42222:86;;;;-1:-1:-1;;;42222:86:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42340:13;;-1:-1:-1;;;;;42340:13:21;42326:10;:27;;:50;;-1:-1:-1;42371:5:21;;-1:-1:-1;;;;;42371:5:21;42357:10;:19;42326:50;42318:102;;;;-1:-1:-1;;;42318:102:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42452:5;;-1:-1:-1;;;;;42452:5:21;42438:10;:19;;:36;;-1:-1:-1;42470:4:21;42461:13;;;;42438:36;42430:71;;;;;-1:-1:-1;;;42430:71:21;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;42430:71:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;42512:37:21;;;;;;:20;:37;;;;;;;;;:45;;;;;-1:-1:-1;;42512:45:21;;;;;;;;42572:37;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;42572:37:21;;;;;;;;;;;;;;-1:-1:-1;42626:5:21;42137:501;;;;;:::o;51987:205::-;52091:16;;;52105:1;52091:16;;;;;;;;;52064:24;;52091:16;;;;;;105:10:-1;52091:16:21;88:34:-1;136:17;;-1:-1;52091:16:21;52064:43;;52130:6;52117:7;52125:1;52117:10;;;;;;;;;;;;;:19;-1:-1:-1;;;;;52117:19:21;;;-1:-1:-1;;;;;52117:19:21;;;;;52146:39;52156:7;52165;52174:4;52180;52146:9;:39::i;:::-;51987:205;;;:::o;43389:231::-;43468:10;-1:-1:-1;;;;;43468:16:21;;:18;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43468:18:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43468:18:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;43468:18:21;-1:-1:-1;;;;;43454:32:21;:10;:32;43446:84;;;;-1:-1:-1;;;43446:84:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43548:10;-1:-1:-1;;;;;43548:32:21;;:34;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43548:34:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43548:34:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;43548:34:21;:39;43540:73;;;;;-1:-1:-1;;;43540:73:21;;;;;;;;;;;;-1:-1:-1;;;43540:73:21;;;;;;;;;;;;;;;43389:231;:::o;3265:42:26:-;;;;;;;;;;;;;:::o;16227:441:21:-;;;;;;:::o;15288:626::-;-1:-1:-1;;;;;15544:15:21;;15434:4;15544:15;;;:7;:15;;;;;:24;;;15539:92;;-1:-1:-1;15596:23:21;15584:36;;15539:92;15677:22;;:::i;:::-;15702:45;;;;;;;;15724:6;-1:-1:-1;;;;;15717:26:21;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15717:28:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15717:28:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15717:28:21;15702:45;;15677:70;-1:-1:-1;15757:42:21;15779:6;15677:70;15757:21;:42::i;:::-;15809:60;15832:6;15840:8;15850:11;15863:5;15809:22;:60::i;:::-;15892:14;15880:27;;;15288:626;;;;;;;:::o;2426:28:26:-;;;-1:-1:-1;;;;;2426:28:26;;:::o;273:27::-;;;-1:-1:-1;;;;;273:27:26;;:::o;43021:362:21:-;43112:13;;43074:4;;-1:-1:-1;;;;;43112:13:21;43098:10;:27;;:50;;-1:-1:-1;43143:5:21;;-1:-1:-1;;;;;43143:5:21;43129:10;:19;43098:50;43090:102;;;;-1:-1:-1;;;43090:102:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43224:5;;-1:-1:-1;;;;;43224:5:21;43210:10;:19;;:36;;-1:-1:-1;43242:4:21;43233:13;;;;43210:36;43202:71;;;;;-1:-1:-1;;;43202:71:21;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;43202:71:21;;;;;;;;;;;;;;;43284:19;:27;;;;;-1:-1:-1;;;43284:27:21;;-1:-1:-1;;;;43284:27:21;;;;;;;;;;43326:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;;43326:28:21;;;;;;;;;;;;;;-1:-1:-1;43371:5:21;43021:362;;;;:::o;34137:1029::-;34209:4;34276:5;;-1:-1:-1;;;;;34276:5:21;34262:10;:19;34258:123;;34304:66;34309:18;34329:40;34304:4;:66::i;:::-;34297:73;;;;34258:123;34391:28;;:::i;:::-;-1:-1:-1;34422:39:21;;;;;;;;;;;;34471:19;;:::i;:::-;-1:-1:-1;34493:39:21;;;;;;;;;2990:7;34493:39;;34546:47;34565:17;34493:39;34546:18;:47::i;:::-;34542:158;;;34616:73;34621:26;34649:39;34616:4;:73::i;:::-;34609:80;;;;;;34542:158;34710:20;;:::i;:::-;-1:-1:-1;34733:39:21;;;;;;;;;3114:6;34733:39;;34786:41;34733:39;34809:17;34786:11;:41::i;:::-;34782:152;;;34850:73;34855:26;34883:39;34850:4;:73::i;:::-;34843:80;;;;;;;34782:152;34974:19;;;35003:44;;;;35062:59;;;;;;;;;;;;;;;;;;;;;;;;;35144:14;35139:20;35132:27;34137:1029;-1:-1:-1;;;;;;34137:1029:21:o;55482:373::-;55562:5;;-1:-1:-1;;;;;55562:5:21;55548:10;:19;55540:63;;;;;-1:-1:-1;;;55540:63:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;55638:15:21;;55614:21;55638:15;;;:7;:15;;;;;55671;;;;;;:23;;:15;:23;55663:63;;;;;-1:-1:-1;;;55663:63:21;;;;;;;;;;;;-1:-1:-1;;;55663:63:21;;;;;;;;;;;;;;;55737:15;;;:23;;-1:-1:-1;;55737:23:21;;;55775:35;;;-1:-1:-1;;;;;55775:35:21;;;;55755:5;55775:35;;;;;;;;;;;;;;;;;55821:27;:25;:27::i;:::-;55482:373;;:::o;41636:495::-;-1:-1:-1;;;;;41727:24:21;;41703:4;41727:24;;;:7;:24;;;;;:33;;;41719:86;;;;-1:-1:-1;;;41719:86:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41837:13;;-1:-1:-1;;;;;41837:13:21;41823:10;:27;;:50;;-1:-1:-1;41868:5:21;;-1:-1:-1;;;;;41868:5:21;41854:10;:19;41823:50;41815:102;;;;-1:-1:-1;;;41815:102:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41949:5;;-1:-1:-1;;;;;41949:5:21;41935:10;:19;;:36;;-1:-1:-1;41967:4:21;41958:13;;;;41935:36;41927:71;;;;;-1:-1:-1;;;41927:71:21;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;41927:71:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;42009:35:21;;;;;;:18;:35;;;;;;;;;:43;;;;;-1:-1:-1;;42009:43:21;;;;;;;;42067:35;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;42067:35:21;;;;;;;;;;;;;;-1:-1:-1;42119:5:21;41636:495;-1:-1:-1;41636:495:21:o;2460:31:26:-;;;-1:-1:-1;;;2460:31:26;;;;;:::o;9376:351:21:-;;;;;:::o;56142:89::-;56212:12;56142:89;;:::o;18836:527::-;;;;;;;:::o;952:40:26:-;;;;:::o;1149:177:9:-;1204:8;;;;;;;;;-1:-1:-1;;;;;1204:8:9;-1:-1:-1;;;;;1204:32:9;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1204:34:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1204:34:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1204:34:9;1203:35;1195:44;;;;;;1257:10;1271:9;1257:23;1249:32;;;;;;1292:27;:25;:27::i;:::-;1149:177::o;25878:401:21:-;26050:4;26056;26062;26079:9;26090:14;26106;26124:98;26164:7;26180:12;26195;26209;26124:39;:98::i;:::-;26078:144;;;;;;26245:3;26240:9;;;;;;;;26232:40;-1:-1:-1;26251:9:21;;-1:-1:-1;26262:9:21;-1:-1:-1;;25878:401:21;;;;;;;;;:::o;3102:613:9:-;3215:8;;:26;;;-1:-1:-1;;;3215:26:9;;-1:-1:-1;;;;;3215:26:9;;;;;;;;;3190:4;;3215:8;;;;;:18;;:26;;;;;;;;;;;;;;;:8;:26;;;5:2:-1;;;;30:1;27;20:12;5:2;3215:26:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3215:26:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3215:26:9;3214:27;3206:36;;;;;;-1:-1:-1;;;;;3340:26:9;;;;;;:18;:26;;;;;;;;3339:27;3331:36;;;;;;-1:-1:-1;;;;;3454:15:9;;;;;;:7;:15;;;;;:24;;;3449:92;;3506:23;3501:29;3494:36;;;;3449:92;3587:29;3609:6;3587:21;:29::i;:::-;3626:45;3649:6;3657;3665:5;3626:22;:45::i;:::-;3693:14;3688:20;3681:27;;3102:613;;;;;;:::o;38107:1476:21:-;38197:4;38264:5;;-1:-1:-1;;;;;38264:5:21;38250:10;:19;38246:132;;38292:75;38297:18;38317:49;38292:4;:75::i;38246:132::-;38453:34;;:::i;:::-;-1:-1:-1;38490:48:21;;;;;;;;;;;;38548:34;;:::i;:::-;-1:-1:-1;38585:48:21;;;;;;;;;3389:6;38585:48;;38647:61;38659:23;38585:48;38647:11;:61::i;:::-;38643:190;;;38731:91;38736:35;38773:48;38731:4;:91::i;38643:190::-;38843:34;;:::i;:::-;-1:-1:-1;38880:48:21;;;;;;;;;3537:6;38880:48;;38942:61;38880:48;38979:23;38942:11;:61::i;:::-;38938:190;;;39026:91;39031:35;39068:48;39026:4;:91::i;38938:190::-;39222:28;;;39315:62;;;;39449:89;;;;;;;;;;;;;;;;;;;;;;;;;39561:14;39556:20;;11800:340;12043:17;;:37;;;;;12079:1;12064:12;:16;12043:37;12039:95;;;12096:27;;;-1:-1:-1;;;12096:27:21;;;;;;;;;;;;-1:-1:-1;;;12096:27:21;;;;;;;;;;;;;;3054:26:26;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3054:26:26;;-1:-1:-1;3054:26:26;:::o;33288:556:21:-;33352:4;33419:5;;-1:-1:-1;;;;;33419:5:21;33405:10;:19;33401:123;;33447:66;33452:18;33472:40;33447:4;:66::i;33401:123::-;33610:6;;;-1:-1:-1;;;;;33676:18:21;;;-1:-1:-1;;;;;;33676:18:21;;;;;;;33763:36;;;33610:6;;;;33763:36;;;;;;;;;;;;;;;;;;;;;;;33822:14;33810:27;33288:556;-1:-1:-1;;;33288:556:21:o;14489:312::-;14738:57;;24525:264;24592:4;24598;24604;24621:9;24632:14;24648;24666:65;24706:7;24722:1;24726;24729;24666:39;:65::i;:::-;24620:111;;;;;;24755:3;24750:9;;;;;;;;24742:40;24761:9;;-1:-1:-1;24761:9:21;-1:-1:-1;24525:264:21;-1:-1:-1;;;24525:264:21:o;41038:592::-;41107:4;41141:5;;-1:-1:-1;;;;;41141:5:21;41127:10;:19;41123:125;;41169:68;41174:18;41194:42;41169:4;:68::i;41123:125::-;41336:13;;;-1:-1:-1;;;;;41419:32:21;;;-1:-1:-1;;;;;;41419:32:21;;;;;;;41536:49;;;41336:13;;;41536:49;;;41571:13;;;;41536:49;;;;;;;;;;;;;;;;41608:14;41603:20;;17112:1260;-1:-1:-1;;;;;17385:23:21;;17309:4;17385:23;;;:7;:23;;;;;:32;;;17384:33;;:72;;-1:-1:-1;;;;;;17422:25:21;;;;;;:7;:25;;;;;:34;;;17421:35;17384:72;17380:139;;;17484:23;17479:29;17472:36;;;;17380:139;17605:9;17618:14;17636:37;17664:8;17636:27;:37::i;:::-;17604:69;;-1:-1:-1;17604:69:21;;-1:-1:-1;17694:14:21;;-1:-1:-1;17687:3:21;:21;;;;;;;;;17683:68;;17736:3;17731:9;;;;;;;;17724:16;;;;;;17683:68;17764:14;17760:86;;17806:28;17801:34;;17760:86;17944:18;17972:14;-1:-1:-1;;;;;17965:42:21;;18008:8;17965:52;;;;;;;;;;;;;-1:-1:-1;;;;;17965:52:21;-1:-1:-1;;;;;17965:52:21;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17965:52:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17965:52:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17965:52:21;18082:36;;;17965:52;18082:36;;;;;18097:19;;18082:36;;17965:52;;-1:-1:-1;18028:17:21;;;;18064:70;;17965:52;18064:17;:70::i;:::-;18027:107;;-1:-1:-1;18027:107:21;-1:-1:-1;18159:18:21;18148:7;:29;;;;;;;;;18144:89;;18205:16;18200:22;18193:29;;;;;;;;;18144:89;18260:8;18246:11;:22;18242:86;;;18296:20;18291:26;;18242:86;18350:14;18338:27;;;;;;;17112:1260;;;;;;;;:::o;52526:933::-;52650:6;52645:808;52666:7;:14;52662:1;:18;52645:808;;;52701:13;52717:7;52725:1;52717:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;52749:24:21;;;;;;:7;:24;;;;;;;:33;52717:10;;-1:-1:-1;52749:33:21;;52741:67;;;;;-1:-1:-1;;;52741:67:21;;;;;;;;;;;;-1:-1:-1;;;52741:67:21;;;;;;;;;;;;;;;52839:4;52826:17;;;;52822:357;;;52863:22;;:::i;:::-;52888:37;;;;;;;;52903:6;-1:-1:-1;;;;;52903:18:21;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52903:20:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52903:20:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;52903:20:21;52888:37;;52863:62;-1:-1:-1;52943:51:21;52973:6;52863:62;52943:21;:51::i;:::-;53017:6;53012:153;53033:7;:14;53029:1;:18;53012:153;;;53076:70;53107:6;53116:7;53124:1;53116:10;;;;;;;;;;;;;;53128:11;53141:4;53076:22;:70::i;:::-;53049:3;;53012:153;;;;52822:357;;53209:4;53196:17;;;;53192:251;;;53233:38;53263:6;53233:21;:38::i;:::-;53294:6;53289:140;53310:7;:14;53306:1;:18;53289:140;;;53353:57;53384:6;53393:7;53401:1;53393:10;;;;;;;;;;;;;;53405:4;53353:22;:57::i;:::-;53326:3;;53289:140;;;;53192:251;-1:-1:-1;52682:3:21;;52645:808;;169:24:9;;;-1:-1:-1;;;;;169:24:9;;:::o;53651:275:21:-;53714:21;:19;:21::i;:::-;53706:65;;;;;-1:-1:-1;;;53706:65:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;53797:8;;;53815:20;;;;53850:31;;;;;;;;;;;;;;;;;;;;;;;;;53892:27;:25;:27::i;3375:58:26:-;;;;;;;;;;;;-1:-1:-1;;;;;3375:58:26;;;-1:-1:-1;;;3375:58:26;;;;;:::o;2669:52::-;;;;;;;;;;;;;;;:::o;2613:50::-;;;;;;;;;;;;;;;:::o;2711::21:-;2753:8;2711:50;:::o;663:25:26:-;;;-1:-1:-1;;;;;663:25:26;;:::o;470:672:9:-;623:5;;-1:-1:-1;;;;;623:5:9;609:10;:19;601:28;;;;;;678:11;:18;656:11;:18;:40;648:49;;;;;;708:14;;736:367;757:11;:18;753:1;:22;736:367;;;796:14;813:11;825:1;813:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;865:15:9;;841:21;865:15;;;:7;:15;;;;;;;898;;;;813:14;;-1:-1:-1;865:15:9;898;;894:93;;942:30;965:6;942:22;:30::i;:::-;1021:11;1033:1;1021:14;;;;;;;;;;;;;;1000:10;:18;1011:6;-1:-1:-1;;;;;1000:18:9;-1:-1:-1;;;;;1000:18:9;;;;;;;;;;;;:35;;;;1061:31;1066:9;1077:11;1089:1;1077:14;;;;;;;;;;;;;;1061:4;:31::i;:::-;1049:43;-1:-1:-1;;;777:3:9;;736:367;;;;1112:23;1125:9;1112:12;:23::i;1645:241::-;1792:8;;1850:28;;1792:87;;;-1:-1:-1;;;1792:87:9;;;;;;;;;;;;;;;;;1728:21;;;;-1:-1:-1;;;;;1792:8:9;;;;:38;;:87;;;;;;;;;;:8;:87;;;5:2:-1;;;;30:1;27;20:12;5:2;1792:87:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1792:87:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1792:87:9;;;;;;;;;-1:-1:-1;1792:87:9;-1:-1:-1;1645:241:9;;;:::o;2536:34:26:-;;;-1:-1:-1;;;2536:34:26;;;;;:::o;3501:58::-;;;;;;;;;;;;-1:-1:-1;;;;;3501:58:26;;;-1:-1:-1;;;3501:58:26;;;;;:::o;2114:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;42644:371:21:-;42738:13;;42700:4;;-1:-1:-1;;;;;42738:13:21;42724:10;:27;;:50;;-1:-1:-1;42769:5:21;;-1:-1:-1;;;;;42769:5:21;42755:10;:19;42724:50;42716:102;;;;-1:-1:-1;;;42716:102:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42850:5;;-1:-1:-1;;;;;42850:5:21;42836:10;:19;;:36;;-1:-1:-1;42868:4:21;42859:13;;;;42836:36;42828:71;;;;;-1:-1:-1;;;42828:71:21;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;42828:71:21;;;;;;;;;;;;;;;42910:22;:30;;;;;-1:-1:-1;;;42910:30:21;;-1:-1:-1;;;;42910:30:21;;;;;;;;;;42955:31;;;;;;;;;;;;;;;;;;-1:-1:-1;;;42955:31:21;;;;;;;;;;;;;;-1:-1:-1;43003:5:21;42644:371::o;4302:161::-;-1:-1:-1;;;;;4405:24:21;;;4382:4;4405:24;;;:7;:24;;;;;;;;:51;;;;;:42;;;;:51;;;;;;4302:161;;;;:::o;200:125:9:-;281:5;;-1:-1:-1;;;;;281:5:9;267:10;:19;259:28;;;;;;298:8;:20;;-1:-1:-1;;;;;;298:20:9;-1:-1:-1;;;;;298:20:9;;;;;;;;;;200:125::o;1117:21:26:-;;;;:::o;1535:100:9:-;1608:8;;:20;;;-1:-1:-1;;;1608:20:9;;;;1582:7;;-1:-1:-1;;;;;1608:8:9;;:18;;:20;;;;;;;;;;;;;;:8;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;1608:20:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1608:20:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1608:20:9;;-1:-1:-1;1535:100:9;:::o;39902:654:21:-;39959:4;39993:5;;-1:-1:-1;;;;;39993:5:21;39979:10;:19;39975:121;;40021:64;40026:18;40046:38;40021:4;:64::i;39975:121::-;-1:-1:-1;;;;;40110:24:21;;;;;;:7;:24;;;;;:33;;;40106:139;;;40166:68;40171:27;40200:33;40166:4;:68::i;40106:139::-;40255:6;-1:-1:-1;;;;;40255:15:21;;:17;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;40255:17:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;40255:17:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;40359:70:21;;;;;;;;40377:4;40359:70;;;-1:-1:-1;40255:17:21;40359:70;;;;;;;;;;;;-1:-1:-1;;;;;40332:24:21;;;;:7;:24;;;;;;;:97;;;;;;;-1:-1:-1;;40332:97:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40440:35;40348:6;40440:18;:35::i;:::-;40491:20;;;-1:-1:-1;;;;;40491:20:21;;;;;;;;;;;;;;;40534:14;40522:27;39902:654;-1:-1:-1;;39902:654:21:o;2820:47::-;-1:-1:-1;;;2820:47:21;:::o;3162:20:26:-;;;;:::o;3863:170:21:-;3924:15;3951:24;3978:13;:22;3992:7;-1:-1:-1;;;;;3978:22:21;-1:-1:-1;;;;;3978:22:21;;;;;;;;;;;;3951:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3951:49:21;;;;;;;;;;;;;;;;-1:-1:-1;3951:49:21;;3863:170;-1:-1:-1;;;;;;;3863:170:21:o;2576:31:26:-;;;-1:-1:-1;;;2576:31:26;;;;;:::o;56039:97:21:-;56085:15;56119:10;56112:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;56112:17:21;;;;;;;;;;;;;;;;;;;;;;;56039:97;:::o;3676:69:26:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;364:40::-;;;-1:-1:-1;;;;;364:40:26;;:::o;22142:761:21:-;22352:22;;22248:4;;-1:-1:-1;;;22352:22:21;;;;22351:23;22343:54;;;;;-1:-1:-1;;;22343:54:21;;;;;;;;;;;;-1:-1:-1;;;22343:54:21;;;;;;;;;;;;;;;22528:12;22543:50;22565:6;22573:3;22578:14;22543:21;:50::i;:::-;22528:65;-1:-1:-1;22607:31:21;;22603:76;;22661:7;-1:-1:-1;22654:14:21;;22603:76;22725:29;22747:6;22725:21;:29::i;:::-;22764:42;22787:6;22795:3;22800:5;22764:22;:42::i;:::-;22816;22839:6;22847:3;22852:5;22816:22;:42::i;4722:368::-;4786:13;4811:8;4822:7;:14;4811:25;;4847:21;4882:3;4871:15;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4871:15:21;-1:-1:-1;4847:39:21;-1:-1:-1;4901:6:21;4896:163;4917:3;4913:1;:7;4896:163;;;4941:13;4964:7;4972:1;4964:10;;;;;;;;;;;;;;4941:34;;5008:39;5028:6;5036:10;5008:19;:39::i;:::-;5003:45;;;;;;;;4990:7;4998:1;4990:10;;;;;;;;;;;;;;;;;:58;-1:-1:-1;4922:3:21;;4896:163;;;-1:-1:-1;5076:7:21;4722:368;-1:-1:-1;;;4722:368:21:o;31083:1949::-;31339:6;;;:49;;;-1:-1:-1;;;31339:49:21;;-1:-1:-1;;;;;31339:49:21;;;;;;;;;;;;31219:4;;;;;;31339:6;;;:25;;:49;;;;;;;;;;;;;;;:6;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;31339:49:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31339:49:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;31339:49:21;31429:6;;;:51;;;-1:-1:-1;;;31429:51:21;;-1:-1:-1;;;;;31429:51:21;;;;;;;;;;;;31339:49;;-1:-1:-1;31398:28:21;;31429:6;;;;;:25;;:51;;;;;31339:49;;31429:51;;;;;;;;:6;:51;;;5:2:-1;;;;30:1;27;20:12;5:2;31429:51:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31429:51:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;31429:51:21;;-1:-1:-1;31494:26:21;;;:58;;-1:-1:-1;31524:28:21;;31494:58;31490:124;;;31581:17;31568:35;-1:-1:-1;31601:1:21;;-1:-1:-1;31568:35:21;;-1:-1:-1;;31568:35:21;31490:124;31999:25;32034:16;-1:-1:-1;;;;;32027:43:21;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32027:45:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32027:45:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;32027:45:21;;-1:-1:-1;32108:16:21;32134:20;;:::i;:::-;32164:22;;:::i;:::-;32196:16;;:::i;:::-;32222:17;32273:59;32280:28;;32310:21;32273:6;:59::i;:::-;32250:82;-1:-1:-1;32250:82:21;-1:-1:-1;32357:18:21;32346:7;:29;;;;;;;;;32342:94;;32404:16;32399:22;32391:34;-1:-1:-1;32423:1:21;;-1:-1:-1;32391:34:21;;-1:-1:-1;;;;;;;;32391:34:21;32342:94;32471:53;32478:23;32503:20;32471:6;:53::i;:::-;32446:78;-1:-1:-1;32446:78:21;-1:-1:-1;32549:18:21;32538:7;:29;;;;;;;;;32534:94;;32596:16;32591:22;;32534:94;32657:30;32664:9;32675:11;32657:6;:30::i;:::-;32638:49;-1:-1:-1;32638:49:21;-1:-1:-1;32712:18:21;32701:7;:29;;;;;;;;;32697:94;;32759:16;32754:22;;32697:94;32826:43;32844:5;32851:17;32826;:43::i;:::-;32801:68;-1:-1:-1;32801:68:21;-1:-1:-1;32894:18:21;32883:7;:29;;;;;;;;;32879:94;;32941:16;32936:22;;32879:94;32996:14;32983:42;-1:-1:-1;33013:11:21;;-1:-1:-1;;;;;;;;31083:1949:21;;;;;;;:::o;3862:69:26:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;4008:43::-;;;;;;;;;;;;;:::o;54092:288:21:-;54168:21;:19;:21::i;:::-;54160:64;;;;;-1:-1:-1;;;54160:64:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;54240:6;54235:101;54256:7;:14;54252:1;:18;54235:101;;;54291:34;54314:7;54322:1;54314:10;;;;;;;;;;;;;;54291:22;:34::i;:::-;54272:3;;54235:101;;;;54346:27;:25;:27::i;19816:960::-;20107:19;;20003:4;;-1:-1:-1;;;20107:19:21;;;;20106:20;20098:48;;;;;-1:-1:-1;;;20098:48:21;;;;;;;;;;;;-1:-1:-1;;;20098:48:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;20218:25:21;;;;;;:7;:25;;;;;:34;;;20217:35;;:72;;-1:-1:-1;;;;;;20257:23:21;;;;;;:7;:23;;;;;:32;;;20256:33;20217:72;20213:139;;;20317:23;20312:29;;20213:139;20415:14;-1:-1:-1;;;;;20408:34:21;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20408:36:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20408:36:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20408:36:21;20366:38;;;-1:-1:-1;;;20366:38:21;;;;-1:-1:-1;;;;;20366:78:21;;;;:36;;;;;:38;;;;;20408:36;;20366:38;;;;;;;:36;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;20366:38:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20366:38:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20366:38:21;-1:-1:-1;;;;;20366:78:21;;20362:148;;20472:26;20467:32;;20362:148;20556:39;20578:16;20556:21;:39::i;:::-;20605:57;20628:16;20646:8;20656:5;20605:22;:57::i;:::-;20672:59;20695:16;20713:10;20725:5;20672:22;:59::i;:::-;20754:14;20742:27;19816:960;-1:-1:-1;;;;;;19816:960:21:o;37411:403::-;37471:4;37538:5;;-1:-1:-1;;;;;37538:5:21;37524:10;:19;37520:121;;37566:64;37571:18;37591:38;37566:4;:64::i;37520:121::-;37671:9;;;37690:24;;;;37729:40;;;;;;;;;;;;;;;;;;;;;;;;;37792:14;37787:20;;12572:1618;-1:-1:-1;;;;;12770:28:21;;12666:4;12770:28;;;:20;:28;;;;;;;;12769:29;12761:58;;;;;-1:-1:-1;;;12761:58:21;;;;;;;;;;;;-1:-1:-1;;;12761:58:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;12835:15:21;;;;;;:7;:15;;;;;:24;;;12830:92;;12887:23;12882:29;;12830:92;-1:-1:-1;;;;;12937:15:21;;;;;;;:7;:15;;;;;;;;:43;;;;;:33;;;;:43;;;;;;12932:562;;13081:10;-1:-1:-1;;;;;13081:20:21;;;13073:54;;;;;-1:-1:-1;;;13073:54:21;;;;;;;;;;;;-1:-1:-1;;;13073:54:21;;;;;;;;;;;;;;;13195:9;13207:49;13234:10;13247:8;13207:19;:49::i;:::-;13195:61;-1:-1:-1;13281:14:21;13274:3;:21;;;;;;;;;13270:76;;13327:3;13322:9;;;;;;;;13315:16;;;;;13270:76;-1:-1:-1;;;;;13439:15:21;;;;;;;:7;:15;;;;;;;;:43;;;;;:33;;;;:43;;;;;;13432:51;;;;12932:562;;13508:6;;;:41;;;-1:-1:-1;;;13508:41:21;;-1:-1:-1;;;;;13508:41:21;;;;;;;;;;;;:6;;;;;:25;;:41;;;;;;;;;;;;;;;:6;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;13508:41:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13508:41:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13508:41:21;13504:107;;13582:17;13577:23;;13504:107;13622:9;13635:14;13653:82;13693:8;13710:6;13719:1;13722:12;13653:39;:82::i;:::-;13621:114;;-1:-1:-1;13621:114:21;;-1:-1:-1;13756:14:21;;-1:-1:-1;13749:3:21;:21;;;;;;;;;13745:68;;13798:3;13793:9;;;;;;;;13786:16;;;;;;13745:68;13826:13;;13822:85;;13867:28;13862:34;;13822:85;13953:22;;:::i;:::-;13978:45;;;;;;;;14000:6;-1:-1:-1;;;;;13993:26:21;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13993:28:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13993:28:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13993:28:21;13978:45;;13953:70;-1:-1:-1;14033:42:21;14055:6;13953:70;14033:21;:42::i;:::-;14085:60;14108:6;14116:8;14126:11;14139:5;14085:22;:60::i;:::-;14168:14;14156:27;12572:1618;-1:-1:-1;;;;;;;12572:1618:21:o;1240:49:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1240:49:26;;-1:-1:-1;1240:49:26;;-1:-1:-1;1240:49:26:o;469:47::-;;;-1:-1:-1;;;;;469:47:26;;:::o;35531:1606:21:-;35628:4;35695:5;;-1:-1:-1;;;;;35695:5:21;35681:10;:19;35677:128;;35723:71;35728:18;35748:45;35723:4;:71::i;:::-;35716:78;;;;35677:128;-1:-1:-1;;;;;35874:24:21;;35850:21;35874:24;;;:7;:24;;;;;35913:15;;;;35908:128;;35951:74;35956:23;35981:43;35951:4;:74::i;:::-;35944:81;;;;;35908:128;36046:33;;:::i;:::-;-1:-1:-1;36082:44:21;;;;;;;;;;;;36179:20;;:::i;:::-;-1:-1:-1;36202:44:21;;;;;;;;;3244:6;36202:44;;36260:46;36202:44;36283:22;36260:11;:46::i;:::-;36256:167;;;36329:83;36334:31;36367:44;36329:4;:83::i;:::-;36322:90;;;;;;;36256:167;36494:32;;;;;:74;;-1:-1:-1;36530:6:21;;;:33;;;-1:-1:-1;;;36530:33:21;;-1:-1:-1;;;;;36530:33:21;;;;;;;;;;;;:6;;;;;:25;;:33;;;;;;;;;;;;;;;:6;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;36530:33:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36530:33:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;36530:33:21;:38;36494:74;36490:184;;;36591:72;36596:17;36615:47;36591:4;:72::i;36490:184::-;36806:31;;;;;36847:61;;;;37007:85;;;-1:-1:-1;;;;;37007:85:21;;;;;;;;;;;;;;;;;;;;;;;;;;;37115:14;37103:27;35531:1606;-1:-1:-1;;;;;;;35531:1606:21:o;2497:33:26:-;;;-1:-1:-1;;;2497:33:26;;;;;:::o;805:31::-;;;;:::o;51683:95:21:-;51742:29;51752:6;51760:10;51742:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;51742:29:21;;;;;;;;;;;;;;;;;;;;;:9;:29::i;10169:441::-;10263:4;10279:12;10294:53;10316:6;10324:8;10334:12;10294:21;:53::i;:::-;10279:68;-1:-1:-1;10361:31:21;;10357:76;;10415:7;-1:-1:-1;10408:14:21;;10357:76;10479:29;10501:6;10479:21;:29::i;:::-;10518:47;10541:6;10549:8;10559:5;10518:22;:47::i;:::-;10588:14;10576:27;10169:441;-1:-1:-1;;;;;10169:441:21:o;6896:2127::-;6957:4;6973:13;6996;6973:37;;7099:9;7110:15;7127;7148:6;-1:-1:-1;;;;;7148:25:21;;7174:10;7148:37;;;;;;;;;;;;;-1:-1:-1;;;;;7148:37:21;-1:-1:-1;;;;;7148:37:21;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7148:37:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7148:37:21;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;7148:37:21;;;;;;;;;;;;;-1:-1:-1;7148:37:21;;-1:-1:-1;7148:37:21;-1:-1:-1;7203:9:21;;7195:59;;;;-1:-1:-1;;;7195:59:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7349:15;;7345:125;;7387:72;7392:28;7422:36;7387:4;:72::i;:::-;7380:79;;;;;;;;7345:125;7560:12;7575:60;7597:13;7612:10;7624;7575:21;:60::i;:::-;7560:75;-1:-1:-1;7649:12:21;;7645:121;;7684:71;7695:15;7712:33;7747:7;7684:10;:71::i;:::-;7677:78;;;;;;;;;7645:121;-1:-1:-1;;;;;7806:24:21;;7776:27;7806:24;;;:7;:24;;;;;;;;7952:10;7921:42;;:30;;;:42;;;;;;;;;7916:101;;7991:14;7979:27;;;;;;;;;;7916:101;8118:10;8087:42;;;;:30;;;:42;;;;;;;;8080:49;;-1:-1:-1;;8080:49:21;;;8285:13;:25;;;;;;8253:57;;;;;;;;;;;;;;;;;:29;;:57;;;8285:25;8253:57;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8253:57:21;;;;;;;;;;;;;;;;-1:-1:-1;;8331:20:21;;8253:57;;-1:-1:-1;8331:20:21;;-1:-1:-1;8320:8:21;;-1:-1:-1;;8392:157:21;8413:3;8409:1;:7;8392:157;;;8461:6;-1:-1:-1;;;;;8441:26:21;:13;8455:1;8441:16;;;;;;;;;;;;;;-1:-1:-1;;;;;8441:26:21;;8437:102;;;8500:1;8487:14;;8519:5;;8437:102;8418:3;;8392:157;;;;8675:3;8662:10;:16;8655:24;;;;8822:10;8778:27;8808:25;;;:13;:25;;;;;8879:17;;8808:25;;-1:-1:-1;;8879:21:21;;;8868:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8868:33:21;8843:10;8854;8843:22;;;;;;;;;;;;;;;;;:58;;-1:-1:-1;;;;;;8843:58:21;-1:-1:-1;;;;;8843:58:21;;;;;;;;;;8911:19;;;;-1:-1:-1;;8911:19:21;;;:::i;:::-;-1:-1:-1;8946:32:21;;;-1:-1:-1;;;;;8946:32:21;;;;8967:10;8946:32;;;;;;;;;;;;;;;;;9001:14;8989:27;6896:2127;-1:-1:-1;;;;;;;;;;;;6896:2127:21:o;177:20:26:-;;;-1:-1:-1;;;;;177:20:26;;:::o;46820:1086:21:-;-1:-1:-1;;;;;46954:23:21;;46916:35;46954:23;;;:15;:23;;;;;;;;47006:10;:18;;;;;;46954:23;;47053:16;:14;:16::i;:::-;47121:17;;47034:35;;-1:-1:-1;47079:16:21;;47098:42;;47034:35;;-1:-1:-1;;;47121:17:21;;;;47098:4;:42::i;:::-;47079:61;;47168:1;47154:11;:15;:34;;;;;47187:1;47173:11;:15;47154:34;47150:750;;;47204:17;47224:54;47236:6;-1:-1:-1;;;;;47229:27:21;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47229:29:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47229:29:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;47229:29:21;47260:17;47224:4;:54::i;:::-;47204:74;;47292:16;47311:30;47316:11;47329;47311:4;:30::i;:::-;47292:49;;47355:19;;:::i;:::-;47392:1;47377:12;:16;:78;;47434:21;;;;;;;;47452:1;47434:21;;;47377:78;;;47396:35;47405:11;47418:12;47396:8;:35::i;:::-;47355:100;;47469:19;;:::i;:::-;47496:37;;;;;;;;;47514:17;;-1:-1:-1;;;;;47514:17:21;47496:37;;47491:50;;47535:5;47491:4;:50::i;:::-;47469:72;;47581:185;;;;;;;;47622:53;47630:5;:14;;;47622:53;;;;;;;;;;;;;-1:-1:-1;;;47622:53:21;;;:7;:53::i;:::-;-1:-1:-1;;;;;47581:185:21;;;;;47700:51;47707:11;47700:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;47700:51:21;;;:6;:51::i;:::-;47581:185;;;;;;;-1:-1:-1;;;;;47555:23:21;;;;;;:15;:23;;;;;;;;:211;;;;;;;;;;;;-1:-1:-1;;;47555:211:21;-1:-1:-1;;;;;47555:211:21;;;-1:-1:-1;;;;;;47555:211:21;;;;;;;;;;;;;;-1:-1:-1;47150:750:21;;-1:-1:-1;;;47150:750:21;;47787:15;;47783:117;;47838:51;47845:11;47838:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;47838:51:21;;;:6;:51::i;:::-;47818:71;;;;;;;-1:-1:-1;;;47818:71:21;-1:-1:-1;;;;;47818:71:21;;;;;;46820:1086;;;;;;:::o;49540:1040::-;-1:-1:-1;;;;;49713:23:21;;49675:35;49713:23;;;:15;:23;;;;;49746:25;;:::i;:::-;-1:-1:-1;49774:37:21;;;;;;;;;49792:17;;-1:-1:-1;;;;;49792:17:21;49774:37;;49821:27;;:::i;:::-;-1:-1:-1;49851:55:21;;;;;;;;;-1:-1:-1;;;;;49869:25:21;;;-1:-1:-1;49869:25:21;;;:17;:25;;;;;:35;;;;;;;;;;;;;;49851:55;;49954:20;;49916:35;;;;;;:58;;;;49989:22;;:26;49985:589;;50031:24;;:::i;:::-;50058:32;50063:11;50076:13;50058:4;:32::i;:::-;50031:59;;50104:19;50126:69;50138:6;-1:-1:-1;;;;;50131:34:21;;50166:8;50131:44;;;;;;;;;;;;;-1:-1:-1;;;;;50131:44:21;-1:-1:-1;;;;;50131:44:21;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50131:44:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50131:44:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;50131:44:21;50177:17;50126:4;:69::i;:::-;50104:91;;50209:18;50230:32;50235:14;50251:10;50230:4;:32::i;:::-;-1:-1:-1;;;;;50304:21:21;;50276:20;50304:21;;;:11;:21;;;;;;50209:53;;-1:-1:-1;50276:20:21;50299:42;;50209:53;50299:4;:42::i;:::-;50276:65;;50379:79;50392:8;50402:15;50419:13;:38;;2753:8;50419:38;;;50435:1;50419:38;50379:12;:79::i;:::-;-1:-1:-1;;;;;50355:21:21;;;;;;;:11;:21;;;;;;;;;:103;;;;50542:20;;50477:86;;;;;;;;;;;50355:21;;50477:86;;;;;;;;;;;;;;;49985:589;;;;;49540:1040;;;;;;;:::o;1855:149:30:-;1916:4;1937:33;1950:3;1945:9;;;;;;;;1961:4;1956:10;;;;;;;;1937:33;;;;;;;;;;;;;1968:1;1937:33;;;;;;;;;;;;;1993:3;1988:9;;;;;;;7723:147:31;7849:14;7832:13;;:31;;;7723:147::o;7517:139::-;7635:14;7619:13;;:30;;7517:139::o;1332:197:9:-;1392:8;;;;;;;;;-1:-1:-1;;;;;1392:8:9;-1:-1:-1;;;;;1392:32:9;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1392:34:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1392:34:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1392:34:9;1388:135;;;1442:7;;1388:135;1479:33;:31;:33::i;27044:3511:21:-;27225:5;27232:4;27238;27255:37;;:::i;:::-;-1:-1:-1;;;;;27452:22:21;;27339:9;27452:22;;;:13;:22;;;;;;;;27427:47;;;;;;;;;;;;;;;;;27339:9;;27427:22;;:47;27452:22;27427:47;;;27452:22;27427:47;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27427:47:21;;;;;;;;;;;;;;;;-1:-1:-1;27427:47:21;;-1:-1:-1;27489:6:21;;-1:-1:-1;;;;27484:2728:21;27505:6;:13;27501:1;:17;27484:2728;;;27539:12;27554:6;27561:1;27554:9;;;;;;;;;;;;;;27539:24;;27721:5;-1:-1:-1;;;;;27721:24:21;;27746:7;27721:33;;;;;;;;;;;;;-1:-1:-1;;;;;27721:33:21;-1:-1:-1;;;;;27721:33:21;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27721:33:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27721:33:21;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;27721:33:21;;;;;;;;;;;;;;;;;27692:25;;27645:109;27672:18;;;27645:109;;;;27652:18;;;27645:109;;;;27721:33;-1:-1:-1;27772:9:21;;27768:164;;-1:-1:-1;27890:20:21;;-1:-1:-1;27912:1:21;;-1:-1:-1;27912:1:21;;-1:-1:-1;27882:35:21;;-1:-1:-1;;;;;27882:35:21;27768:164;27969:65;;;;;;;;;-1:-1:-1;;;;;27984:23:21;;;-1:-1:-1;27984:23:21;;;:7;:23;;;;;:48;;;27969:65;;27945:21;;;:89;;;;28068:42;;;;;;;-1:-1:-1;;;28083:25:21;28068:42;;28048:17;;;:62;28205:6;;;:32;;-1:-1:-1;;;28205:32:21;;;;;;;;;;;:6;;;:25;;:32;;;;;27969:65;28205:32;;;;;:6;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;28205:32:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28205:32:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;28205:32:21;28178:24;;;:59;;;28251:100;;-1:-1:-1;28312:17:21;;-1:-1:-1;28331:1:21;;-1:-1:-1;28331:1:21;;-1:-1:-1;28304:32:21;;-1:-1:-1;;;;;28304:32:21;28251:100;28383:41;;;;;;;;;28398:24;;;;28383:41;;28364:16;;;:60;;;28569:21;;;;28592:17;;;;28561:67;;:7;:67::i;:::-;28539:18;;;28532:96;;-1:-1:-1;28654:18:21;28646:4;:26;;;;;;;;;28642:96;;-1:-1:-1;28700:16:21;;-1:-1:-1;28718:1:21;;-1:-1:-1;28718:1:21;;-1:-1:-1;28692:31:21;;-1:-1:-1;;;;;28692:31:21;28642:96;28843:84;28868:4;:18;;;28888:4;:18;;;28908:4;:18;;;28843:24;:84::i;:::-;28814:113;;;-1:-1:-1;28821:18:21;28945:4;:26;;;;;;;;;28941:96;;-1:-1:-1;28999:16:21;;-1:-1:-1;29017:1:21;;-1:-1:-1;29017:1:21;;-1:-1:-1;28991:31:21;;-1:-1:-1;;;;;28991:31:21;28941:96;29154:89;29179:4;:16;;;29197:4;:18;;;29217:4;:25;;;29154:24;:89::i;:::-;29125:25;;;29118:125;;-1:-1:-1;29269:18:21;29261:4;:26;;;;;;;;;29257:96;;-1:-1:-1;29315:16:21;;-1:-1:-1;29333:1:21;;-1:-1:-1;29333:1:21;;-1:-1:-1;29307:31:21;;-1:-1:-1;;;;;29307:31:21;29257:96;29446:12;-1:-1:-1;;;;;29437:21:21;:5;-1:-1:-1;;;;;29437:21:21;;29433:769;;;29619:85;29644:4;:18;;;29664:12;29678:4;:25;;;29619:24;:85::i;:::-;29590:25;;;29583:121;;-1:-1:-1;29734:18:21;29726:4;:26;;;;;;;;;29722:104;;-1:-1:-1;29784:16:21;;-1:-1:-1;29802:1:21;;-1:-1:-1;29802:1:21;;-1:-1:-1;29776:31:21;;-1:-1:-1;;;;;29776:31:21;29722:104;29983:83;30008:4;:16;;;30026:12;30040:4;:25;;;29983:24;:83::i;:::-;29954:25;;;29947:119;;-1:-1:-1;30096:18:21;30088:4;:26;;;;;;;;;30084:104;;-1:-1:-1;30146:16:21;;-1:-1:-1;30164:1:21;;-1:-1:-1;30164:1:21;;-1:-1:-1;30138:31:21;;-1:-1:-1;;;;;30138:31:21;30084:104;-1:-1:-1;27520:3:21;;27484:2728;;;-1:-1:-1;30318:25:21;;;;30297:18;;:46;30293:256;;;-1:-1:-1;;;30404:25:21;;;;30383:18;;30367:14;;-1:-1:-1;30383:46:21;;-1:-1:-1;30367:14:21;;-1:-1:-1;30359:74:21;;30293:256;-1:-1:-1;;30519:18:21;;30491:25;;;;;30472:14;;-1:-1:-1;30472:14:21;;-1:-1:-1;30491:46:21;;;;;-1:-1:-1;30464:74:21;;-1:-1:-1;30464:74:21;45637:1030;-1:-1:-1;;;;;45741:23:21;;45703:35;45741:23;;;:15;:23;;;;;;;;45793:10;:18;;;;;;45741:23;;45840:16;:14;:16::i;:::-;45908:17;;45821:35;;-1:-1:-1;45866:16:21;;45885:42;;45821:35;;-1:-1:-1;;;45908:17:21;;;;45885:4;:42::i;:::-;45866:61;;45955:1;45941:11;:15;:34;;;;;45974:1;45960:11;:15;45941:34;45937:724;;;45991:17;46018:6;-1:-1:-1;;;;;46011:26:21;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46011:28:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46011:28:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;46011:28:21;;-1:-1:-1;46053:16:21;46072:30;46077:11;46090;46072:4;:30::i;:::-;46053:49;;46116:19;;:::i;:::-;46153:1;46138:12;:16;:78;;46195:21;;;;;;;;46213:1;46195:21;;;46138:78;;;46157:35;46166:11;46179:12;46157:8;:35::i;:::-;46116:100;;46230:19;;:::i;:::-;46257:37;;;;;;;;;46275:17;;-1:-1:-1;;;;;46275:17:21;46257:37;;46252:50;;46296:5;46252:4;:50::i;:::-;46230:72;;46342:185;;;;;;;;46383:53;46391:5;:14;;;46383:53;;;;;;;;;;;;;-1:-1:-1;;;46383:53:21;;;:7;:53::i;:::-;-1:-1:-1;;;;;46342:185:21;;;;;46461:51;46468:11;46461:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;46461:51:21;;;:6;:51::i;:::-;46342:185;;;;;;;-1:-1:-1;;;;;46316:23:21;;;;;;:15;:23;;;;;;;;:211;;;;;;;;;;;;-1:-1:-1;;;46316:211:21;-1:-1:-1;;;;;46316:211:21;;;-1:-1:-1;;;;;;46316:211:21;;;;;;;;;;;;;;-1:-1:-1;45937:724:21;;-1:-1:-1;;;45937:724:21;;46548:15;;46544:117;;46599:51;46606:11;46599:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;46599:51:21;;;:6;:51::i;:::-;46579:71;;;;;;;-1:-1:-1;;;46579:71:21;-1:-1:-1;;;;;46579:71:21;;;;;;45637:1030;;;;;:::o;48155:1036::-;-1:-1:-1;;;;;48298:23:21;;48260:35;48298:23;;;:15;:23;;;;;48331:25;;:::i;:::-;-1:-1:-1;48359:37:21;;;;;;;;;48377:17;;-1:-1:-1;;;;;48377:17:21;48359:37;;48406:27;;:::i;:::-;-1:-1:-1;48436:55:21;;;;;;;;;-1:-1:-1;;;;;48454:25:21;;;-1:-1:-1;48454:25:21;;;:17;:25;;;;;:35;;;;;;;;;;;;;;48436:55;;48539:20;;48501:35;;;;;;:58;;;;48574:22;;:27;:55;;;;-1:-1:-1;48605:20:21;;:24;;48574:55;48570:127;;;-1:-1:-1;;;48645:41:21;;48570:127;48707:24;;:::i;:::-;48734:32;48739:11;48752:13;48734:4;:32::i;:::-;48707:59;;48776:19;48805:6;-1:-1:-1;;;;;48798:24:21;;48823:8;48798:34;;;;;;;;;;;;;-1:-1:-1;;;;;48798:34:21;-1:-1:-1;;;;;48798:34:21;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48798:34:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48798:34:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;48798:34:21;;-1:-1:-1;48842:18:21;48863:32;48798:34;48884:10;48863:4;:32::i;:::-;-1:-1:-1;;;;;48933:21:21;;48905:20;48933:21;;;:11;:21;;;;;;48842:53;;-1:-1:-1;48905:20:21;48928:42;;48842:53;48928:4;:42::i;:::-;48905:65;;49004:79;49017:8;49027:15;49044:13;:38;;2753:8;49044:38;;49004:79;-1:-1:-1;;;;;48980:21:21;;;;;;;:11;:21;;;;;;;;;:103;;;;49163:20;;49098:86;;;;;;;;;;;48980:21;;49098:86;;;;;;;;;;;;;;;48155:1036;;;;;;;;;;:::o;25068:185::-;25145:5;25152:4;25158;25181:65;25221:7;25237:1;25241;25244;25181:39;:65::i;:::-;25174:72;;;;;;25068:185;;;;;:::o;2536:306:31:-;2613:9;2624:4;2641:13;2656:18;;:::i;:::-;2678:20;2688:1;2691:6;2678:9;:20::i;:::-;2640:58;;-1:-1:-1;2640:58:31;-1:-1:-1;2719:18:31;2712:3;:25;;;;;;;;;2708:71;;-1:-1:-1;2761:3:31;-1:-1:-1;2766:1:31;;-1:-1:-1;2753:15:31;;2708:71;2797:18;2817:17;2826:7;2817:8;:17::i;:::-;2789:46;;;;;;2536:306;;;;;;:::o;43733:146:21:-;43787:4;43824:5;;-1:-1:-1;;;;;43824:5:21;43810:10;:19;;:62;;-1:-1:-1;43847:25:21;;-1:-1:-1;;;;;43847:25:21;43833:10;:39;43810:62;43803:69;;43733:146;:::o;54386:922::-;-1:-1:-1;;;;;54477:15:21;;54453:21;54477:15;;;:7;:15;;;;;54510;;;;:23;;:15;:23;54502:61;;;;;-1:-1:-1;;;54502:61:21;;;;;;;;;;;;-1:-1:-1;;;54502:61:21;;;;;;;;;;;;;;;54581:15;;;;;;:24;54573:62;;;;;-1:-1:-1;;;54573:62:21;;;;;;;;;;;;-1:-1:-1;;;54573:62:21;;;;;;;;;;;;;;;54646:15;;;:22;;-1:-1:-1;;54646:22:21;54664:4;54646:22;;;;;;54683:34;;;-1:-1:-1;;;;;54683:34:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;54732:23:21;;;;;;:15;:23;;;;;:29;-1:-1:-1;;;;;54732:29:21;:34;:72;;;;-1:-1:-1;;;;;;54770:23:21;;;;;;:15;:23;;;;;:29;-1:-1:-1;;;54770:29:21;;;;:34;54732:72;54728:282;;;54846:153;;;;;;;;-1:-1:-1;;;;;;;;54846:153:21;;;;;54928:56;54935:16;:14;:16::i;:::-;54928:56;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;54928:56:21;;;:6;:56::i;:::-;54846:153;;;;;;;-1:-1:-1;;;;;54820:23:21;;;;;;:15;:23;;;;;;;;:179;;;;;;;;;;;;-1:-1:-1;;;54820:179:21;-1:-1:-1;;;;;54820:179:21;;;-1:-1:-1;;;;;;54820:179:21;;;;;;;;;;;;;;54728:282;-1:-1:-1;;;;;55024:23:21;;;;;;:15;:23;;;;;:29;-1:-1:-1;;;;;55024:29:21;:34;:72;;;;-1:-1:-1;;;;;;55062:23:21;;;;;;:15;:23;;;;;:29;-1:-1:-1;;;55062:29:21;;;;:34;55024:72;55020:282;;;55138:153;;;;;;;;-1:-1:-1;;;;;;;;55138:153:21;;;;;55220:56;55227:16;:14;:16::i;55220:56::-;55138:153;;;;;;;-1:-1:-1;;;;;55112:23:21;;;;;;:15;:23;;;;;;;;:179;;;;;;;;;;;;-1:-1:-1;;;55112:179:21;-1:-1:-1;;;;;55112:179:21;;;-1:-1:-1;;;;;;55112:179:21;;;;;;;;;;;;;;54386:922;;:::o;8911:114:31:-;8964:4;8987:31;8992:1;8995;8987:31;;;;;;;;;;;;;-1:-1:-1;;;8987:31:31;;;:4;:31::i;40562:245:21:-;40630:6;40625:135;40646:10;:17;40642:21;;40625:135;;;40717:6;-1:-1:-1;;;;;40693:31:21;:10;40704:1;40693:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;40693:13:21;:31;;40685:64;;;;;-1:-1:-1;;;40685:64:21;;;;;;;;;;;;-1:-1:-1;;;40685:64:21;;;;;;;;;;;;;;;40665:4;;40625:135;;;-1:-1:-1;40769:10:21;27::-1;;39:1;23:18;;45:23;;-1:-1;40769:31:21;;;;;;;;-1:-1:-1;;;;;;40769:31:21;-1:-1:-1;;;;;40769:31:21;;;;;;;;;;40562:245::o;10616:851::-;-1:-1:-1;;;;;10744:15:21;;10723:4;10744:15;;;:7;:15;;;;;:24;;;10739:92;;10796:23;10791:29;;10739:92;-1:-1:-1;;;;;10939:15:21;;;;;;;:7;:15;;;;;;;;:43;;;;;:33;;;;:43;;;;;;10934:102;;11010:14;11005:20;;10934:102;11138:9;11151:14;11169:82;11209:8;11226:6;11235:12;11249:1;11169:39;:82::i;:::-;11137:114;;-1:-1:-1;11137:114:21;;-1:-1:-1;11272:14:21;;-1:-1:-1;11265:3:21;:21;;;;;;;;;11261:68;;11314:3;11309:9;;;;;;;11261:68;11342:13;;11338:85;;11383:28;11378:34;;5368:1144;-1:-1:-1;;;;;5495:24:21;;5448:5;5495:24;;;:7;:24;;;;;5535:21;;;;5530:132;;5628:23;5621:30;;;;;5530:132;-1:-1:-1;;;;;5676:40:21;;;;;;:30;;;:40;;;;;;;;:48;;:40;:48;5672:130;;;5777:14;5770:21;;;;;5672:130;5850:9;;-1:-1:-1;;;;;5816:23:21;;;;;;:13;:23;;;;;:30;:43;5812:140;;5920:21;5913:28;;;;;5812:140;-1:-1:-1;;;;;6333:40:21;;;;;;;:30;;;:40;;;;;;;;:47;;-1:-1:-1;;6333:47:21;6376:4;6333:47;;;;;;6390:13;:23;;;;;27:10:-1;;23:18;;;45:23;;6390:36:21;;;;;;;;;;;;;;-1:-1:-1;;;;;;6390:36:21;;;;;;;6442:31;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6491:14:21;;5368:1144;-1:-1:-1;;;5368:1144:21:o;6180:148:31:-;6235:9;6246:10;;:::i;:::-;6275:46;6282:18;;;;;;;;6297:1;6282:18;;;6302;;;;;;;;6317:1;6302:18;;;6275:6;:46::i;:::-;6268:53;;;;6180:148;;;;;:::o;6932:144::-;6999:9;7010:10;;:::i;:::-;7046;;7058;;7039:30;;7046:10;7039:6;:30::i;2122:183:30:-;2207:4;2228:43;2241:3;2236:9;;;;;;;;2252:4;2247:10;;;;;;;;2228:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:3;2289:9;;;;;;;9528:118:31;9581:4;9604:35;9609:1;9612;9604:35;;;;;;;;;;;;;-1:-1:-1;;;9604:35:31;;;:4;:35::i;11373:124::-;11432:4;11455:35;11460:17;11465:1;447:4;11460;:17::i;:::-;11479:10;;11455:4;:35::i;10693:120::-;10746:4;10769:37;10774:1;10777;10769:37;;;;;;;;;;;;;-1:-1:-1;;;10769:37:31;;;:4;:37::i;12245:145::-;12302:13;;:::i;:::-;12334:49;;;;;;;;12352:29;12357:20;12362:1;-1:-1:-1;;;12357:4:31;:20::i;:::-;12379:1;12352:4;:29::i;:::-;12334:49;;12327:56;12245:145;-1:-1:-1;;;12245:145:31:o;8747:158::-;8818:13;;:::i;:::-;8850:48;;;;;;;;8868:28;8873:1;:10;;;8885:1;:10;;;8868:4;:28::i;8263:162::-;8339:7;8378:12;-1:-1:-1;;;8366:10:31;;8358:33;;;;-1:-1:-1;;;8358:33:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8358:33:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8416:1:31;;8263:162;-1:-1:-1;;8263:162:31:o;8431:158::-;8506:6;8543:12;-1:-1:-1;;;8532:9:31;;8524:32;;;;-1:-1:-1;;;8524:32:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;9364:158:31;9435:13;;:::i;:::-;9467:48;;;;;;;;9485:28;9490:1;:10;;;9502:1;:10;;;9485:4;:28::i;10562:125::-;10624:4;-1:-1:-1;;;10647:19:31;10652:1;10655;:10;;;10647:4;:19::i;:::-;:33;;;;;;;10562:125;-1:-1:-1;;;10562:125:31:o;1896:766:9:-;1984:4;2000:19;2022:16;:14;:16::i;:::-;2000:38;;2067:9;2052:11;:24;;:43;;;;;2094:1;2080:11;:15;2052:43;:74;;;;-1:-1:-1;;;;;;2099:27:9;;;;2052:74;2048:580;;;2226:29;;;-1:-1:-1;;;2226:29:9;;2249:4;2226:29;;;;;;2179:11;;2142:19;;-1:-1:-1;;;;;2226:14:9;;;;;:29;;;;;;;;;;;;;;:14;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;2226:29:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2226:29:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2226:29:9;;-1:-1:-1;2273:28:9;;;2269:349;;2364:8;;:45;;;-1:-1:-1;;;2364:45:9;;-1:-1:-1;;;;;2364:45:9;;;;;;;;;;;;;;;2322:15;;;;2364:8;;;:26;;:45;;;;;;;;;;;;:8;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;2364:45:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2364:45:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2364:45:9;;;;;;;;;-1:-1:-1;2364:45:9;-1:-1:-1;2431:14:9;;2427:51;;2447:4;-1:-1:-1;;;;;2447:13:9;;2461:4;2467:10;2447:31;;;;;;;;;;;;;-1:-1:-1;;;;;2447:31:9;-1:-1:-1;;;;;2447:31:9;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2447:31:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2447:31:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2427:51:9;2500:20;;2496:81;;2522:4;-1:-1:-1;;;;;2522:13:9;;2536:8;;;;;;;;;-1:-1:-1;;;;;2536:8:9;-1:-1:-1;;;;;2536:20:9;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2536:22:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2536:22:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2536:22:9;2522:55;;;-1:-1:-1;;;;;;2522:55:9;;;;;;;-1:-1:-1;;;;;2522:55:9;;;;;;;;;;;;;;;;;;;2536:22;;2522:55;;;;;;;-1:-1:-1;2522:55:9;;;;5:2:-1;;;;30:1;27;20:12;5:2;2522:55:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2522:55:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2496:81:9;2602:1;2595:8;;;;;;;;;2269:349;2048:580;;;-1:-1:-1;2644:11:9;;1896:766;-1:-1:-1;;;1896:766:9:o;44186:1298:21:-;44242:27;44272:10;44242:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;44242:40:21;;;;;;;;;;;;;;;;-1:-1:-1;44242:40:21;;-1:-1:-1;44298:6:21;;-1:-1:-1;;;;44293:294:21;44314:11;:18;44310:1;:22;44293:294;;;44353:13;44369:11;44381:1;44369:14;;;;;;;;;;;;;;44353:30;;44397:22;;:::i;:::-;44422:37;;;;;;;;44437:6;-1:-1:-1;;;;;44437:18:21;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44437:20:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44437:20:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;44437:20:21;44422:37;;44397:62;-1:-1:-1;44473:38:21;44503:6;44473:21;:38::i;:::-;44525:51;44555:6;44564:11;44525:21;:51::i;:::-;-1:-1:-1;;44334:3:21;;44293:294;;;;44597:23;;:::i;:::-;44623:18;;;;;;;;44638:1;44623:18;;;44597:44;;44651:22;44686:11;:18;44676:29;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;44651:54:21;-1:-1:-1;44720:6:21;44715:438;44736:11;:18;44732:1;:22;44715:438;;;44775:13;44791:11;44803:1;44791:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;44823:24:21;;;;;;:7;:24;;;;;;;:33;;;44791:14;;-1:-1:-1;44823:33:21;;44819:324;;;44876:21;;:::i;:::-;44900:50;;;;;;;;;;44915:6;;-1:-1:-1;;;44915:33:21;;;-1:-1:-1;;;;;44915:33:21;;;;;;;;;44900:50;;;;44915:6;;;:25;;:33;;;;;44900:50;44915:33;;;;;;:6;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;44915:33:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44915:33:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;44915:33:21;44900:50;;44876:74;-1:-1:-1;44968:18:21;;:::i;:::-;44989:39;44994:10;45006:6;-1:-1:-1;;;;;45006:19:21;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45006:21:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;45006:21:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;45006:21:21;44989:4;:39::i;:::-;44968:60;;45061:7;45046:9;45056:1;45046:12;;;;;;;;;;;;;:22;;;;45101:27;45106:12;45120:7;45101:4;:27::i;:::-;45086:42;;44819:324;;;-1:-1:-1;44756:3:21;;44715:438;;;-1:-1:-1;45168:6:21;45163:315;45184:11;:18;45180:1;:22;45163:315;;;45223:13;45239:10;45250:1;45239:13;;;;;;;;;;;;;;;;;45282:21;;-1:-1:-1;;;;;45239:13:21;;;;-1:-1:-1;45282:80:21;;45361:1;45282:80;;;45310:48;45315:8;;45325:32;45330:9;45340:1;45330:12;;;;;;;;;;;;;;45344;45325:4;:32::i;:::-;45310:4;:48::i;:::-;-1:-1:-1;;;;;45376:27:21;;;;;;:10;:27;;;;;;;;;:38;;;45433:34;;;;;;;45266:96;;-1:-1:-1;45376:27:21;;45433:34;;;;;;;;;;;-1:-1:-1;;45204:3:21;;45163:315;;6422:278:31;6504:9;6515:10;;:::i;:::-;6538:13;6553;;:::i;:::-;6570:12;6577:1;6580;6570:6;:12::i;:::-;6537:45;;-1:-1:-1;6537:45:31;-1:-1:-1;6603:18:31;6596:3;:25;;;;;;;;;6592:72;;6645:3;;-1:-1:-1;6650:2:31;-1:-1:-1;6637:16:31;;6592:72;6680:13;6687:2;6691:1;6680:6;:13::i;:::-;6673:20;;;;;;6422:278;;;;;;:::o;2982:321::-;3079:9;3090:4;3107:13;3122:18;;:::i;:::-;3144:20;3154:1;3157:6;3144:9;:20::i;:::-;3106:58;;-1:-1:-1;3106:58:31;-1:-1:-1;3185:18:31;3178:3;:25;;;;;;;;;3174:71;;-1:-1:-1;3227:3:31;-1:-1:-1;3232:1:31;;-1:-1:-1;3219:15:31;;3174:71;3262:34;3270:17;3279:7;3270:8;:17::i;:::-;3289:6;3262:7;:34::i;2082:346::-;2151:9;2162:10;;:::i;:::-;2185:14;2201:19;2224:27;2232:1;:10;;;2244:6;2224:7;:27::i;:::-;2184:67;;-1:-1:-1;2184:67:31;-1:-1:-1;2273:18:31;2265:4;:26;;;;;;;;;2261:90;;-1:-1:-1;2321:18:31;;;;;;;;;-1:-1:-1;2321:18:31;;2315:4;;-1:-1:-1;2321:18:31;-1:-1:-1;2307:33:31;;2261:90;2389:31;;;;;;;;;;;;-1:-1:-1;;2389:31:31;;-1:-1:-1;2082:346:31;-1:-1:-1;;;;2082:346:31:o;7228:210::-;7408:12;447:4;7408:23;;;7228:210::o;9031:175::-;9112:4;9137:5;;;9168:12;9160:6;;;;9152:29;;;;-1:-1:-1;;;9152:29:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;9152:29:31;-1:-1:-1;9198:1:31;9031:175;-1:-1:-1;;;;9031:175:31:o;4950:1116::-;5017:9;5028:10;;:::i;:::-;5052:14;5068:24;5096:31;5104:1;:10;;;5116:1;:10;;;5096:7;:31::i;:::-;5051:76;;-1:-1:-1;5051:76:31;-1:-1:-1;5149:18:31;5141:4;:26;;;;;;;;;5137:90;;-1:-1:-1;5197:18:31;;;;;;;;;-1:-1:-1;5197:18:31;;5191:4;;-1:-1:-1;5197:18:31;-1:-1:-1;5183:33:31;;5137:90;5539:14;;5596:42;524:10;5618:19;5596:7;:42::i;:::-;5538:100;;-1:-1:-1;5538:100:31;-1:-1:-1;5660:18:31;5652:4;:26;;;;;;;;;5648:90;;-1:-1:-1;5708:18:31;;;;;;;;;-1:-1:-1;5708:18:31;;5702:4;;-1:-1:-1;5708:18:31;-1:-1:-1;5694:33:31;;-1:-1:-1;;5694:33:31;5648:90;5749:14;5765:12;5781:51;5789:32;447:4;5781:7;:51::i;:::-;5748:84;;-1:-1:-1;5748:84:31;-1:-1:-1;5976:18:31;5968:4;:26;;;;;;;;;5961:34;;;;6034:24;;;;;;;;;;;;-1:-1:-1;;6034:24:31;;-1:-1:-1;4950:1116:31;-1:-1:-1;;;;;;;;4950:1116:31:o;876:503::-;937:9;948:10;;:::i;:::-;971:14;987:20;1011:22;1019:3;447:4;1011:7;:22::i;:::-;970:63;;-1:-1:-1;970:63:31;-1:-1:-1;1055:18:31;1047:4;:26;;;;;;;;;1043:90;;-1:-1:-1;1103:18:31;;;;;;;;;-1:-1:-1;1103:18:31;;1097:4;;-1:-1:-1;1103:18:31;-1:-1:-1;1089:33:31;;1043:90;1144:14;1160:13;1177:31;1185:15;1202:5;1177:7;:31::i;:::-;1143:65;;-1:-1:-1;1143:65:31;-1:-1:-1;1230:18:31;1222:4;:26;;;;;;;;;1218:90;;-1:-1:-1;1278:18:31;;;;;;;;;-1:-1:-1;1278:18:31;;1272:4;;-1:-1:-1;1278:18:31;-1:-1:-1;1264:33:31;;-1:-1:-1;;1264:33:31;1218:90;1346:25;;;;;;;;;;;;-1:-1:-1;;1346:25:31;;-1:-1:-1;876:503:31;-1:-1:-1;;;;;;876:503:31:o;9652:155::-;9733:4;9765:12;9757:6;;;;9749:29;;;;-1:-1:-1;;;9749:29:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;9749:29:31;-1:-1:-1;;;9795:5:31;;;9652:155::o;11968:111::-;12021:4;12044:28;12049:1;12052;12044:28;;;;;;;;;;;;;-1:-1:-1;;;12044:28:31;;;:4;:28::i;10819:243::-;10900:4;10920:6;;;:16;;-1:-1:-1;10930:6:31;;10920:16;10916:55;;;-1:-1:-1;10959:1:31;10952:8;;10916:55;10989:5;;;10993:1;10989;:5;:1;11012:5;;;;;:10;11024:12;11004:33;;;;;-1:-1:-1;;;11004:33:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;9976:131:31;10035:10;;:::i;:::-;10064:36;;;;;;;;10079:19;10084:1;:10;;;10096:1;10079:4;:19::i;11068:162::-;11133:10;;:::i;:::-;11162:61;;;;;;;;11177:44;11182:26;11187:1;:10;;;447:4;11182;:26::i;:::-;11210:10;;11177:4;:44::i;10113:119::-;10172:4;447;10195:19;10200:1;10203;:10;;;10195:4;:19::i;1613:250:20:-;1669:9;;1705:5;;;1725:6;;;1721:136;;1755:18;;-1:-1:-1;1775:1:20;-1:-1:-1;1747:30:20;;1721:136;-1:-1:-1;1816:26:20;;-1:-1:-1;1844:1:20;;-1:-1:-1;1808:38:20;;543:331;599:9;;630:6;626:67;;-1:-1:-1;660:18:20;;-1:-1:-1;660:18:20;652:30;;626:67;712:5;;;716:1;712;:5;:1;732:5;;;;;:10;728:140;;-1:-1:-1;766:26:20;;-1:-1:-1;794:1:20;;-1:-1:-1;758:38:20;;728:140;835:18;;-1:-1:-1;855:1:20;-1:-1:-1;827:30:20;;964:209;1020:9;;1051:6;1047:75;;-1:-1:-1;1081:26:20;;-1:-1:-1;1109:1:20;1073:38;;1047:75;1140:18;1164:1;1160;:5;;;;;;1132:34;;;;964:209;;;;;:::o;12085:154:31:-;12166:4;12197:12;12190:5;12182:28;;;;-1:-1:-1;;;12182:28:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12182:28:31;;12231:1;12227;:5;;;;;;;12085:154;-1:-1:-1;;;;12085:154:31:o;129:3588:9:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.16;\n\nimport \"./compound/Comptroller.sol\";\nimport \"./compound/EIP20Interface.sol\";\nimport \"./QsConfig.sol\";\n\ncontract Qstroller is Comptroller {\n    QsConfig public qsConfig;\n\n    function _setQsConfig(QsConfig _qsConfig) public {\n        require(msg.sender == admin);\n\n        qsConfig = _qsConfig;\n    }\n\n    /**\n     * @notice Sets new governance token distribution speed\n     * @dev Admin function to set new token distribution speed\n     */\n    function _setCompSpeeds(address[] memory _allMarkets, uint[] memory _compSpeeds) public {\n        // Check caller is admin\n        require(msg.sender == admin);\n        \n        require(_allMarkets.length == _compSpeeds.length);\n\n        uint _compRate = 0;\n        for (uint i = 0; i < _allMarkets.length; i++) {\n            address cToken = _allMarkets[i];\n            Market storage market = markets[cToken];\n            if (market.isComped == false) {\n                _addCompMarketInternal(cToken);\n            }\n            compSpeeds[cToken] = _compSpeeds[i];\n            _compRate = add_(_compRate, _compSpeeds[i]);\n        }\n        _setCompRate(_compRate);\n    }\n\n\n    function refreshCompSpeeds() public {\n        require(!qsConfig.compSpeedGuardianPaused());\n        require(msg.sender == tx.origin);\n\n        refreshCompSpeedsInternal();\n    }\n\n    function refreshCompSpeedsInternal() internal {\n        if (qsConfig.compSpeedGuardianPaused()) {\n            return;\n        } else {\n            super.refreshCompSpeedsInternal();\n        }\n    }\n\n    function getCompAddress() public view returns (address) {\n        return qsConfig.compToken();\n    }\n    \n    function calculateSeizeTokenAllocation(uint _seizeTokenAmount) public view returns(uint liquidatorAmount, uint safetyVaultAmount) {\n        return qsConfig.calculateSeizeTokenAllocation(_seizeTokenAmount, liquidationIncentiveMantissa);\n    }\n    \n    function transferComp(address user, uint userAccrued, uint threshold) internal returns (uint) {\n        address compAddress = getCompAddress();\n        if (userAccrued >= threshold && userAccrued > 0 && compAddress != address(0x0)) {\n            EIP20Interface comp = EIP20Interface(compAddress);\n            uint compRemaining = comp.balanceOf(address(this));\n            if (userAccrued <= compRemaining) {\n                (uint userAmount, uint governanceAmount) = qsConfig.getCompAllocation(user, userAccrued);\n                if (userAmount > 0) comp.transfer(user, userAmount);\n                if (governanceAmount > 0) comp.transfer(qsConfig.safetyVault(), governanceAmount);\n                return 0;\n            }\n        }\n        return userAccrued;\n    }\n\n    /**\n     * @notice Checks if the account should be allowed to mint tokens in the given market\n     * @param cToken The market to verify the mint against\n     * @param minter The account which would get the minted tokens\n     * @param mintAmount The amount of underlying being supplied to the market in exchange for tokens\n     * @return 0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\n     */\n    function mintAllowed(address cToken, address minter, uint mintAmount) external returns (uint) {\n        require(!qsConfig.isBlocked(minter));\n        // Pausing is a very serious situation - we revert to sound the alarms\n        require(!mintGuardianPaused[cToken]);\n\n        // Shh - currently unused\n        minter;\n        mintAmount;\n\n        if (!markets[cToken].isListed) {\n            return uint(Error.MARKET_NOT_LISTED);\n        }\n\n        // Keep the flywheel moving\n        updateCompSupplyIndex(cToken);\n        distributeSupplierComp(cToken, minter, false);\n        return uint(Error.NO_ERROR);\n    }\n}",
  "sourcePath": "/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/Qstroller.sol",
  "ast": {
    "absolutePath": "/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/Qstroller.sol",
    "exportedSymbols": {
      "Qstroller": [
        2548
      ]
    },
    "id": 2549,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2226,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/Comptroller.sol",
        "file": "./compound/Comptroller.sol",
        "id": 2227,
        "nodeType": "ImportDirective",
        "scope": 2549,
        "sourceUnit": 12672,
        "src": "26:36:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/EIP20Interface.sol",
        "file": "./compound/EIP20Interface.sol",
        "id": 2228,
        "nodeType": "ImportDirective",
        "scope": 2549,
        "sourceUnit": 21821,
        "src": "63:39:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/QsConfig.sol",
        "file": "./QsConfig.sol",
        "id": 2229,
        "nodeType": "ImportDirective",
        "scope": 2549,
        "sourceUnit": 1268,
        "src": "103:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2230,
              "name": "Comptroller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12671,
              "src": "151:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Comptroller_$12671",
                "typeString": "contract Comptroller"
              }
            },
            "id": 2231,
            "nodeType": "InheritanceSpecifier",
            "src": "151:11:9"
          }
        ],
        "contractDependencies": [
          9016,
          12671,
          21366,
          21379,
          21395,
          21431,
          21472,
          21986,
          23309
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2548,
        "linearizedBaseContracts": [
          2548,
          12671,
          23309,
          9016,
          21986,
          21366,
          21472,
          21431,
          21395,
          21379
        ],
        "name": "Qstroller",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2233,
            "name": "qsConfig",
            "nodeType": "VariableDeclaration",
            "scope": 2548,
            "src": "169:24:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_QsConfig_$1267",
              "typeString": "contract QsConfig"
            },
            "typeName": {
              "contractScope": null,
              "id": 2232,
              "name": "QsConfig",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1267,
              "src": "169:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_QsConfig_$1267",
                "typeString": "contract QsConfig"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2249,
              "nodeType": "Block",
              "src": "249:76:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2239,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30080,
                            "src": "267:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "267:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2241,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21372,
                          "src": "281:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "267:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "259:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "259:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2244,
                  "nodeType": "ExpressionStatement",
                  "src": "259:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2245,
                      "name": "qsConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2233,
                      "src": "298:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QsConfig_$1267",
                        "typeString": "contract QsConfig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2246,
                      "name": "_qsConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2235,
                      "src": "309:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QsConfig_$1267",
                        "typeString": "contract QsConfig"
                      }
                    },
                    "src": "298:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_QsConfig_$1267",
                      "typeString": "contract QsConfig"
                    }
                  },
                  "id": 2248,
                  "nodeType": "ExpressionStatement",
                  "src": "298:20:9"
                }
              ]
            },
            "documentation": null,
            "id": 2250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setQsConfig",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2235,
                  "name": "_qsConfig",
                  "nodeType": "VariableDeclaration",
                  "scope": 2250,
                  "src": "222:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_QsConfig_$1267",
                    "typeString": "contract QsConfig"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2234,
                    "name": "QsConfig",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1267,
                    "src": "222:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_QsConfig_$1267",
                      "typeString": "contract QsConfig"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "221:20:9"
            },
            "returnParameters": {
              "id": 2237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:9"
            },
            "scope": 2548,
            "src": "200:125:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2334,
              "nodeType": "Block",
              "src": "558:584:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2260,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30080,
                            "src": "609:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "609:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2262,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21372,
                          "src": "623:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "609:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "601:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "601:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2265,
                  "nodeType": "ExpressionStatement",
                  "src": "601:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2267,
                            "name": "_allMarkets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2253,
                            "src": "656:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "656:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2269,
                            "name": "_compSpeeds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2256,
                            "src": "678:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "678:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "656:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2266,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "648:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2273,
                  "nodeType": "ExpressionStatement",
                  "src": "648:49:9"
                },
                {
                  "assignments": [
                    2275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2275,
                      "name": "_compRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2334,
                      "src": "708:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2274,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "708:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2277,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "725:1:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "708:18:9"
                },
                {
                  "body": {
                    "id": 2328,
                    "nodeType": "Block",
                    "src": "782:321:9",
                    "statements": [
                      {
                        "assignments": [
                          2290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2290,
                            "name": "cToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 2328,
                            "src": "796:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2289,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "796:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2294,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2291,
                            "name": "_allMarkets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2253,
                            "src": "813:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2293,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2292,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2279,
                            "src": "825:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "813:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "796:31:9"
                      },
                      {
                        "assignments": [
                          2296
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2296,
                            "name": "market",
                            "nodeType": "VariableDeclaration",
                            "scope": 2328,
                            "src": "841:21:9",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$21408_storage_ptr",
                              "typeString": "struct ComptrollerV2Storage.Market"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 2295,
                              "name": "Market",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 21408,
                              "src": "841:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$21408_storage_ptr",
                                "typeString": "struct ComptrollerV2Storage.Market"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2300,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2297,
                            "name": "markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21412,
                            "src": "865:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Market_$21408_storage_$",
                              "typeString": "mapping(address => struct ComptrollerV2Storage.Market storage ref)"
                            }
                          },
                          "id": 2299,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2298,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2290,
                            "src": "873:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "865:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$21408_storage",
                            "typeString": "struct ComptrollerV2Storage.Market storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "841:39:9"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2301,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2296,
                              "src": "898:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$21408_storage_ptr",
                                "typeString": "struct ComptrollerV2Storage.Market storage pointer"
                              }
                            },
                            "id": 2302,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isComped",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21407,
                            "src": "898:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 2303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "917:5:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "898:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2310,
                        "nodeType": "IfStatement",
                        "src": "894:93:9",
                        "trueBody": {
                          "id": 2309,
                          "nodeType": "Block",
                          "src": "924:63:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2306,
                                    "name": "cToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2290,
                                    "src": "965:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2305,
                                  "name": "_addCompMarketInternal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12600,
                                  "src": "942:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 2307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "942:30:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2308,
                              "nodeType": "ExpressionStatement",
                              "src": "942:30:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2311,
                              "name": "compSpeeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21447,
                              "src": "1000:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2313,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2312,
                              "name": "cToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2290,
                              "src": "1011:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1000:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2314,
                              "name": "_compSpeeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2256,
                              "src": "1021:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2316,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2315,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2279,
                              "src": "1033:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1021:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1000:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2318,
                        "nodeType": "ExpressionStatement",
                        "src": "1000:35:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2319,
                            "name": "_compRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "1049:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2321,
                                "name": "_compRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "1066:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2322,
                                  "name": "_compSpeeds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2256,
                                  "src": "1077:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 2324,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2323,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2279,
                                  "src": "1089:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1077:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2320,
                              "name": "add_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                22822,
                                22841,
                                22857,
                                22884
                              ],
                              "referencedDeclaration": 22857,
                              "src": "1061:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1061:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1049:43:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2327,
                        "nodeType": "ExpressionStatement",
                        "src": "1049:43:9"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2282,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2279,
                      "src": "753:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2283,
                        "name": "_allMarkets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2253,
                        "src": "757:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "757:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "753:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2329,
                  "initializationExpression": {
                    "assignments": [
                      2279
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2279,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2329,
                        "src": "741:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2278,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2281,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "750:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "741:10:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "777:3:9",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2286,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2279,
                        "src": "777:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2288,
                    "nodeType": "ExpressionStatement",
                    "src": "777:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "736:367:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2331,
                        "name": "_compRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2275,
                        "src": "1125:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2330,
                      "name": "_setCompRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12468,
                      "src": "1112:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2333,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:23:9"
                }
              ]
            },
            "documentation": "@notice Sets new governance token distribution speed\n@dev Admin function to set new token distribution speed",
            "id": 2335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setCompSpeeds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2253,
                  "name": "_allMarkets",
                  "nodeType": "VariableDeclaration",
                  "scope": 2335,
                  "src": "494:28:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2251,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "494:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2252,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "494:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2256,
                  "name": "_compSpeeds",
                  "nodeType": "VariableDeclaration",
                  "scope": 2335,
                  "src": "524:25:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2254,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "524:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2255,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "524:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "493:57:9"
            },
            "returnParameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:0:9"
            },
            "scope": 2548,
            "src": "470:672:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2356,
              "nodeType": "Block",
              "src": "1185:141:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1203:35:9",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2339,
                              "name": "qsConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2233,
                              "src": "1204:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QsConfig_$1267",
                                "typeString": "contract QsConfig"
                              }
                            },
                            "id": 2340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "compSpeedGuardianPaused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 846,
                            "src": "1204:32:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 2341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1204:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "1195:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1195:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2344,
                  "nodeType": "ExpressionStatement",
                  "src": "1195:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 2350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2346,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30080,
                            "src": "1257:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1257:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2348,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30092,
                            "src": "1271:2:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 2349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1271:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1257:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "1249:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2352,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2353,
                      "name": "refreshCompSpeedsInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2373
                      ],
                      "referencedDeclaration": 2373,
                      "src": "1292:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1292:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "1292:27:9"
                }
              ]
            },
            "documentation": null,
            "id": 2357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refreshCompSpeeds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1175:2:9"
            },
            "returnParameters": {
              "id": 2337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1185:0:9"
            },
            "scope": 2548,
            "src": "1149:177:9",
            "stateMutability": "nonpayable",
            "superFunction": 11641,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2372,
              "nodeType": "Block",
              "src": "1378:151:9",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2360,
                        "name": "qsConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2233,
                        "src": "1392:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QsConfig_$1267",
                          "typeString": "contract QsConfig"
                        }
                      },
                      "id": 2361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "compSpeedGuardianPaused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 846,
                      "src": "1392:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1392:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2370,
                    "nodeType": "Block",
                    "src": "1465:58:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2365,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30147,
                              "src": "1479:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_Qstroller_$2548",
                                "typeString": "contract super Qstroller"
                              }
                            },
                            "id": 2367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refreshCompSpeedsInternal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11816,
                            "src": "1479:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1479:33:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2369,
                        "nodeType": "ExpressionStatement",
                        "src": "1479:33:9"
                      }
                    ]
                  },
                  "id": 2371,
                  "nodeType": "IfStatement",
                  "src": "1388:135:9",
                  "trueBody": {
                    "id": 2364,
                    "nodeType": "Block",
                    "src": "1428:31:9",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 2359,
                        "id": 2363,
                        "nodeType": "Return",
                        "src": "1442:7:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refreshCompSpeedsInternal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1366:2:9"
            },
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1378:0:9"
            },
            "scope": 2548,
            "src": "1332:197:9",
            "stateMutability": "nonpayable",
            "superFunction": 11816,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2382,
              "nodeType": "Block",
              "src": "1591:44:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2378,
                        "name": "qsConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2233,
                        "src": "1608:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QsConfig_$1267",
                          "typeString": "contract QsConfig"
                        }
                      },
                      "id": 2379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "compToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 848,
                      "src": "1608:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2377,
                  "id": 2381,
                  "nodeType": "Return",
                  "src": "1601:27:9"
                }
              ]
            },
            "documentation": null,
            "id": 2383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1558:2:9"
            },
            "returnParameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2376,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2383,
                  "src": "1582:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1581:9:9"
            },
            "scope": 2548,
            "src": "1535:100:9",
            "stateMutability": "view",
            "superFunction": 12670,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2398,
              "nodeType": "Block",
              "src": "1775:111:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2394,
                        "name": "_seizeTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "1831:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2395,
                        "name": "liquidationIncentiveMantissa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21387,
                        "src": "1850:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2392,
                        "name": "qsConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2233,
                        "src": "1792:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QsConfig_$1267",
                          "typeString": "contract QsConfig"
                        }
                      },
                      "id": 2393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateSeizeTokenAllocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "1792:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:87:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 2391,
                  "id": 2397,
                  "nodeType": "Return",
                  "src": "1785:94:9"
                }
              ]
            },
            "documentation": null,
            "id": 2399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSeizeTokenAllocation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2385,
                  "name": "_seizeTokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "1684:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2384,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1683:24:9"
            },
            "returnParameters": {
              "id": 2391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2388,
                  "name": "liquidatorAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "1728:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2387,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1728:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2390,
                  "name": "safetyVaultAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "1751:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2389,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1727:47:9"
            },
            "scope": 2548,
            "src": "1645:241:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2488,
              "nodeType": "Block",
              "src": "1990:672:9",
              "statements": [
                {
                  "assignments": [
                    2411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2411,
                      "name": "compAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2488,
                      "src": "2000:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2410,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2000:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2414,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2412,
                      "name": "getCompAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2383
                      ],
                      "referencedDeclaration": 2383,
                      "src": "2022:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2022:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2000:38:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2415,
                          "name": "userAccrued",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2403,
                          "src": "2052:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2416,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2405,
                          "src": "2067:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2052:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2418,
                          "name": "userAccrued",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2403,
                          "src": "2080:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2094:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2080:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2052:43:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2422,
                        "name": "compAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2411,
                        "src": "2099:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 2424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2122:3:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2114:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2114:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "2099:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2052:74:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2485,
                  "nodeType": "IfStatement",
                  "src": "2048:580:9",
                  "trueBody": {
                    "id": 2484,
                    "nodeType": "Block",
                    "src": "2128:500:9",
                    "statements": [
                      {
                        "assignments": [
                          2429
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2429,
                            "name": "comp",
                            "nodeType": "VariableDeclaration",
                            "scope": 2484,
                            "src": "2142:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                              "typeString": "contract EIP20Interface"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 2428,
                              "name": "EIP20Interface",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 21820,
                              "src": "2142:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                                "typeString": "contract EIP20Interface"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2433,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2431,
                              "name": "compAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2411,
                              "src": "2179:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2430,
                            "name": "EIP20Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21820,
                            "src": "2164:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_EIP20Interface_$21820_$",
                              "typeString": "type(contract EIP20Interface)"
                            }
                          },
                          "id": 2432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2164:27:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                            "typeString": "contract EIP20Interface"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2142:49:9"
                      },
                      {
                        "assignments": [
                          2435
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2435,
                            "name": "compRemaining",
                            "nodeType": "VariableDeclaration",
                            "scope": 2484,
                            "src": "2205:18:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2434,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2205:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2442,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2439,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30146,
                                  "src": "2249:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Qstroller_$2548",
                                    "typeString": "contract Qstroller"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Qstroller_$2548",
                                    "typeString": "contract Qstroller"
                                  }
                                ],
                                "id": 2438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2241:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2241:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2436,
                              "name": "comp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2429,
                              "src": "2226:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                                "typeString": "contract EIP20Interface"
                              }
                            },
                            "id": 2437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21765,
                            "src": "2226:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2226:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2205:50:9"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2443,
                            "name": "userAccrued",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2403,
                            "src": "2273:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2444,
                            "name": "compRemaining",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2435,
                            "src": "2288:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2273:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2483,
                        "nodeType": "IfStatement",
                        "src": "2269:349:9",
                        "trueBody": {
                          "id": 2482,
                          "nodeType": "Block",
                          "src": "2303:315:9",
                          "statements": [
                            {
                              "assignments": [
                                2447,
                                2449
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2447,
                                  "name": "userAmount",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2482,
                                  "src": "2322:15:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2446,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2322:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 2449,
                                  "name": "governanceAmount",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2482,
                                  "src": "2339:21:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2448,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2339:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2455,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2452,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2401,
                                    "src": "2391:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2453,
                                    "name": "userAccrued",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2403,
                                    "src": "2397:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2450,
                                    "name": "qsConfig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2233,
                                    "src": "2364:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_QsConfig_$1267",
                                      "typeString": "contract QsConfig"
                                    }
                                  },
                                  "id": 2451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getCompAllocation",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1098,
                                  "src": "2364:26:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (address,uint256) view external returns (uint256,uint256)"
                                  }
                                },
                                "id": 2454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2364:45:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2321:88:9"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2456,
                                  "name": "userAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2447,
                                  "src": "2431:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2444:1:9",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2431:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 2466,
                              "nodeType": "IfStatement",
                              "src": "2427:51:9",
                              "trueBody": {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2462,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2401,
                                      "src": "2461:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 2463,
                                      "name": "userAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2447,
                                      "src": "2467:10:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2459,
                                      "name": "comp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2429,
                                      "src": "2447:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                                        "typeString": "contract EIP20Interface"
                                      }
                                    },
                                    "id": 2461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21774,
                                    "src": "2447:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 2464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2447:31:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 2465,
                                "nodeType": "ExpressionStatement",
                                "src": "2447:31:9"
                              }
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2467,
                                  "name": "governanceAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2449,
                                  "src": "2500:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2519:1:9",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2500:20:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 2479,
                              "nodeType": "IfStatement",
                              "src": "2496:81:9",
                              "trueBody": {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2473,
                                          "name": "qsConfig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2233,
                                          "src": "2536:8:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_QsConfig_$1267",
                                            "typeString": "contract QsConfig"
                                          }
                                        },
                                        "id": 2474,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safetyVault",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 852,
                                        "src": "2536:20:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                          "typeString": "function () view external returns (address)"
                                        }
                                      },
                                      "id": 2475,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2536:22:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 2476,
                                      "name": "governanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2449,
                                      "src": "2560:16:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2470,
                                      "name": "comp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2429,
                                      "src": "2522:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                                        "typeString": "contract EIP20Interface"
                                      }
                                    },
                                    "id": 2472,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21774,
                                    "src": "2522:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 2477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2522:55:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 2478,
                                "nodeType": "ExpressionStatement",
                                "src": "2522:55:9"
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2602:1:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 2409,
                              "id": 2481,
                              "nodeType": "Return",
                              "src": "2595:8:9"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2486,
                    "name": "userAccrued",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2403,
                    "src": "2644:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2409,
                  "id": 2487,
                  "nodeType": "Return",
                  "src": "2637:18:9"
                }
              ]
            },
            "documentation": null,
            "id": 2489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferComp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2401,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2489,
                  "src": "1918:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2403,
                  "name": "userAccrued",
                  "nodeType": "VariableDeclaration",
                  "scope": 2489,
                  "src": "1932:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2402,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1932:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2405,
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2489,
                  "src": "1950:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2404,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1950:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1917:48:9"
            },
            "returnParameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2408,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2489,
                  "src": "1984:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1984:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1983:6:9"
            },
            "scope": 2548,
            "src": "1896:766:9",
            "stateMutability": "nonpayable",
            "superFunction": 12276,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2546,
              "nodeType": "Block",
              "src": "3196:519:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3214:27:9",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2503,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2493,
                              "src": "3234:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2501,
                              "name": "qsConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2233,
                              "src": "3215:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QsConfig_$1267",
                                "typeString": "contract QsConfig"
                              }
                            },
                            "id": 2502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isBlocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1138,
                            "src": "3215:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 2504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3215:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "3206:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3206:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2507,
                  "nodeType": "ExpressionStatement",
                  "src": "3206:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3339:27:9",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2509,
                            "name": "mintGuardianPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21426,
                            "src": "3340:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2511,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2510,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2491,
                            "src": "3359:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3340:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "3331:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3331:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2514,
                  "nodeType": "ExpressionStatement",
                  "src": "3331:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2515,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2493,
                    "src": "3412:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "3412:6:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2517,
                    "name": "mintAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2495,
                    "src": "3428:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2518,
                  "nodeType": "ExpressionStatement",
                  "src": "3428:10:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3453:25:9",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2519,
                          "name": "markets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21412,
                          "src": "3454:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Market_$21408_storage_$",
                            "typeString": "mapping(address => struct ComptrollerV2Storage.Market storage ref)"
                          }
                        },
                        "id": 2521,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2520,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2491,
                          "src": "3462:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3454:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$21408_storage",
                          "typeString": "struct ComptrollerV2Storage.Market storage ref"
                        }
                      },
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isListed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21399,
                      "src": "3454:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2530,
                  "nodeType": "IfStatement",
                  "src": "3449:92:9",
                  "trueBody": {
                    "id": 2529,
                    "nodeType": "Block",
                    "src": "3480:61:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2525,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21906,
                                "src": "3506:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$21906_$",
                                  "typeString": "type(enum ComptrollerErrorReporter.Error)"
                                }
                              },
                              "id": 2526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "MARKET_NOT_LISTED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3506:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$21906",
                                "typeString": "enum ComptrollerErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$21906",
                                "typeString": "enum ComptrollerErrorReporter.Error"
                              }
                            ],
                            "id": 2524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3501:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 2527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3501:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2499,
                        "id": 2528,
                        "nodeType": "Return",
                        "src": "3494:36:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2532,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "3609:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2531,
                      "name": "updateCompSupplyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11927,
                      "src": "3587:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3587:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2534,
                  "nodeType": "ExpressionStatement",
                  "src": "3587:29:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2536,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "3649:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2537,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2493,
                        "src": "3657:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 2538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3665:5:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2535,
                      "name": "distributeSupplierComp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12157,
                      "src": "3626:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3626:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2540,
                  "nodeType": "ExpressionStatement",
                  "src": "3626:45:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2542,
                          "name": "Error",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21906,
                          "src": "3693:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Error_$21906_$",
                            "typeString": "type(enum ComptrollerErrorReporter.Error)"
                          }
                        },
                        "id": 2543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO_ERROR",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3693:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Error_$21906",
                          "typeString": "enum ComptrollerErrorReporter.Error"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Error_$21906",
                          "typeString": "enum ComptrollerErrorReporter.Error"
                        }
                      ],
                      "id": 2541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3688:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2499,
                  "id": 2545,
                  "nodeType": "Return",
                  "src": "3681:27:9"
                }
              ]
            },
            "documentation": "@notice Checks if the account should be allowed to mint tokens in the given market\n@param cToken The market to verify the mint against\n@param minter The account which would get the minted tokens\n@param mintAmount The amount of underlying being supplied to the market in exchange for tokens\n@return 0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)",
            "id": 2547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2491,
                  "name": "cToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3123:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3123:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2493,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3139:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2495,
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3155:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3122:49:9"
            },
            "returnParameters": {
              "id": 2499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2498,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3190:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2497,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3190:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3189:6:9"
            },
            "scope": 2548,
            "src": "3102:613:9",
            "stateMutability": "nonpayable",
            "superFunction": 21191,
            "visibility": "external"
          }
        ],
        "scope": 2549,
        "src": "129:3588:9"
      }
    ],
    "src": "0:3717:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/Qstroller.sol",
    "exportedSymbols": {
      "Qstroller": [
        2548
      ]
    },
    "id": 2549,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2226,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/Comptroller.sol",
        "file": "./compound/Comptroller.sol",
        "id": 2227,
        "nodeType": "ImportDirective",
        "scope": 2549,
        "sourceUnit": 12672,
        "src": "26:36:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/compound/EIP20Interface.sol",
        "file": "./compound/EIP20Interface.sol",
        "id": 2228,
        "nodeType": "ImportDirective",
        "scope": 2549,
        "sourceUnit": 21821,
        "src": "63:39:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ashton/repo/blockchain/eth/smartcontracts/quicksilver-protocol/contracts/QsConfig.sol",
        "file": "./QsConfig.sol",
        "id": 2229,
        "nodeType": "ImportDirective",
        "scope": 2549,
        "sourceUnit": 1268,
        "src": "103:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2230,
              "name": "Comptroller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12671,
              "src": "151:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Comptroller_$12671",
                "typeString": "contract Comptroller"
              }
            },
            "id": 2231,
            "nodeType": "InheritanceSpecifier",
            "src": "151:11:9"
          }
        ],
        "contractDependencies": [
          9016,
          12671,
          21366,
          21379,
          21395,
          21431,
          21472,
          21986,
          23309
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2548,
        "linearizedBaseContracts": [
          2548,
          12671,
          23309,
          9016,
          21986,
          21366,
          21472,
          21431,
          21395,
          21379
        ],
        "name": "Qstroller",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2233,
            "name": "qsConfig",
            "nodeType": "VariableDeclaration",
            "scope": 2548,
            "src": "169:24:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_QsConfig_$1267",
              "typeString": "contract QsConfig"
            },
            "typeName": {
              "contractScope": null,
              "id": 2232,
              "name": "QsConfig",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1267,
              "src": "169:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_QsConfig_$1267",
                "typeString": "contract QsConfig"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2249,
              "nodeType": "Block",
              "src": "249:76:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2239,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30080,
                            "src": "267:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "267:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2241,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21372,
                          "src": "281:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "267:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "259:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "259:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2244,
                  "nodeType": "ExpressionStatement",
                  "src": "259:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2245,
                      "name": "qsConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2233,
                      "src": "298:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QsConfig_$1267",
                        "typeString": "contract QsConfig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2246,
                      "name": "_qsConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2235,
                      "src": "309:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QsConfig_$1267",
                        "typeString": "contract QsConfig"
                      }
                    },
                    "src": "298:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_QsConfig_$1267",
                      "typeString": "contract QsConfig"
                    }
                  },
                  "id": 2248,
                  "nodeType": "ExpressionStatement",
                  "src": "298:20:9"
                }
              ]
            },
            "documentation": null,
            "id": 2250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setQsConfig",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2235,
                  "name": "_qsConfig",
                  "nodeType": "VariableDeclaration",
                  "scope": 2250,
                  "src": "222:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_QsConfig_$1267",
                    "typeString": "contract QsConfig"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2234,
                    "name": "QsConfig",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1267,
                    "src": "222:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_QsConfig_$1267",
                      "typeString": "contract QsConfig"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "221:20:9"
            },
            "returnParameters": {
              "id": 2237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:9"
            },
            "scope": 2548,
            "src": "200:125:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2334,
              "nodeType": "Block",
              "src": "558:584:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2260,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30080,
                            "src": "609:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "609:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2262,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21372,
                          "src": "623:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "609:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "601:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "601:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2265,
                  "nodeType": "ExpressionStatement",
                  "src": "601:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2267,
                            "name": "_allMarkets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2253,
                            "src": "656:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "656:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2269,
                            "name": "_compSpeeds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2256,
                            "src": "678:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "678:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "656:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2266,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "648:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2273,
                  "nodeType": "ExpressionStatement",
                  "src": "648:49:9"
                },
                {
                  "assignments": [
                    2275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2275,
                      "name": "_compRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2334,
                      "src": "708:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2274,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "708:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2277,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "725:1:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "708:18:9"
                },
                {
                  "body": {
                    "id": 2328,
                    "nodeType": "Block",
                    "src": "782:321:9",
                    "statements": [
                      {
                        "assignments": [
                          2290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2290,
                            "name": "cToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 2328,
                            "src": "796:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2289,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "796:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2294,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2291,
                            "name": "_allMarkets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2253,
                            "src": "813:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2293,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2292,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2279,
                            "src": "825:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "813:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "796:31:9"
                      },
                      {
                        "assignments": [
                          2296
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2296,
                            "name": "market",
                            "nodeType": "VariableDeclaration",
                            "scope": 2328,
                            "src": "841:21:9",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Market_$21408_storage_ptr",
                              "typeString": "struct ComptrollerV2Storage.Market"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 2295,
                              "name": "Market",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 21408,
                              "src": "841:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$21408_storage_ptr",
                                "typeString": "struct ComptrollerV2Storage.Market"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2300,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2297,
                            "name": "markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21412,
                            "src": "865:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Market_$21408_storage_$",
                              "typeString": "mapping(address => struct ComptrollerV2Storage.Market storage ref)"
                            }
                          },
                          "id": 2299,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2298,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2290,
                            "src": "873:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "865:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$21408_storage",
                            "typeString": "struct ComptrollerV2Storage.Market storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "841:39:9"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2301,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2296,
                              "src": "898:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$21408_storage_ptr",
                                "typeString": "struct ComptrollerV2Storage.Market storage pointer"
                              }
                            },
                            "id": 2302,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isComped",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21407,
                            "src": "898:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 2303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "917:5:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "898:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2310,
                        "nodeType": "IfStatement",
                        "src": "894:93:9",
                        "trueBody": {
                          "id": 2309,
                          "nodeType": "Block",
                          "src": "924:63:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2306,
                                    "name": "cToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2290,
                                    "src": "965:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2305,
                                  "name": "_addCompMarketInternal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12600,
                                  "src": "942:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 2307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "942:30:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2308,
                              "nodeType": "ExpressionStatement",
                              "src": "942:30:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2311,
                              "name": "compSpeeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21447,
                              "src": "1000:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2313,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2312,
                              "name": "cToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2290,
                              "src": "1011:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1000:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2314,
                              "name": "_compSpeeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2256,
                              "src": "1021:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2316,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2315,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2279,
                              "src": "1033:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1021:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1000:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2318,
                        "nodeType": "ExpressionStatement",
                        "src": "1000:35:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2319,
                            "name": "_compRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "1049:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2321,
                                "name": "_compRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "1066:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2322,
                                  "name": "_compSpeeds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2256,
                                  "src": "1077:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 2324,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2323,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2279,
                                  "src": "1089:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1077:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2320,
                              "name": "add_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                22822,
                                22841,
                                22857,
                                22884
                              ],
                              "referencedDeclaration": 22857,
                              "src": "1061:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1061:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1049:43:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2327,
                        "nodeType": "ExpressionStatement",
                        "src": "1049:43:9"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2282,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2279,
                      "src": "753:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2283,
                        "name": "_allMarkets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2253,
                        "src": "757:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "757:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "753:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2329,
                  "initializationExpression": {
                    "assignments": [
                      2279
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2279,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2329,
                        "src": "741:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2278,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2281,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "750:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "741:10:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "777:3:9",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2286,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2279,
                        "src": "777:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2288,
                    "nodeType": "ExpressionStatement",
                    "src": "777:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "736:367:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2331,
                        "name": "_compRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2275,
                        "src": "1125:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2330,
                      "name": "_setCompRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12468,
                      "src": "1112:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2333,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:23:9"
                }
              ]
            },
            "documentation": "@notice Sets new governance token distribution speed\n@dev Admin function to set new token distribution speed",
            "id": 2335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setCompSpeeds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2253,
                  "name": "_allMarkets",
                  "nodeType": "VariableDeclaration",
                  "scope": 2335,
                  "src": "494:28:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2251,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "494:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2252,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "494:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2256,
                  "name": "_compSpeeds",
                  "nodeType": "VariableDeclaration",
                  "scope": 2335,
                  "src": "524:25:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2254,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "524:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2255,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "524:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "493:57:9"
            },
            "returnParameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:0:9"
            },
            "scope": 2548,
            "src": "470:672:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2356,
              "nodeType": "Block",
              "src": "1185:141:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1203:35:9",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2339,
                              "name": "qsConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2233,
                              "src": "1204:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QsConfig_$1267",
                                "typeString": "contract QsConfig"
                              }
                            },
                            "id": 2340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "compSpeedGuardianPaused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 846,
                            "src": "1204:32:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 2341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1204:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "1195:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1195:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2344,
                  "nodeType": "ExpressionStatement",
                  "src": "1195:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 2350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2346,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30080,
                            "src": "1257:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1257:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2348,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30092,
                            "src": "1271:2:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 2349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1271:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1257:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "1249:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2352,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2353,
                      "name": "refreshCompSpeedsInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2373
                      ],
                      "referencedDeclaration": 2373,
                      "src": "1292:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1292:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "1292:27:9"
                }
              ]
            },
            "documentation": null,
            "id": 2357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refreshCompSpeeds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1175:2:9"
            },
            "returnParameters": {
              "id": 2337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1185:0:9"
            },
            "scope": 2548,
            "src": "1149:177:9",
            "stateMutability": "nonpayable",
            "superFunction": 11641,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2372,
              "nodeType": "Block",
              "src": "1378:151:9",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2360,
                        "name": "qsConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2233,
                        "src": "1392:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QsConfig_$1267",
                          "typeString": "contract QsConfig"
                        }
                      },
                      "id": 2361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "compSpeedGuardianPaused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 846,
                      "src": "1392:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1392:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2370,
                    "nodeType": "Block",
                    "src": "1465:58:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2365,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30147,
                              "src": "1479:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_Qstroller_$2548",
                                "typeString": "contract super Qstroller"
                              }
                            },
                            "id": 2367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refreshCompSpeedsInternal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11816,
                            "src": "1479:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1479:33:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2369,
                        "nodeType": "ExpressionStatement",
                        "src": "1479:33:9"
                      }
                    ]
                  },
                  "id": 2371,
                  "nodeType": "IfStatement",
                  "src": "1388:135:9",
                  "trueBody": {
                    "id": 2364,
                    "nodeType": "Block",
                    "src": "1428:31:9",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 2359,
                        "id": 2363,
                        "nodeType": "Return",
                        "src": "1442:7:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refreshCompSpeedsInternal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1366:2:9"
            },
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1378:0:9"
            },
            "scope": 2548,
            "src": "1332:197:9",
            "stateMutability": "nonpayable",
            "superFunction": 11816,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2382,
              "nodeType": "Block",
              "src": "1591:44:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2378,
                        "name": "qsConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2233,
                        "src": "1608:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QsConfig_$1267",
                          "typeString": "contract QsConfig"
                        }
                      },
                      "id": 2379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "compToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 848,
                      "src": "1608:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2377,
                  "id": 2381,
                  "nodeType": "Return",
                  "src": "1601:27:9"
                }
              ]
            },
            "documentation": null,
            "id": 2383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1558:2:9"
            },
            "returnParameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2376,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2383,
                  "src": "1582:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1581:9:9"
            },
            "scope": 2548,
            "src": "1535:100:9",
            "stateMutability": "view",
            "superFunction": 12670,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2398,
              "nodeType": "Block",
              "src": "1775:111:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2394,
                        "name": "_seizeTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "1831:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2395,
                        "name": "liquidationIncentiveMantissa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21387,
                        "src": "1850:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2392,
                        "name": "qsConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2233,
                        "src": "1792:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QsConfig_$1267",
                          "typeString": "contract QsConfig"
                        }
                      },
                      "id": 2393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateSeizeTokenAllocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "1792:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:87:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 2391,
                  "id": 2397,
                  "nodeType": "Return",
                  "src": "1785:94:9"
                }
              ]
            },
            "documentation": null,
            "id": 2399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSeizeTokenAllocation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2385,
                  "name": "_seizeTokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "1684:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2384,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1683:24:9"
            },
            "returnParameters": {
              "id": 2391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2388,
                  "name": "liquidatorAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "1728:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2387,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1728:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2390,
                  "name": "safetyVaultAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "1751:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2389,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1727:47:9"
            },
            "scope": 2548,
            "src": "1645:241:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2488,
              "nodeType": "Block",
              "src": "1990:672:9",
              "statements": [
                {
                  "assignments": [
                    2411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2411,
                      "name": "compAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2488,
                      "src": "2000:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2410,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2000:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2414,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2412,
                      "name": "getCompAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2383
                      ],
                      "referencedDeclaration": 2383,
                      "src": "2022:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2022:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2000:38:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2415,
                          "name": "userAccrued",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2403,
                          "src": "2052:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2416,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2405,
                          "src": "2067:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2052:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2418,
                          "name": "userAccrued",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2403,
                          "src": "2080:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2094:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2080:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2052:43:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2422,
                        "name": "compAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2411,
                        "src": "2099:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 2424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2122:3:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2114:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2114:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "2099:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2052:74:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2485,
                  "nodeType": "IfStatement",
                  "src": "2048:580:9",
                  "trueBody": {
                    "id": 2484,
                    "nodeType": "Block",
                    "src": "2128:500:9",
                    "statements": [
                      {
                        "assignments": [
                          2429
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2429,
                            "name": "comp",
                            "nodeType": "VariableDeclaration",
                            "scope": 2484,
                            "src": "2142:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                              "typeString": "contract EIP20Interface"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 2428,
                              "name": "EIP20Interface",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 21820,
                              "src": "2142:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                                "typeString": "contract EIP20Interface"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2433,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2431,
                              "name": "compAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2411,
                              "src": "2179:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2430,
                            "name": "EIP20Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21820,
                            "src": "2164:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_EIP20Interface_$21820_$",
                              "typeString": "type(contract EIP20Interface)"
                            }
                          },
                          "id": 2432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2164:27:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                            "typeString": "contract EIP20Interface"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2142:49:9"
                      },
                      {
                        "assignments": [
                          2435
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2435,
                            "name": "compRemaining",
                            "nodeType": "VariableDeclaration",
                            "scope": 2484,
                            "src": "2205:18:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2434,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2205:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2442,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2439,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30146,
                                  "src": "2249:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Qstroller_$2548",
                                    "typeString": "contract Qstroller"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Qstroller_$2548",
                                    "typeString": "contract Qstroller"
                                  }
                                ],
                                "id": 2438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2241:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2241:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2436,
                              "name": "comp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2429,
                              "src": "2226:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                                "typeString": "contract EIP20Interface"
                              }
                            },
                            "id": 2437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21765,
                            "src": "2226:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2226:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2205:50:9"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2443,
                            "name": "userAccrued",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2403,
                            "src": "2273:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2444,
                            "name": "compRemaining",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2435,
                            "src": "2288:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2273:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2483,
                        "nodeType": "IfStatement",
                        "src": "2269:349:9",
                        "trueBody": {
                          "id": 2482,
                          "nodeType": "Block",
                          "src": "2303:315:9",
                          "statements": [
                            {
                              "assignments": [
                                2447,
                                2449
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2447,
                                  "name": "userAmount",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2482,
                                  "src": "2322:15:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2446,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2322:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 2449,
                                  "name": "governanceAmount",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2482,
                                  "src": "2339:21:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2448,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2339:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2455,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2452,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2401,
                                    "src": "2391:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2453,
                                    "name": "userAccrued",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2403,
                                    "src": "2397:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2450,
                                    "name": "qsConfig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2233,
                                    "src": "2364:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_QsConfig_$1267",
                                      "typeString": "contract QsConfig"
                                    }
                                  },
                                  "id": 2451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getCompAllocation",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1098,
                                  "src": "2364:26:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (address,uint256) view external returns (uint256,uint256)"
                                  }
                                },
                                "id": 2454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2364:45:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2321:88:9"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2456,
                                  "name": "userAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2447,
                                  "src": "2431:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2444:1:9",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2431:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 2466,
                              "nodeType": "IfStatement",
                              "src": "2427:51:9",
                              "trueBody": {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2462,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2401,
                                      "src": "2461:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 2463,
                                      "name": "userAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2447,
                                      "src": "2467:10:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2459,
                                      "name": "comp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2429,
                                      "src": "2447:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                                        "typeString": "contract EIP20Interface"
                                      }
                                    },
                                    "id": 2461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21774,
                                    "src": "2447:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 2464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2447:31:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 2465,
                                "nodeType": "ExpressionStatement",
                                "src": "2447:31:9"
                              }
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2467,
                                  "name": "governanceAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2449,
                                  "src": "2500:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2519:1:9",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2500:20:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 2479,
                              "nodeType": "IfStatement",
                              "src": "2496:81:9",
                              "trueBody": {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2473,
                                          "name": "qsConfig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2233,
                                          "src": "2536:8:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_QsConfig_$1267",
                                            "typeString": "contract QsConfig"
                                          }
                                        },
                                        "id": 2474,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safetyVault",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 852,
                                        "src": "2536:20:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                          "typeString": "function () view external returns (address)"
                                        }
                                      },
                                      "id": 2475,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2536:22:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 2476,
                                      "name": "governanceAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2449,
                                      "src": "2560:16:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2470,
                                      "name": "comp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2429,
                                      "src": "2522:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_EIP20Interface_$21820",
                                        "typeString": "contract EIP20Interface"
                                      }
                                    },
                                    "id": 2472,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21774,
                                    "src": "2522:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 2477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2522:55:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 2478,
                                "nodeType": "ExpressionStatement",
                                "src": "2522:55:9"
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2602:1:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 2409,
                              "id": 2481,
                              "nodeType": "Return",
                              "src": "2595:8:9"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2486,
                    "name": "userAccrued",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2403,
                    "src": "2644:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2409,
                  "id": 2487,
                  "nodeType": "Return",
                  "src": "2637:18:9"
                }
              ]
            },
            "documentation": null,
            "id": 2489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferComp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2401,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2489,
                  "src": "1918:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2403,
                  "name": "userAccrued",
                  "nodeType": "VariableDeclaration",
                  "scope": 2489,
                  "src": "1932:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2402,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1932:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2405,
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2489,
                  "src": "1950:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2404,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1950:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1917:48:9"
            },
            "returnParameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2408,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2489,
                  "src": "1984:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1984:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1983:6:9"
            },
            "scope": 2548,
            "src": "1896:766:9",
            "stateMutability": "nonpayable",
            "superFunction": 12276,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2546,
              "nodeType": "Block",
              "src": "3196:519:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3214:27:9",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2503,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2493,
                              "src": "3234:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2501,
                              "name": "qsConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2233,
                              "src": "3215:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QsConfig_$1267",
                                "typeString": "contract QsConfig"
                              }
                            },
                            "id": 2502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isBlocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1138,
                            "src": "3215:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 2504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3215:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "3206:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3206:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2507,
                  "nodeType": "ExpressionStatement",
                  "src": "3206:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3339:27:9",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2509,
                            "name": "mintGuardianPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21426,
                            "src": "3340:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2511,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2510,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2491,
                            "src": "3359:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3340:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30083,
                        30084
                      ],
                      "referencedDeclaration": 30083,
                      "src": "3331:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3331:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2514,
                  "nodeType": "ExpressionStatement",
                  "src": "3331:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2515,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2493,
                    "src": "3412:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "3412:6:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2517,
                    "name": "mintAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2495,
                    "src": "3428:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2518,
                  "nodeType": "ExpressionStatement",
                  "src": "3428:10:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3453:25:9",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2519,
                          "name": "markets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21412,
                          "src": "3454:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Market_$21408_storage_$",
                            "typeString": "mapping(address => struct ComptrollerV2Storage.Market storage ref)"
                          }
                        },
                        "id": 2521,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2520,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2491,
                          "src": "3462:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3454:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$21408_storage",
                          "typeString": "struct ComptrollerV2Storage.Market storage ref"
                        }
                      },
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isListed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21399,
                      "src": "3454:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2530,
                  "nodeType": "IfStatement",
                  "src": "3449:92:9",
                  "trueBody": {
                    "id": 2529,
                    "nodeType": "Block",
                    "src": "3480:61:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2525,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21906,
                                "src": "3506:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$21906_$",
                                  "typeString": "type(enum ComptrollerErrorReporter.Error)"
                                }
                              },
                              "id": 2526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "MARKET_NOT_LISTED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3506:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$21906",
                                "typeString": "enum ComptrollerErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$21906",
                                "typeString": "enum ComptrollerErrorReporter.Error"
                              }
                            ],
                            "id": 2524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3501:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 2527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3501:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2499,
                        "id": 2528,
                        "nodeType": "Return",
                        "src": "3494:36:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2532,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "3609:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2531,
                      "name": "updateCompSupplyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11927,
                      "src": "3587:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3587:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2534,
                  "nodeType": "ExpressionStatement",
                  "src": "3587:29:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2536,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "3649:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2537,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2493,
                        "src": "3657:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 2538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3665:5:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2535,
                      "name": "distributeSupplierComp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12157,
                      "src": "3626:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3626:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2540,
                  "nodeType": "ExpressionStatement",
                  "src": "3626:45:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2542,
                          "name": "Error",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21906,
                          "src": "3693:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Error_$21906_$",
                            "typeString": "type(enum ComptrollerErrorReporter.Error)"
                          }
                        },
                        "id": 2543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO_ERROR",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3693:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Error_$21906",
                          "typeString": "enum ComptrollerErrorReporter.Error"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Error_$21906",
                          "typeString": "enum ComptrollerErrorReporter.Error"
                        }
                      ],
                      "id": 2541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3688:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2499,
                  "id": 2545,
                  "nodeType": "Return",
                  "src": "3681:27:9"
                }
              ]
            },
            "documentation": "@notice Checks if the account should be allowed to mint tokens in the given market\n@param cToken The market to verify the mint against\n@param minter The account which would get the minted tokens\n@param mintAmount The amount of underlying being supplied to the market in exchange for tokens\n@return 0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)",
            "id": 2547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2491,
                  "name": "cToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3123:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3123:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2493,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3139:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2495,
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3155:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3122:49:9"
            },
            "returnParameters": {
              "id": 2499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2498,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3190:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2497,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3190:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3189:6:9"
            },
            "scope": 2548,
            "src": "3102:613:9",
            "stateMutability": "nonpayable",
            "superFunction": 21191,
            "visibility": "external"
          }
        ],
        "scope": 2549,
        "src": "129:3588:9"
      }
    ],
    "src": "0:3717:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "21": {
      "events": {
        "0xef159d9a32b2472e32b098f954f3ce62d232939f1c207070b584df1814de2de0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "action",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "pauseState",
              "type": "bool"
            }
          ],
          "name": "ActionPaused",
          "type": "event"
        },
        "0x71aec636243f9709bb0007ae15e9afb8150ab01716d75fd7573be5cc096e03b0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "action",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "pauseState",
              "type": "bool"
            }
          ],
          "name": "ActionPaused",
          "type": "event"
        },
        "0x2ab93f65628379309f36cb125e90d7c902454a545c4f8b8cb0794af75c24b807": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newSpeed",
              "type": "uint256"
            }
          ],
          "name": "CompSpeedUpdated",
          "type": "event"
        },
        "0x1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compDelta",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compBorrowIndex",
              "type": "uint256"
            }
          ],
          "name": "DistributedBorrowerComp",
          "type": "event"
        },
        "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "supplier",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compDelta",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compSupplyIndex",
              "type": "uint256"
            }
          ],
          "name": "DistributedSupplierComp",
          "type": "event"
        },
        "0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "error",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "info",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "detail",
              "type": "uint256"
            }
          ],
          "name": "Failure",
          "type": "event"
        },
        "0x93c1f3e36ed71139f466a4ce8c9751790e2e33f5afb2df0dcfb3aeabe55d5aa2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isComped",
              "type": "bool"
            }
          ],
          "name": "MarketComped",
          "type": "event"
        },
        "0x3ab23ab0d51cccc0c3085aec51f99228625aa1a922b3a8ca89a26b0f2027a1a5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MarketEntered",
          "type": "event"
        },
        "0xe699a64c18b07ac5b7301aa273f36a2287239eb9501d81950672794afba29a0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MarketExited",
          "type": "event"
        },
        "0xcf583bb0c569eb967f806b11601c4cb93c10310485c67add5f8362c2f212321f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            }
          ],
          "name": "MarketListed",
          "type": "event"
        },
        "0x3b9670cf975d26958e754b57098eaa2ac914d8d2a31b83257997b9f346110fd9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldCloseFactorMantissa",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newCloseFactorMantissa",
              "type": "uint256"
            }
          ],
          "name": "NewCloseFactor",
          "type": "event"
        },
        "0x70483e6592cd5182d45ac970e05bc62cdcc90e9d8ef2c2dbe686cf383bcd7fc5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldCollateralFactorMantissa",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newCollateralFactorMantissa",
              "type": "uint256"
            }
          ],
          "name": "NewCollateralFactor",
          "type": "event"
        },
        "0xc227c9272633c3a307d9845bf2bc2509cefb20d655b5f3c1002d8e1e3f22c8b0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldCompRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newCompRate",
              "type": "uint256"
            }
          ],
          "name": "NewCompRate",
          "type": "event"
        },
        "0xaeba5a6c40a8ac138134bff1aaa65debf25971188a58804bad717f82f0ec1316": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldLiquidationIncentiveMantissa",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newLiquidationIncentiveMantissa",
              "type": "uint256"
            }
          ],
          "name": "NewLiquidationIncentive",
          "type": "event"
        },
        "0x7093cf1eb653f749c3ff531d6df7f92764536a7fa0d13530cd26e070780c32ea": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldMaxAssets",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newMaxAssets",
              "type": "uint256"
            }
          ],
          "name": "NewMaxAssets",
          "type": "event"
        },
        "0x0613b6ee6a04f0d09f390e4d9318894b9f6ac7fd83897cd8d18896ba579c401e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "oldPauseGuardian",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newPauseGuardian",
              "type": "address"
            }
          ],
          "name": "NewPauseGuardian",
          "type": "event"
        },
        "0xd52b2b9b7e9ee655fcb95d2e5b9e0c9f69e7ef2b8e9d2d0ea78402d576d22e22": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract PriceOracle",
              "name": "oldPriceOracle",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract PriceOracle",
              "name": "newPriceOracle",
              "type": "address"
            }
          ],
          "name": "NewPriceOracle",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xA8e9228b64D060Cdb3375117Ecb4de7888B04031",
      "transactionHash": "0xf4bcf3dabcc86a2ce1b724be3fa7b3c57d81d577f211adc43e3005dd28aa1ea1"
    },
    "128": {
      "events": {
        "0xef159d9a32b2472e32b098f954f3ce62d232939f1c207070b584df1814de2de0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "action",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "pauseState",
              "type": "bool"
            }
          ],
          "name": "ActionPaused",
          "type": "event"
        },
        "0x71aec636243f9709bb0007ae15e9afb8150ab01716d75fd7573be5cc096e03b0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "action",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "pauseState",
              "type": "bool"
            }
          ],
          "name": "ActionPaused",
          "type": "event"
        },
        "0x2ab93f65628379309f36cb125e90d7c902454a545c4f8b8cb0794af75c24b807": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newSpeed",
              "type": "uint256"
            }
          ],
          "name": "CompSpeedUpdated",
          "type": "event"
        },
        "0x1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compDelta",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compBorrowIndex",
              "type": "uint256"
            }
          ],
          "name": "DistributedBorrowerComp",
          "type": "event"
        },
        "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "supplier",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compDelta",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compSupplyIndex",
              "type": "uint256"
            }
          ],
          "name": "DistributedSupplierComp",
          "type": "event"
        },
        "0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "error",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "info",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "detail",
              "type": "uint256"
            }
          ],
          "name": "Failure",
          "type": "event"
        },
        "0x93c1f3e36ed71139f466a4ce8c9751790e2e33f5afb2df0dcfb3aeabe55d5aa2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isComped",
              "type": "bool"
            }
          ],
          "name": "MarketComped",
          "type": "event"
        },
        "0x3ab23ab0d51cccc0c3085aec51f99228625aa1a922b3a8ca89a26b0f2027a1a5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MarketEntered",
          "type": "event"
        },
        "0xe699a64c18b07ac5b7301aa273f36a2287239eb9501d81950672794afba29a0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MarketExited",
          "type": "event"
        },
        "0xcf583bb0c569eb967f806b11601c4cb93c10310485c67add5f8362c2f212321f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            }
          ],
          "name": "MarketListed",
          "type": "event"
        },
        "0x3b9670cf975d26958e754b57098eaa2ac914d8d2a31b83257997b9f346110fd9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldCloseFactorMantissa",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newCloseFactorMantissa",
              "type": "uint256"
            }
          ],
          "name": "NewCloseFactor",
          "type": "event"
        },
        "0x70483e6592cd5182d45ac970e05bc62cdcc90e9d8ef2c2dbe686cf383bcd7fc5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldCollateralFactorMantissa",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newCollateralFactorMantissa",
              "type": "uint256"
            }
          ],
          "name": "NewCollateralFactor",
          "type": "event"
        },
        "0xc227c9272633c3a307d9845bf2bc2509cefb20d655b5f3c1002d8e1e3f22c8b0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldCompRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newCompRate",
              "type": "uint256"
            }
          ],
          "name": "NewCompRate",
          "type": "event"
        },
        "0xaeba5a6c40a8ac138134bff1aaa65debf25971188a58804bad717f82f0ec1316": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldLiquidationIncentiveMantissa",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newLiquidationIncentiveMantissa",
              "type": "uint256"
            }
          ],
          "name": "NewLiquidationIncentive",
          "type": "event"
        },
        "0x7093cf1eb653f749c3ff531d6df7f92764536a7fa0d13530cd26e070780c32ea": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldMaxAssets",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newMaxAssets",
              "type": "uint256"
            }
          ],
          "name": "NewMaxAssets",
          "type": "event"
        },
        "0x0613b6ee6a04f0d09f390e4d9318894b9f6ac7fd83897cd8d18896ba579c401e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "oldPauseGuardian",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newPauseGuardian",
              "type": "address"
            }
          ],
          "name": "NewPauseGuardian",
          "type": "event"
        },
        "0xd52b2b9b7e9ee655fcb95d2e5b9e0c9f69e7ef2b8e9d2d0ea78402d576d22e22": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract PriceOracle",
              "name": "oldPriceOracle",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract PriceOracle",
              "name": "newPriceOracle",
              "type": "address"
            }
          ],
          "name": "NewPriceOracle",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xF9B7e5f27e95715Be757a82116DE54036A75c507",
      "transactionHash": "0xbd0e88500f7fab28cb1842d33f456731c7b168da99d016c2cb69ec85234a424c"
    },
    "256": {
      "events": {
        "0xef159d9a32b2472e32b098f954f3ce62d232939f1c207070b584df1814de2de0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "action",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "pauseState",
              "type": "bool"
            }
          ],
          "name": "ActionPaused",
          "type": "event"
        },
        "0x71aec636243f9709bb0007ae15e9afb8150ab01716d75fd7573be5cc096e03b0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "action",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "pauseState",
              "type": "bool"
            }
          ],
          "name": "ActionPaused",
          "type": "event"
        },
        "0x2ab93f65628379309f36cb125e90d7c902454a545c4f8b8cb0794af75c24b807": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newSpeed",
              "type": "uint256"
            }
          ],
          "name": "CompSpeedUpdated",
          "type": "event"
        },
        "0x1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compDelta",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compBorrowIndex",
              "type": "uint256"
            }
          ],
          "name": "DistributedBorrowerComp",
          "type": "event"
        },
        "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "supplier",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compDelta",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "compSupplyIndex",
              "type": "uint256"
            }
          ],
          "name": "DistributedSupplierComp",
          "type": "event"
        },
        "0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "error",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "info",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "detail",
              "type": "uint256"
            }
          ],
          "name": "Failure",
          "type": "event"
        },
        "0x93c1f3e36ed71139f466a4ce8c9751790e2e33f5afb2df0dcfb3aeabe55d5aa2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isComped",
              "type": "bool"
            }
          ],
          "name": "MarketComped",
          "type": "event"
        },
        "0x3ab23ab0d51cccc0c3085aec51f99228625aa1a922b3a8ca89a26b0f2027a1a5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MarketEntered",
          "type": "event"
        },
        "0xe699a64c18b07ac5b7301aa273f36a2287239eb9501d81950672794afba29a0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MarketExited",
          "type": "event"
        },
        "0xcf583bb0c569eb967f806b11601c4cb93c10310485c67add5f8362c2f212321f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            }
          ],
          "name": "MarketListed",
          "type": "event"
        },
        "0x3b9670cf975d26958e754b57098eaa2ac914d8d2a31b83257997b9f346110fd9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldCloseFactorMantissa",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newCloseFactorMantissa",
              "type": "uint256"
            }
          ],
          "name": "NewCloseFactor",
          "type": "event"
        },
        "0x70483e6592cd5182d45ac970e05bc62cdcc90e9d8ef2c2dbe686cf383bcd7fc5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract CToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldCollateralFactorMantissa",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newCollateralFactorMantissa",
              "type": "uint256"
            }
          ],
          "name": "NewCollateralFactor",
          "type": "event"
        },
        "0xc227c9272633c3a307d9845bf2bc2509cefb20d655b5f3c1002d8e1e3f22c8b0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldCompRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newCompRate",
              "type": "uint256"
            }
          ],
          "name": "NewCompRate",
          "type": "event"
        },
        "0xaeba5a6c40a8ac138134bff1aaa65debf25971188a58804bad717f82f0ec1316": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldLiquidationIncentiveMantissa",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newLiquidationIncentiveMantissa",
              "type": "uint256"
            }
          ],
          "name": "NewLiquidationIncentive",
          "type": "event"
        },
        "0x7093cf1eb653f749c3ff531d6df7f92764536a7fa0d13530cd26e070780c32ea": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldMaxAssets",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newMaxAssets",
              "type": "uint256"
            }
          ],
          "name": "NewMaxAssets",
          "type": "event"
        },
        "0x0613b6ee6a04f0d09f390e4d9318894b9f6ac7fd83897cd8d18896ba579c401e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "oldPauseGuardian",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newPauseGuardian",
              "type": "address"
            }
          ],
          "name": "NewPauseGuardian",
          "type": "event"
        },
        "0xd52b2b9b7e9ee655fcb95d2e5b9e0c9f69e7ef2b8e9d2d0ea78402d576d22e22": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract PriceOracle",
              "name": "oldPriceOracle",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract PriceOracle",
              "name": "newPriceOracle",
              "type": "address"
            }
          ],
          "name": "NewPriceOracle",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xF9B7e5f27e95715Be757a82116DE54036A75c507",
      "transactionHash": "0xfd36b71e9c6fc109104d9ae0491dda276ea526610da73ae24cf93e533626285b"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2021-03-18T10:38:39.093Z",
  "devdoc": {
    "methods": {
      "_addCompMarkets(address[])": {
        "params": {
          "cTokens": "The addresses of the markets to add"
        }
      },
      "_dropCompMarket(address)": {
        "params": {
          "cToken": "The address of the market to drop"
        }
      },
      "_setCloseFactor(uint256)": {
        "details": "Admin function to set closeFactor",
        "params": {
          "newCloseFactorMantissa": "New close factor, scaled by 1e18"
        },
        "return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
      },
      "_setCollateralFactor(address,uint256)": {
        "details": "Admin function to set per-market collateralFactor",
        "params": {
          "cToken": "The market to set the factor on",
          "newCollateralFactorMantissa": "The new collateral factor, scaled by 1e18"
        },
        "return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
      },
      "_setCompRate(uint256)": {
        "params": {
          "compRate_": "The amount of COMP wei per block to distribute"
        }
      },
      "_setCompSpeeds(address[],uint256[])": {
        "details": "Admin function to set new token distribution speed"
      },
      "_setLiquidationIncentive(uint256)": {
        "details": "Admin function to set liquidationIncentive",
        "params": {
          "newLiquidationIncentiveMantissa": "New liquidationIncentive scaled by 1e18"
        },
        "return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
      },
      "_setMaxAssets(uint256)": {
        "details": "Admin function to set maxAssets",
        "params": {
          "newMaxAssets": "New max assets"
        },
        "return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
      },
      "_setPauseGuardian(address)": {
        "params": {
          "newPauseGuardian": "The address of the new Pause Guardian"
        },
        "return": "uint 0=success, otherwise a failure. (See enum Error for details)"
      },
      "_setPriceOracle(address)": {
        "details": "Admin function to set a new price oracle",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_supportMarket(address)": {
        "details": "Admin function to set isListed and add support for the market",
        "params": {
          "cToken": "The address of the market (token) to list"
        },
        "return": "uint 0=success, otherwise a failure. (See enum Error for details)"
      },
      "borrowAllowed(address,address,uint256)": {
        "params": {
          "borrowAmount": "The amount of underlying the account would borrow",
          "borrower": "The account which would borrow the asset",
          "cToken": "The market to verify the borrow against"
        },
        "return": "0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
      },
      "borrowVerify(address,address,uint256)": {
        "params": {
          "borrowAmount": "The amount of the underlying asset requested to borrow",
          "borrower": "The address borrowing the underlying",
          "cToken": "Asset whose underlying is being borrowed"
        }
      },
      "checkMembership(address,address)": {
        "params": {
          "account": "The address of the account to check",
          "cToken": "The cToken to check"
        },
        "return": "True if the account is in the asset, otherwise false."
      },
      "claimComp(address)": {
        "params": {
          "holder": "The address to claim COMP for"
        }
      },
      "claimComp(address,address[])": {
        "params": {
          "cTokens": "The list of markets to claim COMP in",
          "holder": "The address to claim COMP for"
        }
      },
      "claimComp(address[],address[],bool,bool)": {
        "params": {
          "borrowers": "Whether or not to claim COMP earned by borrowing",
          "cTokens": "The list of markets to claim COMP in",
          "holders": "The addresses to claim COMP for",
          "suppliers": "Whether or not to claim COMP earned by supplying"
        }
      },
      "enterMarkets(address[])": {
        "params": {
          "cTokens": "The list of addresses of the cToken markets to be enabled"
        },
        "return": "Success indicator for whether each corresponding market was entered"
      },
      "exitMarket(address)": {
        "details": "Sender must not have an outstanding borrow balance in the asset, or be providing necessary collateral for an outstanding borrow.",
        "params": {
          "cTokenAddress": "The address of the asset to be removed"
        },
        "return": "Whether or not the account successfully exited the market"
      },
      "getAccountLiquidity(address)": {
        "return": "(possible error code (semi-opaque), account liquidity in excess of collateral requirements,         account shortfall below collateral requirements)"
      },
      "getAllMarkets()": {
        "details": "The automatic getter may be used to access an individual market.",
        "return": "The list of market addresses"
      },
      "getAssetsIn(address)": {
        "params": {
          "account": "The address of the account to pull assets for"
        },
        "return": "A dynamic list with the assets the account has entered"
      },
      "getHypotheticalAccountLiquidity(address,address,uint256,uint256)": {
        "params": {
          "account": "The account to determine liquidity for",
          "borrowAmount": "The amount of underlying to hypothetically borrow",
          "cTokenModify": "The market to hypothetically redeem/borrow in",
          "redeemTokens": "The number of tokens to hypothetically redeem"
        },
        "return": "(possible error code (semi-opaque), hypothetical account liquidity in excess of collateral requirements,         hypothetical account shortfall below collateral requirements)"
      },
      "liquidateBorrowAllowed(address,address,address,address,uint256)": {
        "params": {
          "borrower": "The address of the borrower",
          "cTokenBorrowed": "Asset which was borrowed by the borrower",
          "cTokenCollateral": "Asset which was used as collateral and will be seized",
          "liquidator": "The address repaying the borrow and seizing the collateral",
          "repayAmount": "The amount of underlying being repaid"
        }
      },
      "liquidateBorrowVerify(address,address,address,address,uint256,uint256)": {
        "params": {
          "actualRepayAmount": "The amount of underlying being repaid",
          "borrower": "The address of the borrower",
          "cTokenBorrowed": "Asset which was borrowed by the borrower",
          "cTokenCollateral": "Asset which was used as collateral and will be seized",
          "liquidator": "The address repaying the borrow and seizing the collateral"
        }
      },
      "liquidateCalculateSeizeTokens(address,address,uint256)": {
        "details": "Used in liquidation (called in cToken.liquidateBorrowFresh)",
        "params": {
          "actualRepayAmount": "The amount of cTokenBorrowed underlying to convert into cTokenCollateral tokens",
          "cTokenBorrowed": "The address of the borrowed cToken",
          "cTokenCollateral": "The address of the collateral cToken"
        },
        "return": "(errorCode, number of cTokenCollateral tokens to be seized in a liquidation)"
      },
      "mintAllowed(address,address,uint256)": {
        "params": {
          "cToken": "The market to verify the mint against",
          "mintAmount": "The amount of underlying being supplied to the market in exchange for tokens",
          "minter": "The account which would get the minted tokens"
        },
        "return": "0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
      },
      "mintVerify(address,address,uint256,uint256)": {
        "params": {
          "actualMintAmount": "The amount of the underlying asset being minted",
          "cToken": "Asset being minted",
          "mintTokens": "The number of tokens being minted",
          "minter": "The address minting the tokens"
        }
      },
      "redeemAllowed(address,address,uint256)": {
        "params": {
          "cToken": "The market to verify the redeem against",
          "redeemTokens": "The number of cTokens to exchange for the underlying asset in the market",
          "redeemer": "The account which would redeem the tokens"
        },
        "return": "0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
      },
      "redeemVerify(address,address,uint256,uint256)": {
        "params": {
          "cToken": "Asset being redeemed",
          "redeemAmount": "The amount of the underlying asset being redeemed",
          "redeemTokens": "The number of tokens being redeemed",
          "redeemer": "The address redeeming the tokens"
        }
      },
      "repayBorrowAllowed(address,address,address,uint256)": {
        "params": {
          "borrower": "The account which would borrowed the asset",
          "cToken": "The market to verify the repay against",
          "payer": "The account which would repay the asset",
          "repayAmount": "The amount of the underlying asset the account would repay"
        },
        "return": "0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
      },
      "repayBorrowVerify(address,address,address,uint256,uint256)": {
        "params": {
          "actualRepayAmount": "The amount of underlying being repaid",
          "borrower": "The address of the borrower",
          "cToken": "Asset being repaid",
          "payer": "The address repaying the borrow"
        }
      },
      "seizeAllowed(address,address,address,address,uint256)": {
        "params": {
          "borrower": "The address of the borrower",
          "cTokenBorrowed": "Asset which was borrowed by the borrower",
          "cTokenCollateral": "Asset which was used as collateral and will be seized",
          "liquidator": "The address repaying the borrow and seizing the collateral",
          "seizeTokens": "The number of collateral tokens to seize"
        }
      },
      "seizeVerify(address,address,address,address,uint256)": {
        "params": {
          "borrower": "The address of the borrower",
          "cTokenBorrowed": "Asset which was borrowed by the borrower",
          "cTokenCollateral": "Asset which was used as collateral and will be seized",
          "liquidator": "The address repaying the borrow and seizing the collateral",
          "seizeTokens": "The number of collateral tokens to seize"
        }
      },
      "transferAllowed(address,address,address,uint256)": {
        "params": {
          "cToken": "The market to verify the transfer against",
          "dst": "The account which receives the tokens",
          "src": "The account which sources the tokens",
          "transferTokens": "The number of cTokens to transfer"
        },
        "return": "0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
      },
      "transferVerify(address,address,address,uint256)": {
        "params": {
          "cToken": "Asset being transferred",
          "dst": "The account which receives the tokens",
          "src": "The account which sources the tokens",
          "transferTokens": "The number of cTokens to transfer"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "_addCompMarkets(address[])": {
        "notice": "Add markets to compMarkets, allowing them to earn COMP in the flywheel"
      },
      "_dropCompMarket(address)": {
        "notice": "Remove a market from compMarkets, preventing it from earning COMP in the flywheel"
      },
      "_setCloseFactor(uint256)": {
        "notice": "Sets the closeFactor used when liquidating borrows"
      },
      "_setCollateralFactor(address,uint256)": {
        "notice": "Sets the collateralFactor for a market"
      },
      "_setCompRate(uint256)": {
        "notice": "Set the amount of COMP distributed per block"
      },
      "_setCompSpeeds(address[],uint256[])": {
        "notice": "Sets new governance token distribution speed"
      },
      "_setLiquidationIncentive(uint256)": {
        "notice": "Sets liquidationIncentive"
      },
      "_setMaxAssets(uint256)": {
        "notice": "Sets maxAssets which controls how many markets can be entered"
      },
      "_setPauseGuardian(address)": {
        "notice": "Admin function to change the Pause Guardian"
      },
      "_setPriceOracle(address)": {
        "notice": "Sets a new price oracle for the comptroller"
      },
      "_supportMarket(address)": {
        "notice": "Add the market to the markets mapping and set it as listed"
      },
      "borrowAllowed(address,address,uint256)": {
        "notice": "Checks if the account should be allowed to borrow the underlying asset of the given market"
      },
      "borrowVerify(address,address,uint256)": {
        "notice": "Validates borrow and reverts on rejection. May emit logs."
      },
      "checkMembership(address,address)": {
        "notice": "Returns whether the given account is entered in the given asset"
      },
      "claimComp(address)": {
        "notice": "Claim all the comp accrued by holder in all markets"
      },
      "claimComp(address,address[])": {
        "notice": "Claim all the comp accrued by holder in the specified markets"
      },
      "claimComp(address[],address[],bool,bool)": {
        "notice": "Claim all comp accrued by the holders"
      },
      "enterMarkets(address[])": {
        "notice": "Add assets to be included in account liquidity calculation"
      },
      "exitMarket(address)": {
        "notice": "Removes asset from sender's account liquidity calculation"
      },
      "getAccountLiquidity(address)": {
        "notice": "Determine the current account liquidity wrt collateral requirements"
      },
      "getAllMarkets()": {
        "notice": "Return all of the markets"
      },
      "getAssetsIn(address)": {
        "notice": "Returns the assets an account has entered"
      },
      "getHypotheticalAccountLiquidity(address,address,uint256,uint256)": {
        "notice": "Determine what the account liquidity would be if the given amounts were redeemed/borrowed"
      },
      "liquidateBorrowAllowed(address,address,address,address,uint256)": {
        "notice": "Checks if the liquidation should be allowed to occur"
      },
      "liquidateBorrowVerify(address,address,address,address,uint256,uint256)": {
        "notice": "Validates liquidateBorrow and reverts on rejection. May emit logs."
      },
      "liquidateCalculateSeizeTokens(address,address,uint256)": {
        "notice": "Calculate number of tokens of collateral asset to seize given an underlying amount"
      },
      "mintAllowed(address,address,uint256)": {
        "notice": "Checks if the account should be allowed to mint tokens in the given market"
      },
      "mintVerify(address,address,uint256,uint256)": {
        "notice": "Validates mint and reverts on rejection. May emit logs."
      },
      "redeemAllowed(address,address,uint256)": {
        "notice": "Checks if the account should be allowed to redeem tokens in the given market"
      },
      "redeemVerify(address,address,uint256,uint256)": {
        "notice": "Validates redeem and reverts on rejection. May emit logs."
      },
      "repayBorrowAllowed(address,address,address,uint256)": {
        "notice": "Checks if the account should be allowed to repay a borrow in the given market"
      },
      "repayBorrowVerify(address,address,address,uint256,uint256)": {
        "notice": "Validates repayBorrow and reverts on rejection. May emit logs."
      },
      "seizeAllowed(address,address,address,address,uint256)": {
        "notice": "Checks if the seizing of assets should be allowed to occur"
      },
      "seizeVerify(address,address,address,address,uint256)": {
        "notice": "Validates seize and reverts on rejection. May emit logs."
      },
      "transferAllowed(address,address,address,uint256)": {
        "notice": "Checks if the account should be allowed to transfer tokens in the given market"
      },
      "transferVerify(address,address,address,uint256)": {
        "notice": "Validates transfer and reverts on rejection. May emit logs."
      }
    }
  }
}